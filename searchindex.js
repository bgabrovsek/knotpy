Search.setIndex({"docnames": ["auto_examples/basic/example", "auto_examples/basic/index", "auto_examples/basic/plot_drawing", "auto_examples/basic/sg_execution_times", "auto_examples/index", "auto_examples/notation/example_notations", "auto_examples/notation/index", "auto_examples/notation/sg_execution_times", "auto_examples/sg_execution_times", "index", "install", "reference/generated/knotpy.algorithms", "reference/generated/knotpy.algorithms.canonical", "reference/generated/knotpy.algorithms.components", "reference/generated/knotpy.algorithms.components.add_unknot_in_place", "reference/generated/knotpy.algorithms.components.cut_sets", "reference/generated/knotpy.algorithms.components.disjoint_components", "reference/generated/knotpy.algorithms.components.disjoint_components_nodes", "reference/generated/knotpy.algorithms.components.disjoint_sum", "reference/generated/knotpy.algorithms.components.is_connected_sum", "reference/generated/knotpy.algorithms.components.is_connected_sum_third_order", "reference/generated/knotpy.algorithms.components.link_components_endpoints", "reference/generated/knotpy.algorithms.components.number_of_disjoint_components", "reference/generated/knotpy.algorithms.components.number_of_link_components", "reference/generated/knotpy.algorithms.faces", "reference/generated/knotpy.algorithms.faces.check_faces_sanity", "reference/generated/knotpy.algorithms.faces.choose_kink", "reference/generated/knotpy.algorithms.faces.choose_poke", "reference/generated/knotpy.algorithms.faces.pokes", "reference/generated/knotpy.algorithms.faces.triangles_nonalternating", "reference/generated/knotpy.algorithms.node_algorithms", "reference/generated/knotpy.algorithms.node_algorithms.add_node_to", "reference/generated/knotpy.algorithms.node_algorithms.degree_sequence", "reference/generated/knotpy.algorithms.node_algorithms.name_for_new_node", "reference/generated/knotpy.algorithms.node_algorithms.name_for_next_node_generator", "reference/generated/knotpy.algorithms.node_algorithms.permute_node", "reference/generated/knotpy.algorithms.node_algorithms.relabel_nodes", "reference/generated/knotpy.algorithms.orientation", "reference/generated/knotpy.algorithms.orientation.all_orientations", "reference/generated/knotpy.algorithms.skein", "reference/generated/knotpy.algorithms.skein.smoothing_type_A", "reference/generated/knotpy.algorithms.skein.smoothing_type_B", "reference/generated/knotpy.algorithms.structure", "reference/generated/knotpy.algorithms.structure.articulation_nodes", "reference/generated/knotpy.algorithms.structure.bridges", "reference/generated/knotpy.algorithms.structure.cut_edges", "reference/generated/knotpy.algorithms.structure.cut_vertices", "reference/generated/knotpy.algorithms.structure.edges", "reference/generated/knotpy.algorithms.structure.kink_region_iterator", "reference/generated/knotpy.algorithms.structure.kinks", "reference/generated/knotpy.algorithms.structure.loops", "reference/generated/knotpy.algorithms.structure.number_of_edges", "reference/generated/knotpy.algorithms.structure.parallel_arcs", "reference/generated/knotpy.algorithms.structure.path_from_endpoint", "reference/generated/knotpy.algorithms.symmetry", "reference/generated/knotpy.algorithms.symmetry.mirror", "reference/generated/knotpy.algorithms.tangle_algorithms", "reference/generated/knotpy.algorithms.tangle_algorithms.insert_tangle", "reference/generated/knotpy.algorithms.tangle_algorithms.insert_tangles_from", "reference/generated/knotpy.algorithms.tests", "reference/generated/knotpy.algorithms.tests.test_components", "reference/generated/knotpy.algorithms.tests.test_components.TestComponents", "reference/generated/knotpy.algorithms.tests.test_tangle", "reference/generated/knotpy.algorithms.tests.test_tangle.TestTangles", "reference/generated/knotpy.classes", "reference/generated/knotpy.classes.bondedknot", "reference/generated/knotpy.classes.bondedknot.BondedKnot", "reference/generated/knotpy.classes.endpoint", "reference/generated/knotpy.classes.endpoint.Endpoint", "reference/generated/knotpy.classes.endpoint.IngoingEndpoint", "reference/generated/knotpy.classes.endpoint.OutgoingEndpoint", "reference/generated/knotpy.classes.knot", "reference/generated/knotpy.classes.knot.Knot", "reference/generated/knotpy.classes.knot.OrientedKnot", "reference/generated/knotpy.classes.knotoid", "reference/generated/knotpy.classes.knotoid.Knotoid", "reference/generated/knotpy.classes.node", "reference/generated/knotpy.classes.node.Node", "reference/generated/knotpy.classes.orientedknot", "reference/generated/knotpy.classes.planardiagram", "reference/generated/knotpy.classes.planardiagram.PlanarDiagram", "reference/generated/knotpy.classes.planargraph", "reference/generated/knotpy.classes.planargraph.OrientedPlanarGraph", "reference/generated/knotpy.classes.planargraph.PlanarGraph", "reference/generated/knotpy.classes.spatialgraph", "reference/generated/knotpy.classes.spatialgraph.OrientedSpatialGraph", "reference/generated/knotpy.classes.spatialgraph.SpatialGraph", "reference/generated/knotpy.classes.tangle", "reference/generated/knotpy.classes.tangle.Tangle", "reference/generated/knotpy.classes.tests", "reference/generated/knotpy.classes.tests.endpoint_tests", "reference/generated/knotpy.classes.views", "reference/generated/knotpy.classes.views.ArcView", "reference/generated/knotpy.classes.views.EndpointView", "reference/generated/knotpy.classes.views.FaceView", "reference/generated/knotpy.classes.views.FilteredNodeView", "reference/generated/knotpy.classes.views.NodeView", "reference/generated/knotpy.drawing", "reference/generated/knotpy.drawing.circlepack", "reference/generated/knotpy.drawing.circlepack.CirclePack", "reference/generated/knotpy.drawing.circlepack.InvertAround", "reference/generated/knotpy.drawing.circlepack.InvertPacking", "reference/generated/knotpy.drawing.circlepack.NormalizePacking", "reference/generated/knotpy.drawing.circlepack.acxyz", "reference/generated/knotpy.drawing.circlepack.flower", "reference/generated/knotpy.drawing.circlepack.place", "reference/generated/knotpy.drawing.circlepack.testgrid", "reference/generated/knotpy.drawing.draw_matplotlib", "reference/generated/knotpy.drawing.draw_matplotlib.Arrow", "reference/generated/knotpy.drawing.draw_matplotlib.average_color", "reference/generated/knotpy.drawing.draw_matplotlib.draw", "reference/generated/knotpy.drawing.draw_matplotlib.draw_from_layout", "reference/generated/knotpy.drawing.draw_matplotlib.export_pdf", "reference/generated/knotpy.drawing.draw_matplotlib.to_color", "reference/generated/knotpy.drawing.layout", "reference/generated/knotpy.drawing.layout.bezier", "reference/generated/knotpy.drawing.layout.circlepack_layout", "reference/generated/knotpy.drawing.layout.preprocess_diagram", "reference/generated/knotpy.drawing.test", "reference/generated/knotpy.drawing.test.plot_circles", "reference/generated/knotpy.drawing.test2", "reference/generated/knotpy.generate", "reference/generated/knotpy.generate.conversions", "reference/generated/knotpy.generate.conversions.orientations", "reference/generated/knotpy.generate.example", "reference/generated/knotpy.generate.example.example_spatial_graph", "reference/generated/knotpy.generate.example.handcuff_theta", "reference/generated/knotpy.generate.example.oriented_trefoil", "reference/generated/knotpy.generate.example.trefoil_knot", "reference/generated/knotpy.generate.example.trefoil_theta", "reference/generated/knotpy.generate.generate_planar_graphs", "reference/generated/knotpy.generate.generate_planar_graphs.generate_planar_graphs", "reference/generated/knotpy.generate.generate_planar_graphs.sort_graphs", "reference/generated/knotpy.generate.simple", "reference/generated/knotpy.generate.simple.empty_knot", "reference/generated/knotpy.generate.simple.parallel_edge", "reference/generated/knotpy.generate.simple_tangles", "reference/generated/knotpy.generate.simple_tangles.horizontal_tangle", "reference/generated/knotpy.generate.simple_tangles.integer_tangle", "reference/generated/knotpy.generate.simple_tangles.vertical_tangle", "reference/generated/knotpy.invariants", "reference/generated/knotpy.invariants.bracket", "reference/generated/knotpy.invariants.bracket.bracket_polynomial", "reference/generated/knotpy.invariants.module", "reference/generated/knotpy.invariants.module.Module", "reference/generated/knotpy.invariants.yamada", "reference/generated/knotpy.invariants.yamada.yamada", "reference/generated/knotpy.manipulation", "reference/generated/knotpy.manipulation.elementary", "reference/generated/knotpy.manipulation.elementary.copy_and_move_arc", "reference/generated/knotpy.manipulation.phantom", "reference/generated/knotpy.manipulation.phantom.insert_phantom_node", "reference/generated/knotpy.manipulation.phantom.insert_phantom_nodes_on_internal_arcs", "reference/generated/knotpy.manipulation.phantom.is_node_phantom", "reference/generated/knotpy.manipulation.reidemeister", "reference/generated/knotpy.manipulation.reidemeister.add_kink", "reference/generated/knotpy.manipulation.reidemeister.reidemeister_3", "reference/generated/knotpy.manipulation.reidemeister.remove_kink", "reference/generated/knotpy.manipulation.reidemeister.remove_poke", "reference/generated/knotpy.manipulation.simplification", "reference/generated/knotpy.manipulation.simplification.simplify", "reference/generated/knotpy.notation", "reference/generated/knotpy.notation.dispatcher", "reference/generated/knotpy.notation.dispatcher.from_notation_dispatcher", "reference/generated/knotpy.notation.dispatcher.to_notation_dispatcher", "reference/generated/knotpy.notation.em", "reference/generated/knotpy.notation.em.from_condensed_em_notation", "reference/generated/knotpy.notation.em.from_em_notation", "reference/generated/knotpy.notation.em.to_condensed_em_notation", "reference/generated/knotpy.notation.em.to_em_notation", "reference/generated/knotpy.notation.native", "reference/generated/knotpy.notation.native.from_knotpy_notation", "reference/generated/knotpy.notation.native.to_knotpy_notation", "reference/generated/knotpy.notation.pd", "reference/generated/knotpy.notation.pd.from_pd_notation", "reference/generated/knotpy.notation.pd.to_pd_notation", "reference/generated/knotpy.notation.plantri", "reference/generated/knotpy.notation.plantri.from_plantri_notation", "reference/generated/knotpy.notation.plantri.to_plantri_notation", "reference/generated/knotpy.notation.tests", "reference/generated/knotpy.notation.tests.test_notation", "reference/generated/knotpy.readwrite", "reference/generated/knotpy.readwrite.cleanopen", "reference/generated/knotpy.readwrite.cleanopen.prepend_to_extension", "reference/generated/knotpy.readwrite.text", "reference/generated/knotpy.readwrite.text.loadtxt_iterator", "reference/generated/knotpy.readwrite.text.loadtxt_multiple", "reference/generated/knotpy.readwrite.text.save_txt", "reference/generated/knotpy.utils", "reference/generated/knotpy.utils.combinatorics", "reference/generated/knotpy.utils.combinatorics.combinations_with_limited_repetitions", "reference/generated/knotpy.utils.combinatorics.iterable_depth", "reference/generated/knotpy.utils.combinatorics.lexicographical_minimal_cyclic_rotation_shift", "reference/generated/knotpy.utils.combinatorics.parted_permutations", "reference/generated/knotpy.utils.combinatorics.union", "reference/generated/knotpy.utils.decorators", "reference/generated/knotpy.utils.decorators.multi_variable_invariant", "reference/generated/knotpy.utils.decorators.total_ordering_py3", "reference/generated/knotpy.utils.dict_utils", "reference/generated/knotpy.utils.dict_utils.compare_dicts", "reference/generated/knotpy.utils.dict_utils.identitydict", "reference/generated/knotpy.utils.dict_utils.inverse_dict", "reference/generated/knotpy.utils.dict_utils.inverse_multi_dict", "reference/generated/knotpy.utils.equivalence", "reference/generated/knotpy.utils.equivalence.EquivalenceRelation", "reference/generated/knotpy.utils.exception", "reference/generated/knotpy.utils.exception.KnotPyException", "reference/generated/knotpy.utils.geometry", "reference/generated/knotpy.utils.geometry.BoundingBox", "reference/generated/knotpy.utils.geometry.Circle", "reference/generated/knotpy.utils.geometry.CircularArc", "reference/generated/knotpy.utils.geometry.Line", "reference/generated/knotpy.utils.geometry.Segment", "reference/generated/knotpy.utils.geometry.antipode", "reference/generated/knotpy.utils.geometry.bisect", "reference/generated/knotpy.utils.geometry.bisector", "reference/generated/knotpy.utils.geometry.bounding_box", "reference/generated/knotpy.utils.geometry.circle_through_points", "reference/generated/knotpy.utils.geometry.inverse_point_through_circle", "reference/generated/knotpy.utils.geometry.is_angle_between", "reference/generated/knotpy.utils.geometry.middle", "reference/generated/knotpy.utils.geometry.perpendicular_arc", "reference/generated/knotpy.utils.geometry.perpendicular_arc_through_point", "reference/generated/knotpy.utils.geometry.perpendicular_line", "reference/generated/knotpy.utils.geometry.split", "reference/generated/knotpy.utils.geometry.tangent_line", "reference/generated/knotpy.utils.string_utils", "reference/generated/knotpy.utils.string_utils.multi_replace", "reference/generated/knotpy.utils.string_utils.nested_split", "reference/generated/knotpy.utils.string_utils.string_to_nested_tuple_with_prefixes", "reference/index", "sg_execution_times", "tutorial"], "filenames": ["auto_examples/basic/example.rst", "auto_examples/basic/index.rst", "auto_examples/basic/plot_drawing.rst", "auto_examples/basic/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/notation/example_notations.rst", "auto_examples/notation/index.rst", "auto_examples/notation/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "index.rst", "install.rst", "reference/generated/knotpy.algorithms.rst", "reference/generated/knotpy.algorithms.canonical.rst", "reference/generated/knotpy.algorithms.components.rst", "reference/generated/knotpy.algorithms.components.add_unknot_in_place.rst", "reference/generated/knotpy.algorithms.components.cut_sets.rst", "reference/generated/knotpy.algorithms.components.disjoint_components.rst", "reference/generated/knotpy.algorithms.components.disjoint_components_nodes.rst", "reference/generated/knotpy.algorithms.components.disjoint_sum.rst", "reference/generated/knotpy.algorithms.components.is_connected_sum.rst", "reference/generated/knotpy.algorithms.components.is_connected_sum_third_order.rst", "reference/generated/knotpy.algorithms.components.link_components_endpoints.rst", "reference/generated/knotpy.algorithms.components.number_of_disjoint_components.rst", "reference/generated/knotpy.algorithms.components.number_of_link_components.rst", "reference/generated/knotpy.algorithms.faces.rst", "reference/generated/knotpy.algorithms.faces.check_faces_sanity.rst", "reference/generated/knotpy.algorithms.faces.choose_kink.rst", "reference/generated/knotpy.algorithms.faces.choose_poke.rst", "reference/generated/knotpy.algorithms.faces.pokes.rst", "reference/generated/knotpy.algorithms.faces.triangles_nonalternating.rst", "reference/generated/knotpy.algorithms.node_algorithms.rst", "reference/generated/knotpy.algorithms.node_algorithms.add_node_to.rst", "reference/generated/knotpy.algorithms.node_algorithms.degree_sequence.rst", "reference/generated/knotpy.algorithms.node_algorithms.name_for_new_node.rst", "reference/generated/knotpy.algorithms.node_algorithms.name_for_next_node_generator.rst", "reference/generated/knotpy.algorithms.node_algorithms.permute_node.rst", "reference/generated/knotpy.algorithms.node_algorithms.relabel_nodes.rst", "reference/generated/knotpy.algorithms.orientation.rst", "reference/generated/knotpy.algorithms.orientation.all_orientations.rst", "reference/generated/knotpy.algorithms.skein.rst", "reference/generated/knotpy.algorithms.skein.smoothing_type_A.rst", "reference/generated/knotpy.algorithms.skein.smoothing_type_B.rst", "reference/generated/knotpy.algorithms.structure.rst", "reference/generated/knotpy.algorithms.structure.articulation_nodes.rst", "reference/generated/knotpy.algorithms.structure.bridges.rst", "reference/generated/knotpy.algorithms.structure.cut_edges.rst", "reference/generated/knotpy.algorithms.structure.cut_vertices.rst", "reference/generated/knotpy.algorithms.structure.edges.rst", "reference/generated/knotpy.algorithms.structure.kink_region_iterator.rst", "reference/generated/knotpy.algorithms.structure.kinks.rst", "reference/generated/knotpy.algorithms.structure.loops.rst", "reference/generated/knotpy.algorithms.structure.number_of_edges.rst", "reference/generated/knotpy.algorithms.structure.parallel_arcs.rst", "reference/generated/knotpy.algorithms.structure.path_from_endpoint.rst", "reference/generated/knotpy.algorithms.symmetry.rst", "reference/generated/knotpy.algorithms.symmetry.mirror.rst", "reference/generated/knotpy.algorithms.tangle_algorithms.rst", "reference/generated/knotpy.algorithms.tangle_algorithms.insert_tangle.rst", "reference/generated/knotpy.algorithms.tangle_algorithms.insert_tangles_from.rst", "reference/generated/knotpy.algorithms.tests.rst", "reference/generated/knotpy.algorithms.tests.test_components.rst", "reference/generated/knotpy.algorithms.tests.test_components.TestComponents.rst", "reference/generated/knotpy.algorithms.tests.test_tangle.rst", "reference/generated/knotpy.algorithms.tests.test_tangle.TestTangles.rst", "reference/generated/knotpy.classes.rst", "reference/generated/knotpy.classes.bondedknot.rst", "reference/generated/knotpy.classes.bondedknot.BondedKnot.rst", "reference/generated/knotpy.classes.endpoint.rst", "reference/generated/knotpy.classes.endpoint.Endpoint.rst", "reference/generated/knotpy.classes.endpoint.IngoingEndpoint.rst", "reference/generated/knotpy.classes.endpoint.OutgoingEndpoint.rst", "reference/generated/knotpy.classes.knot.rst", "reference/generated/knotpy.classes.knot.Knot.rst", "reference/generated/knotpy.classes.knot.OrientedKnot.rst", "reference/generated/knotpy.classes.knotoid.rst", "reference/generated/knotpy.classes.knotoid.Knotoid.rst", "reference/generated/knotpy.classes.node.rst", "reference/generated/knotpy.classes.node.Node.rst", "reference/generated/knotpy.classes.orientedknot.rst", "reference/generated/knotpy.classes.planardiagram.rst", "reference/generated/knotpy.classes.planardiagram.PlanarDiagram.rst", "reference/generated/knotpy.classes.planargraph.rst", "reference/generated/knotpy.classes.planargraph.OrientedPlanarGraph.rst", "reference/generated/knotpy.classes.planargraph.PlanarGraph.rst", "reference/generated/knotpy.classes.spatialgraph.rst", "reference/generated/knotpy.classes.spatialgraph.OrientedSpatialGraph.rst", "reference/generated/knotpy.classes.spatialgraph.SpatialGraph.rst", "reference/generated/knotpy.classes.tangle.rst", "reference/generated/knotpy.classes.tangle.Tangle.rst", "reference/generated/knotpy.classes.tests.rst", "reference/generated/knotpy.classes.tests.endpoint_tests.rst", "reference/generated/knotpy.classes.views.rst", "reference/generated/knotpy.classes.views.ArcView.rst", "reference/generated/knotpy.classes.views.EndpointView.rst", "reference/generated/knotpy.classes.views.FaceView.rst", "reference/generated/knotpy.classes.views.FilteredNodeView.rst", "reference/generated/knotpy.classes.views.NodeView.rst", "reference/generated/knotpy.drawing.rst", "reference/generated/knotpy.drawing.circlepack.rst", "reference/generated/knotpy.drawing.circlepack.CirclePack.rst", "reference/generated/knotpy.drawing.circlepack.InvertAround.rst", "reference/generated/knotpy.drawing.circlepack.InvertPacking.rst", "reference/generated/knotpy.drawing.circlepack.NormalizePacking.rst", "reference/generated/knotpy.drawing.circlepack.acxyz.rst", "reference/generated/knotpy.drawing.circlepack.flower.rst", "reference/generated/knotpy.drawing.circlepack.place.rst", "reference/generated/knotpy.drawing.circlepack.testgrid.rst", "reference/generated/knotpy.drawing.draw_matplotlib.rst", "reference/generated/knotpy.drawing.draw_matplotlib.Arrow.rst", "reference/generated/knotpy.drawing.draw_matplotlib.average_color.rst", "reference/generated/knotpy.drawing.draw_matplotlib.draw.rst", "reference/generated/knotpy.drawing.draw_matplotlib.draw_from_layout.rst", "reference/generated/knotpy.drawing.draw_matplotlib.export_pdf.rst", "reference/generated/knotpy.drawing.draw_matplotlib.to_color.rst", "reference/generated/knotpy.drawing.layout.rst", "reference/generated/knotpy.drawing.layout.bezier.rst", "reference/generated/knotpy.drawing.layout.circlepack_layout.rst", "reference/generated/knotpy.drawing.layout.preprocess_diagram.rst", "reference/generated/knotpy.drawing.test.rst", "reference/generated/knotpy.drawing.test.plot_circles.rst", "reference/generated/knotpy.drawing.test2.rst", "reference/generated/knotpy.generate.rst", "reference/generated/knotpy.generate.conversions.rst", "reference/generated/knotpy.generate.conversions.orientations.rst", "reference/generated/knotpy.generate.example.rst", "reference/generated/knotpy.generate.example.example_spatial_graph.rst", "reference/generated/knotpy.generate.example.handcuff_theta.rst", "reference/generated/knotpy.generate.example.oriented_trefoil.rst", "reference/generated/knotpy.generate.example.trefoil_knot.rst", "reference/generated/knotpy.generate.example.trefoil_theta.rst", "reference/generated/knotpy.generate.generate_planar_graphs.rst", "reference/generated/knotpy.generate.generate_planar_graphs.generate_planar_graphs.rst", "reference/generated/knotpy.generate.generate_planar_graphs.sort_graphs.rst", "reference/generated/knotpy.generate.simple.rst", "reference/generated/knotpy.generate.simple.empty_knot.rst", "reference/generated/knotpy.generate.simple.parallel_edge.rst", "reference/generated/knotpy.generate.simple_tangles.rst", "reference/generated/knotpy.generate.simple_tangles.horizontal_tangle.rst", "reference/generated/knotpy.generate.simple_tangles.integer_tangle.rst", "reference/generated/knotpy.generate.simple_tangles.vertical_tangle.rst", "reference/generated/knotpy.invariants.rst", "reference/generated/knotpy.invariants.bracket.rst", "reference/generated/knotpy.invariants.bracket.bracket_polynomial.rst", "reference/generated/knotpy.invariants.module.rst", "reference/generated/knotpy.invariants.module.Module.rst", "reference/generated/knotpy.invariants.yamada.rst", "reference/generated/knotpy.invariants.yamada.yamada.rst", "reference/generated/knotpy.manipulation.rst", "reference/generated/knotpy.manipulation.elementary.rst", "reference/generated/knotpy.manipulation.elementary.copy_and_move_arc.rst", "reference/generated/knotpy.manipulation.phantom.rst", "reference/generated/knotpy.manipulation.phantom.insert_phantom_node.rst", "reference/generated/knotpy.manipulation.phantom.insert_phantom_nodes_on_internal_arcs.rst", "reference/generated/knotpy.manipulation.phantom.is_node_phantom.rst", "reference/generated/knotpy.manipulation.reidemeister.rst", "reference/generated/knotpy.manipulation.reidemeister.add_kink.rst", "reference/generated/knotpy.manipulation.reidemeister.reidemeister_3.rst", "reference/generated/knotpy.manipulation.reidemeister.remove_kink.rst", "reference/generated/knotpy.manipulation.reidemeister.remove_poke.rst", "reference/generated/knotpy.manipulation.simplification.rst", "reference/generated/knotpy.manipulation.simplification.simplify.rst", "reference/generated/knotpy.notation.rst", "reference/generated/knotpy.notation.dispatcher.rst", "reference/generated/knotpy.notation.dispatcher.from_notation_dispatcher.rst", "reference/generated/knotpy.notation.dispatcher.to_notation_dispatcher.rst", "reference/generated/knotpy.notation.em.rst", "reference/generated/knotpy.notation.em.from_condensed_em_notation.rst", "reference/generated/knotpy.notation.em.from_em_notation.rst", "reference/generated/knotpy.notation.em.to_condensed_em_notation.rst", "reference/generated/knotpy.notation.em.to_em_notation.rst", "reference/generated/knotpy.notation.native.rst", "reference/generated/knotpy.notation.native.from_knotpy_notation.rst", "reference/generated/knotpy.notation.native.to_knotpy_notation.rst", "reference/generated/knotpy.notation.pd.rst", "reference/generated/knotpy.notation.pd.from_pd_notation.rst", "reference/generated/knotpy.notation.pd.to_pd_notation.rst", "reference/generated/knotpy.notation.plantri.rst", "reference/generated/knotpy.notation.plantri.from_plantri_notation.rst", "reference/generated/knotpy.notation.plantri.to_plantri_notation.rst", "reference/generated/knotpy.notation.tests.rst", "reference/generated/knotpy.notation.tests.test_notation.rst", "reference/generated/knotpy.readwrite.rst", "reference/generated/knotpy.readwrite.cleanopen.rst", "reference/generated/knotpy.readwrite.cleanopen.prepend_to_extension.rst", "reference/generated/knotpy.readwrite.text.rst", "reference/generated/knotpy.readwrite.text.loadtxt_iterator.rst", "reference/generated/knotpy.readwrite.text.loadtxt_multiple.rst", "reference/generated/knotpy.readwrite.text.save_txt.rst", "reference/generated/knotpy.utils.rst", "reference/generated/knotpy.utils.combinatorics.rst", "reference/generated/knotpy.utils.combinatorics.combinations_with_limited_repetitions.rst", "reference/generated/knotpy.utils.combinatorics.iterable_depth.rst", "reference/generated/knotpy.utils.combinatorics.lexicographical_minimal_cyclic_rotation_shift.rst", "reference/generated/knotpy.utils.combinatorics.parted_permutations.rst", "reference/generated/knotpy.utils.combinatorics.union.rst", "reference/generated/knotpy.utils.decorators.rst", "reference/generated/knotpy.utils.decorators.multi_variable_invariant.rst", "reference/generated/knotpy.utils.decorators.total_ordering_py3.rst", "reference/generated/knotpy.utils.dict_utils.rst", "reference/generated/knotpy.utils.dict_utils.compare_dicts.rst", "reference/generated/knotpy.utils.dict_utils.identitydict.rst", "reference/generated/knotpy.utils.dict_utils.inverse_dict.rst", "reference/generated/knotpy.utils.dict_utils.inverse_multi_dict.rst", "reference/generated/knotpy.utils.equivalence.rst", "reference/generated/knotpy.utils.equivalence.EquivalenceRelation.rst", "reference/generated/knotpy.utils.exception.rst", "reference/generated/knotpy.utils.exception.KnotPyException.rst", "reference/generated/knotpy.utils.geometry.rst", "reference/generated/knotpy.utils.geometry.BoundingBox.rst", "reference/generated/knotpy.utils.geometry.Circle.rst", "reference/generated/knotpy.utils.geometry.CircularArc.rst", "reference/generated/knotpy.utils.geometry.Line.rst", "reference/generated/knotpy.utils.geometry.Segment.rst", "reference/generated/knotpy.utils.geometry.antipode.rst", "reference/generated/knotpy.utils.geometry.bisect.rst", "reference/generated/knotpy.utils.geometry.bisector.rst", "reference/generated/knotpy.utils.geometry.bounding_box.rst", "reference/generated/knotpy.utils.geometry.circle_through_points.rst", "reference/generated/knotpy.utils.geometry.inverse_point_through_circle.rst", "reference/generated/knotpy.utils.geometry.is_angle_between.rst", "reference/generated/knotpy.utils.geometry.middle.rst", "reference/generated/knotpy.utils.geometry.perpendicular_arc.rst", "reference/generated/knotpy.utils.geometry.perpendicular_arc_through_point.rst", "reference/generated/knotpy.utils.geometry.perpendicular_line.rst", "reference/generated/knotpy.utils.geometry.split.rst", "reference/generated/knotpy.utils.geometry.tangent_line.rst", "reference/generated/knotpy.utils.string_utils.rst", "reference/generated/knotpy.utils.string_utils.multi_replace.rst", "reference/generated/knotpy.utils.string_utils.nested_split.rst", "reference/generated/knotpy.utils.string_utils.string_to_nested_tuple_with_prefixes.rst", "reference/index.rst", "sg_execution_times.rst", "tutorial.rst"], "titles": ["Spatial graph example", "Basic", "Drawing example", "Computation times", "Examples", "Parsing knots", "Notation", "Computation times", "Computation times", "KnotPy", "Install", "algorithms", "canonical", "components", "add_unknot_in_place", "cut_sets", "disjoint_components", "disjoint_components_nodes", "disjoint_sum", "is_connected_sum", "is_connected_sum_third_order", "link_components_endpoints", "number_of_disjoint_components", "number_of_link_components", "faces", "check_faces_sanity", "choose_kink", "choose_poke", "pokes", "triangles_nonalternating", "node_algorithms", "add_node_to", "degree_sequence", "name_for_new_node", "name_for_next_node_generator", "permute_node", "relabel_nodes", "orientation", "all_orientations", "skein", "smoothing_type_A", "smoothing_type_B", "structure", "articulation_nodes", "bridges", "cut_edges", "cut_vertices", "edges", "kink_region_iterator", "kinks", "loops", "number_of_edges", "parallel_arcs", "path_from_endpoint", "symmetry", "mirror", "tangle_algorithms", "insert_tangle", "insert_tangles_from", "tests", "test_components", "TestComponents", "test_tangle", "TestTangles", "classes", "bondedknot", "BondedKnot", "endpoint", "Endpoint", "IngoingEndpoint", "OutgoingEndpoint", "knot", "Knot", "OrientedKnot", "knotoid", "Knotoid", "node", "Node", "orientedknot", "planardiagram", "PlanarDiagram", "planargraph", "OrientedPlanarGraph", "PlanarGraph", "spatialgraph", "OrientedSpatialGraph", "SpatialGraph", "tangle", "Tangle", "tests", "endpoint_tests", "views", "ArcView", "EndpointView", "FaceView", "FilteredNodeView", "NodeView", "drawing", "circlepack", "CirclePack", "InvertAround", "InvertPacking", "NormalizePacking", "acxyz", "flower", "place", "testgrid", "draw_matplotlib", "Arrow", "average_color", "draw", "draw_from_layout", "export_pdf", "to_color", "layout", "bezier", "circlepack_layout", "preprocess_diagram", "test", "plot_circles", "test2", "generate", "conversions", "orientations", "example", "example_spatial_graph", "handcuff_theta", "oriented_trefoil", "trefoil_knot", "trefoil_theta", "generate_planar_graphs", "generate_planar_graphs", "sort_graphs", "simple", "empty_knot", "parallel_edge", "simple_tangles", "horizontal_tangle", "integer_tangle", "vertical_tangle", "invariants", "bracket", "bracket_polynomial", "module", "Module", "yamada", "yamada", "manipulation", "elementary", "copy_and_move_arc", "phantom", "insert_phantom_node", "insert_phantom_nodes_on_internal_arcs", "is_node_phantom", "reidemeister", "add_kink", "reidemeister_3", "remove_kink", "remove_poke", "simplification", "simplify", "notation", "dispatcher", "from_notation_dispatcher", "to_notation_dispatcher", "em", "from_condensed_em_notation", "from_em_notation", "to_condensed_em_notation", "to_em_notation", "native", "from_knotpy_notation", "to_knotpy_notation", "pd", "from_pd_notation", "to_pd_notation", "plantri", "from_plantri_notation", "to_plantri_notation", "tests", "test_notation", "readwrite", "cleanopen", "prepend_to_extension", "text", "loadtxt_iterator", "loadtxt_multiple", "save_txt", "utils", "combinatorics", "combinations_with_limited_repetitions", "iterable_depth", "lexicographical_minimal_cyclic_rotation_shift", "parted_permutations", "union", "decorators", "multi_variable_invariant", "total_ordering_py3", "dict_utils", "compare_dicts", "identitydict", "inverse_dict", "inverse_multi_dict", "equivalence", "EquivalenceRelation", "exception", "KnotPyException", "geometry", "BoundingBox", "Circle", "CircularArc", "Line", "Segment", "antipode", "bisect", "bisector", "bounding_box", "circle_through_points", "inverse_point_through_circle", "is_angle_between", "middle", "perpendicular_arc", "perpendicular_arc_through_point", "perpendicular_line", "split", "tangent_line", "string_utils", "multi_replace", "nested_split", "string_to_nested_tuple_with_prefixes", "Reference", "Computation times", "Tutorial"], "terms": {"go": [0, 2, 5], "end": [0, 2, 5, 108, 221], "download": [0, 2, 4, 5], "full": [0, 2, 5], "code": [0, 2, 4, 5, 9, 168, 169, 174, 176, 177, 178], "A": [0, 2, 8, 9, 15, 40, 41, 43, 44, 47, 49, 50, 53, 66, 72, 73, 75, 80, 83, 85, 86, 88, 98, 110, 116, 141, 142, 145, 146, 149, 165, 211, 212, 217], "short": [0, 2], "descript": [0, 2, 174, 218], "what": [0, 2], "doe": [0, 2, 15, 35, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 200, 204], "import": [0, 2, 5], "knotpi": [0, 4, 5, 10, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 170, 172, 205], "kp": [0, 5], "from": [0, 2, 3, 5, 7, 8, 9, 10, 47, 53, 58, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 99, 107, 108, 131, 149, 152, 174, 177, 197, 199, 200, 204, 218, 221, 231], "gener": [0, 2, 4, 5, 28, 29, 48, 130, 131, 133], "example_spatial_graph": [0, 5], "g": [0, 13, 19, 20, 23, 25, 32, 36, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 106, 131, 146, 150, 168, 169, 178, 185, 186, 191, 193, 208, 214, 220, 224, 229], "print": [0, 5], "jupyt": [0, 2, 4, 5], "notebook": [0, 2, 4, 5], "ipynb": [0, 2, 5], "python": [0, 2, 4, 5, 9, 10, 172, 230], "sourc": [0, 2, 4, 5, 9], "py": [0, 2, 3, 5, 7, 98, 231], "galleri": [0, 2, 4, 5, 231], "sphinx": [0, 2, 4, 5], "spatial": [1, 3, 4, 9, 47, 231], "graph": [1, 3, 4, 5, 9, 15, 33, 34, 43, 47, 58, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 91, 107, 114, 130, 131, 132, 134, 135, 165, 167, 177, 231], "exampl": [1, 3, 5, 7, 8, 15, 35, 47, 57, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 149, 165, 170, 172, 177, 178, 218, 227, 228, 231], "draw": [1, 3, 4, 107, 112, 114, 115, 231], "draw_matplotlib": 2, "nativ": [2, 165, 172], "from_knotpy_not": 2, "matplotlib": [2, 110, 112], "pyplot": 2, "plt": 2, "load": 2, "intern": [2, 99, 104, 105], "represent": 2, "": [2, 92, 93, 94, 95, 96, 112, 165, 200, 204, 215], "orientedspatialgraph": 2, "name": [2, 9, 13, 33, 34, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 112, 170, 172, 174], "t0_1": 2, "0": [2, 3, 7, 8, 18, 35, 47, 57, 58, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 102, 145, 165, 170, 172, 173, 174, 193, 199, 218, 231], "vertex": [2, 13, 25, 43, 47, 52, 53, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 145, 151, 170, 172, 173], "outgoingendpoint": [2, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "b": [2, 18, 35, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 149, 165, 170, 172, 173, 174, 193, 211, 212, 217, 228], "color": [2, 47, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 170, 172], "1": [2, 5, 7, 13, 18, 23, 35, 47, 57, 58, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 102, 115, 141, 145, 165, 170, 173, 174, 191, 193, 199, 221, 229], "2": [2, 3, 5, 13, 23, 27, 35, 57, 58, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 115, 141, 145, 165, 170, 173, 174, 191, 193, 200, 204, 218, 219, 221, 229], "ingoingendpoint": [2, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "k": [2, 5, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 92, 93, 94, 95, 96, 98, 100, 102, 105, 106, 110, 111, 112, 116, 117, 123, 142, 145, 149, 151, 152, 153, 155, 156, 157, 158, 160, 165, 170, 172, 175, 187, 200, 204], "perform": [2, 29, 156, 157, 158, 218], "some": [2, 131, 133], "oper": 2, "permute_nod": [2, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "a0i": [2, 149], "b0o": 2, "a1i": 2, "b2o": 2, "a2i": 2, "b1o": 2, "know": 2, "us": [2, 9, 10, 58, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 100, 110, 112, 131, 150, 165, 177], "show": 2, "draw_circl": [2, 110, 111, 112], "true": [2, 19, 20, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 92, 93, 94, 95, 96, 110, 111, 112, 115, 131, 160, 177, 185, 186, 187, 219], "with_label": [2, 110, 111, 112], "with_titl": [2, 110, 111, 112], "total": [2, 3, 7, 8, 197, 231], "run": [2, 10], "time": 2, "script": 2, "minut": 2, "089": [2, 3, 231], "second": [2, 196, 199], "plot_draw": [2, 3, 231], "00": [3, 7, 8, 231], "execut": [3, 7, 8, 10, 231], "file": [3, 7, 8, 231], "auto_exampl": [3, 7, 8], "basic": [3, 80, 165, 231], "mem": [3, 7, 8, 231], "mb": [3, 7, 8, 231], "000": [3, 7, 8, 231], "here": 4, "ar": [4, 9, 13, 18, 33, 34, 35, 47, 48, 50, 52, 57, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 91, 99, 100, 116, 131, 149, 150, 168, 199, 200, 201, 204, 221, 227], "few": 4, "showcas": 4, "usag": 4, "librari": [4, 207], "pars": [4, 6, 7, 231], "knot": [4, 6, 7, 9, 13, 15, 18, 26, 27, 33, 34, 35, 40, 41, 57, 58, 66, 73, 75, 80, 82, 83, 85, 86, 88, 116, 131, 134, 157, 158, 165, 173, 185, 186, 187, 230, 231], "all": [4, 9, 15, 33, 34, 47, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 100, 105, 123, 131, 170, 200, 204, 221, 231], "auto_examples_python": 4, "zip": 4, "auto_examples_jupyt": 4, "test": [5, 106], "variou": [5, 13], "notat": [5, 7, 131, 163, 164, 165, 170, 172, 173, 174, 176, 185, 186, 187, 231], "pd": [5, 174], "n": [5, 8, 88, 130, 138, 145, 190], "mathematica": [5, 173, 174], "format": [5, 173, 174, 184], "text": [5, 171, 174, 227, 228, 229], "x": [5, 31, 103, 173, 174, 193, 218, 229], "9": [5, 173, 229], "8": [5, 173, 185, 186, 187, 229], "3": [5, 9, 10, 13, 35, 57, 58, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 141, 145, 170, 173, 174, 218, 229, 231], "10": [5, 173, 229], "4": [5, 57, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 131, 173, 174, 218, 229], "11": [5, 173, 229, 230], "5": [5, 173, 174, 218, 229], "6": [5, 173, 174, 177, 229], "7": [5, 173, 229], "12": [5, 10, 173], "In": [5, 15, 80, 165, 200, 204], "out": [5, 9, 200, 204], "from_pd_not": 5, "to_pd_not": 5, "knotinfo": [5, 173, 174], "topoli": [5, 173], "v": [5, 31, 170, 173, 174, 200, 204], "14": [5, 173, 218], "13": [5, 173, 218], "nem": 5, "b0e1": 5, "a0c0d0": 5, "b1d1": 5, "b2c1e0": 5, "d2a1": 5, "from_condensed_em_not": 5, "to_condensed_em_not": 5, "nknot": 5, "to_knotpy_not": 5, "attribut": [5, 35, 47, 66, 68, 69, 70, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 149, 170, 174, 187, 200], "fals": [5, 18, 19, 20, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 110, 111, 112, 115, 131, 178, 185, 186, 190, 219], "from_knot_not": 5, "example_not": [5, 7, 231], "i": [9, 10, 13, 15, 19, 20, 33, 34, 43, 44, 47, 48, 49, 50, 53, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 91, 99, 100, 102, 116, 131, 141, 145, 149, 157, 165, 168, 170, 173, 196, 199, 200, 204, 218, 219, 221, 222, 223, 230], "packag": [9, 10, 230], "design": 9, "creat": [9, 149, 152, 174, 177, 197, 200, 204], "manipul": 9, "visual": 9, "studi": 9, "link": [9, 13, 21, 23, 25, 141], "virtual": 9, "knotoid": [9, 88], "planar": [9, 14, 21, 23, 26, 27, 28, 29, 31, 44, 48, 49, 50, 52, 53, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 91, 107, 110, 112, 114, 123, 130, 131, 133, 134, 149, 157, 158, 166, 169, 172, 173, 174, 176, 177, 178], "websit": 9, "includ": 9, "document": [9, 10, 230], "http": [9, 10, 145, 173, 174, 176], "bgabrovsek": [9, 10], "github": [9, 10], "io": 9, "author": [9, 98, 112], "bo\u0161tjan": 9, "gabrov\u0161ek": 9, "bostjan": 9, "gabrovsek": 9, "f": [9, 200, 204], "uni": 9, "lj": 9, "si": 9, "publish": 9, "self": [9, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 197], "distribut": 9, "claus": 9, "bsd": 9, "copyright": 9, "c": [9, 35, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 98, 149, 165, 170, 193, 217, 218, 225, 227, 228], "2023": 9, "2024": [9, 230], "develop": 9, "right": 9, "reserv": 9, "redistribut": 9, "binari": 9, "form": [9, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 196], "without": [9, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 170], "modif": [9, 150], "permit": 9, "provid": [9, 80, 92, 93, 94, 95, 96, 131, 200, 204], "follow": [9, 10, 47, 80, 98, 141, 145, 149, 200, 204], "condit": [9, 221], "met": 9, "must": [9, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 149], "retain": 9, "abov": 9, "notic": 9, "thi": [9, 15, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 100, 130, 131, 165, 167, 200, 204, 218], "list": [9, 15, 18, 21, 35, 38, 43, 47, 48, 53, 57, 58, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 112, 115, 131, 132, 149, 152, 157, 158, 165, 167, 172, 173, 227, 228], "disclaim": 9, "reproduc": 9, "other": [9, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 92, 93, 94, 95, 96, 100, 145, 223, 227], "materi": 9, "neither": 9, "nor": 9, "its": [9, 35, 43, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 99], "contributor": 9, "mai": [9, 15], "endors": 9, "promot": 9, "product": 9, "deriv": 9, "softwar": 9, "specif": 9, "prior": 9, "written": 9, "permiss": 9, "BY": 9, "THE": 9, "holder": 9, "AND": 9, "AS": 9, "ani": [9, 52, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "express": [9, 100], "OR": 9, "impli": 9, "warranti": 9, "BUT": 9, "NOT": 9, "limit": 9, "TO": 9, "OF": 9, "merchant": 9, "fit": 9, "FOR": 9, "particular": 9, "purpos": 9, "IN": 9, "NO": 9, "event": 9, "shall": 9, "owner": 9, "BE": 9, "liabl": 9, "direct": [9, 108], "indirect": 9, "incident": 9, "special": 9, "exemplari": 9, "consequenti": 9, "damag": [9, 149], "procur": 9, "substitut": 9, "good": 9, "servic": 9, "loss": 9, "data": [9, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 98, 99, 166, 167, 177, 230], "profit": 9, "busi": 9, "interrupt": 9, "howev": 9, "caus": [9, 15], "ON": 9, "theori": [9, 98, 100, 230], "liabil": 9, "whether": 9, "contract": 9, "strict": 9, "tort": 9, "neglig": 9, "otherwis": [9, 19, 20, 26, 27, 33, 34, 47, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 200, 204, 219, 225], "aris": 9, "wai": 9, "even": 9, "IF": 9, "advis": 9, "possibl": [9, 123], "SUCH": 9, "slovenian": 9, "research": 9, "innovatiom": 9, "agenc": 9, "grant": 9, "j1": 9, "4031": 9, "The": [10, 18, 28, 47, 48, 52, 80, 91, 99, 141, 145, 149, 165, 170, 173, 196, 218, 221], "requir": 10, "newer": 10, "your": 10, "system": 10, "befor": 10, "proceed": 10, "ensur": 10, "you": 10, "have": [10, 15, 47, 92, 93, 94, 95, 96, 102, 131], "most": [10, 165], "recent": 10, "pip": 10, "manag": 10, "If": [10, 15, 33, 34, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 100, 102, 196, 199, 200, 204], "pleas": 10, "consult": 10, "instruct": 10, "further": 10, "To": 10, "current": 10, "command": 10, "first": [10, 26, 27, 47, 199, 200, 204, 219], "make": [10, 102], "sure": 10, "git": 10, "Then": 10, "clone": 10, "com": 10, "cd": 10, "e": [10, 13, 23, 25, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 131, 145, 150, 168, 185, 186, 191, 193, 200, 204, 228, 229], "dev": 10, "want": 10, "updat": [10, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 91, 200, 204], "pull": 10, "latest": 10, "chang": [10, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 149], "repositori": 10, "project": 10, "directori": 10, "pytest": 10, "learn": 10, "more": [10, 15, 168], "read": [10, 91, 184], "homepag": 10, "modul": [11, 59, 64, 89, 97, 121, 140, 147, 161, 179, 181, 188], "comput": [13, 98, 104, 131], "decomposit": 13, "object": [13, 26, 27, 28, 29, 48, 61, 63, 66, 68, 72, 73, 75, 80, 82, 83, 85, 86, 88, 92, 93, 94, 95, 96, 107, 108, 144, 149, 150, 157, 158, 167, 174, 187, 191, 200, 204, 208, 209, 211, 214], "connect": [13, 19, 20, 49, 50, 57, 152], "ha": [13, 15, 23, 35, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 145, 200, 204], "hopf": [13, 23], "borromean": 13, "disjoint": [13, 14, 18, 44, 99, 116], "do": [13, 25, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88], "share": 13, "common": 13, "node": [13, 15, 18, 30, 31, 33, 34, 35, 36, 43, 47, 48, 49, 50, 52, 53, 57, 58, 66, 68, 69, 70, 72, 73, 75, 80, 82, 83, 85, 86, 88, 92, 93, 94, 95, 96, 110, 116, 130, 131, 134, 135, 149, 152, 153, 165, 168, 173, 174], "cross": [13, 40, 41, 47, 49, 50, 52, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 157, 158, 170, 173], "sum": [13, 18, 19, 20, 104], "factor": 13, "composit": 13, "diagram": [13, 14, 19, 20, 21, 23, 26, 27, 28, 29, 31, 35, 44, 47, 48, 49, 50, 51, 52, 53, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 91, 110, 112, 116, 123, 133, 134, 149, 157, 158, 166, 169, 170, 172, 173, 174], "strand": [13, 47, 51, 53], "either": [13, 200, 204], "close": [13, 53], "path": [13, 53, 183, 185, 186, 187], "between": [13, 135, 219], "function": [13, 24, 30, 37, 39, 42, 54, 56, 98, 99, 107, 114, 118, 122, 124, 130, 133, 136, 141, 145, 148, 150, 154, 159, 162, 165, 170, 173, 176, 182, 184, 189, 195, 196, 198, 207, 218, 226], "planardiagram": [14, 15, 19, 20, 21, 23, 25, 38, 47, 51, 53, 55, 72, 82, 83, 123, 149, 151, 152, 153, 157, 158, 160, 171, 175, 187, 230], "add": [14, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 112, 116, 117, 155], "unknot": [14, 141], "place": [14, 36, 221], "param": [14, 15, 18, 21, 23, 25, 28, 29, 35, 40, 41, 44, 47, 48, 49, 50, 51, 52, 53, 57, 58, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 110, 112, 115, 131, 132, 134, 149, 152, 157, 158, 177, 197, 199, 219, 227, 228], "input": [14, 23, 123, 227], "return": [14, 15, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 31, 33, 34, 35, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 57, 58, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 92, 93, 94, 95, 96, 99, 110, 111, 112, 115, 116, 123, 131, 132, 134, 135, 149, 152, 157, 158, 167, 168, 169, 172, 174, 175, 177, 178, 185, 186, 187, 191, 193, 194, 197, 199, 200, 204, 215, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228], "order": [15, 20, 25, 47, 132, 165, 197, 200, 204, 221], "int": [15, 51, 138, 168, 174], "max_cut_set": 15, "none": [15, 18, 26, 27, 31, 34, 35, 47, 48, 57, 58, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 92, 93, 94, 95, 96, 100, 102, 111, 112, 131, 134, 137, 138, 139, 144, 151, 152, 158, 166, 167, 174, 183, 185, 186, 190, 199, 200, 204, 208, 221, 228, 229], "find": [15, 99, 105], "cut": [15, 25, 43, 145], "set": [15, 21, 44, 49, 50, 52, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 92, 93, 94, 95, 96, 110, 152, 194, 199, 200, 202, 204], "edg": [15, 25, 53, 80, 116, 135, 145, 152], "when": 15, "remov": [15, 43, 44, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 145, 149, 157, 200, 204], "disconnect": [15, 43], "two": [15, 28, 44, 47, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 92, 93, 94, 95, 96, 99, 103, 117, 135, 152, 158, 214], "compon": [15, 18, 21, 23, 53], "our": 15, "case": [15, 18, 165, 200, 204], "we": [15, 35, 57, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 131], "assum": [15, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 165, 196, 201, 225], "than": [15, 100, 168], "one": [15, 102, 131, 157], "potenti": [15, 232], "problem": [15, 35, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "three": [15, 141], "onli": [15, 47, 48, 80, 91, 100, 131], "algorithm": [15, 30, 37, 98, 131, 150], "need": 15, "can": [15, 52, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 100, 131, 149, 185, 186], "easili": 15, "adopt": 15, "situat": 15, "number": [15, 23, 51, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 99, 115, 131, 132, 168, 218, 221], "arc": [15, 44, 49, 50, 52, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 110, 117, 132, 134, 149, 150, 151, 152, 157, 165, 220, 221, 222, 224], "up": [15, 52, 130, 131], "max_cut": 15, "consist": [15, 52, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "tupl": [15, 35, 52, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 123, 165, 167, 172, 196, 200, 204, 218, 227, 229], "return_relabel_dict": 18, "create_us": [18, 57, 58, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 134, 137, 138, 139, 166, 167, 174, 177], "relabel": [18, 36, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "mani": 18, "structur": [18, 57, 58, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 165, 172, 173], "type": [18, 31, 40, 41, 52, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 157, 158, 168], "bool": [19, 20, 219], "3rd": 20, "endpoint": [21, 28, 35, 47, 48, 53, 57, 66, 69, 70, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 149, 155, 158], "belong": [21, 155], "same": 21, "contain": [21, 28, 48, 91, 157, 174, 229], "unord": 21, "trefoil": 23, "check": [25, 35, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 219], "face": [25, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 110], "overlap": 25, "ccw": [25, 35, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 165, 177, 178, 185, 186, 187], "respect": [25, 218, 221], "todo": [25, 35, 52, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 116, 130, 177], "fix": 25, "so": [25, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 100, 211, 212], "work": [25, 35, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 150], "handcuff": 25, "like": [25, 47, 53, 58, 92, 93, 94, 95, 96, 200, 204], "kink": [26, 48, 50, 116, 117, 155], "region": [26, 27, 28, 29, 48, 80, 155, 156, 157, 158], "singleton": [26, 48, 157], "exist": [26, 27, 47], "bigon": [27, 28, 158], "poke": [27, 158], "length": 27, "an": [28, 29, 44, 47, 48, 49, 50, 53, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 92, 93, 94, 95, 96, 173, 177, 184, 200, 204], "iter": [28, 29, 48, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 91, 132, 191, 200, 204], "over": [28, 29, 47, 48], "enabl": [28, 29], "u": [28, 29, 100, 141, 170], "unpok": [28, 158], "reidemeist": [28, 29, 156, 157, 158], "ii": [28, 158], "move": [28, 29, 130, 156, 157, 158], "defin": [28, 110, 145, 158], "see": [28, 29, 48, 49, 50, 141, 165, 170, 173, 174, 176, 230], "also": [28, 29, 48, 49, 50, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 131, 185, 186, 222], "non": [29, 47, 145, 149, 156, 232], "altern": [29, 47, 156], "triangular": [29, 156], "iii": [29, 156], "triangl": 29, "simpl": 30, "regard": [30, 35, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "node_for_ad": [31, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "node_typ": [31, 95, 174, 177], "degre": [31, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 115, 131, 132], "paramet": [31, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 108, 111, 123, 131, 167, 174, 175, 178, 185, 186, 187, 204, 211, 212, 218, 221], "instanc": [31, 47, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 134, 167], "ad": [31, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 196, 232], "option": [31, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "default": [33, 34, 58, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 92, 93, 94, 95, 96, 165, 170, 196, 200, 204], "natur": [33, 34], "next": [33, 34], "avail": [33, 34], "letter": [33, 34, 165], "za": [33, 34], "y": [33, 34, 103, 193, 218], "integ": [33, 34, 232], "empti": [33, 34, 134, 200, 204], "count": 34, "p": [35, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 173, 218, 223, 225], "permut": [35, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 193], "For": [35, 57, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 149, 211, 212], "d": [35, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 92, 93, 94, 95, 96, 149, 165, 193, 200, 201, 202, 204, 228], "new": [35, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 149, 155, 200, 204], "which": [35, 57, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 221], "given": [35, 47, 48, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 99, 100, 102, 103, 104, 131, 165, 200, 204, 218, 221], "dict": [35, 58, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 91, 149, 169, 172, 199, 200, 204, 227], "loop": [35, 48, 49, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 116, 117, 145], "probabl": [35, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "map": [36, 58, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 96, 99], "crossing_for_smooth": [40, 41], "smoothen": [40, 41], "l_0": [40, 141], "smooth": [40, 41], "l_infin": 41, "articul": 43, "vertic": [43, 77, 80, 83, 85, 86, 135, 150, 152], "onc": 44, "split": [44, 193, 214, 228], "part": [44, 53, 80, 193, 221], "repres": [44, 49, 80, 108, 149, 165, 173, 204, 218, 221], "endpoint_attribut": 47, "pair": [47, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 99, 149, 200, 204, 221], "twin": [47, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "third": [47, 219], "element": [47, 190, 229], "adjac": [47, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 165, 184], "start": [47, 53, 108, 131, 221, 222], "thei": [47, 149], "detect": 47, "valu": [47, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 92, 93, 94, 95, 96, 116, 131, 149, 165, 192, 193, 199, 200, 204], "jump_ov": 47, "orient": [47, 52, 165], "filter": 47, "of_nod": 48, "attach": 48, "itself": [49, 50], "bridg": [49, 116, 117], "each": [52, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 99, 149, 165, 204], "parallel": 52, "incid": [52, 77, 149, 173], "consid": 52, "stop": 53, "continu": [53, 131], "tangl": [57, 58], "compass": [57, 58], "insert": [57, 58, 152, 200, 204], "strictur": 57, "valent": [57, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 145], "replac": [57, 66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 117, 145, 227], "dictionari": [57, 58, 66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 99, 116, 131, 149, 165, 167, 184, 196, 199, 200, 204], "specifi": [57, 100, 101, 200, 204], "ne": [57, 58], "nw": [57, 58], "sw": [57, 58], "se": [57, 58], "posit": [57, 66, 68, 69, 70, 72, 73, 75, 80, 82, 83, 85, 86, 88, 108, 110, 145, 165, 173], "etc": [57, 77, 80], "tangles_dict": 58, "class": [60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 107, 108, 143, 144, 165, 174, 177, 178, 193, 197, 198, 200, 203, 204, 206, 207, 208, 209, 210, 211, 212, 232], "base": [61, 63, 66, 68, 69, 70, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 92, 93, 94, 95, 96, 108, 144, 200, 204, 205, 206, 208, 209, 210, 211, 212], "__init__": [61, 63, 66, 68, 69, 70, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 92, 93, 94, 95, 96, 108, 144, 200, 204, 208, 209, 210, 211, 212], "method": [61, 63, 66, 68, 69, 70, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 92, 93, 94, 95, 96, 100, 108, 144, 149, 197, 200, 204, 208, 209, 210, 211, 212], "attr": [66, 68, 69, 70, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 174], "initi": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "incoming_diagram_data": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "implement": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 145], "frame": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 141, 157, 174], "add_bivalent_vertex": [66, 72, 73, 75, 85, 86, 88], "bivalent_vertex_for_ad": [66, 72, 73, 75, 85, 86, 88], "bival": [66, 72, 73, 75, 85, 86, 88, 150, 151, 152, 173], "hashabl": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "add_bivalent_vertic": [66, 72, 73, 75, 85, 86, 88], "bivalent_nodes_for_ad": [66, 72, 73, 75, 85, 86, 88], "bunch": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "add_cross": [66, 72, 73, 75, 85, 86, 88], "crossing_for_ad": [66, 72, 73, 75, 85, 86, 88], "add_crossings_from": [66, 72, 73, 75, 85, 86, 88], "crossings_for_ad": [66, 72, 73, 75, 85, 86, 88], "add_nod": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "add_nodes_from": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "nodes_for_ad": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "where": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 99, 116, 131, 141, 165, 218], "newli": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 152], "inherit": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "properti": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "hold": [66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88], "bivalent_vertic": [66, 72, 73, 75, 85, 86, 88], "clear": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 200, 204], "copi": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 149, 200, 204], "copy_us": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "shallow": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 200, 204], "blackboard": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "get_endpoint": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "get_endpoint_from_pair": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "endpoint_pair": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "jump_over_nod": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "identifi": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 99], "py3_cmp": [66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 197], "compare_attr": [66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88], "compar": [66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88, 199], "obsolet": [66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88], "__cmp__": [66, 72, 73, 75, 77, 80, 82, 83, 85, 86, 88], "relabel_nod": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "partial": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "remove_nod": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "node_for_remov": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "remove_incident_endpoint": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "care": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "break": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "rotate_node_ccw": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "ccw_shift": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "take": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "rotat": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "90": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "should": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 91, 99, 149, 165], "set_arc": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "arc_for_set": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "v_endpoint": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "u_endpoint": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "equal": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 214], "adj": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "vice": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "versa": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "set_arcs_from": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "arcs_for_ad": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "set_endpoint": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "endpoint_for_set": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "adjacent_endpoint": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "overwrit": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "instead": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 102], "addit": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88, 117, 145, 174], "opposit": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "both": [66, 72, 73, 75, 80, 82, 83, 85, 86, 88], "add_termin": [75, 88], "terminal_for_ad": [75, 88], "add_terminals_from": [75, 88], "terminals_for_ad": [75, 88], "termin": [75, 88], "incoming_node_data": 77, "abc": [77, 80, 193, 227], "abstract": [77, 80], "It": [80, 141, 170], "intend": 80, "parent": 80, "planargraph": [80, 86, 107, 167, 178, 184], "eman": 80, "node_posit": 80, "terminologi": 80, "sequenc": [80, 131, 132, 229], "add_vertex": [83, 85, 86], "vertex_for_ad": [83, 85, 86], "add_vertices_from": [83, 85, 86], "vertices_for_ad": [83, 85, 86], "spatialgraph": [85, 170, 172], "As": 91, "while": 91, "through": [91, 217, 221, 222, 223, 225], "nodeview": [92, 93, 94, 95], "get": [92, 93, 94, 95, 96, 100, 200, 204, 211, 212], "els": [92, 93, 94, 95, 96, 200, 204, 221], "isdisjoint": [92, 93, 94, 95, 96], "null": [92, 93, 94, 95, 96], "intersect": [92, 93, 94, 95, 96, 221], "item": [92, 93, 94, 95, 96, 113, 200, 204], "view": [92, 93, 94, 95, 96, 200, 204], "kei": [92, 93, 94, 95, 96, 99, 116, 131, 149, 193, 196, 199, 200, 201, 202, 204], "circl": [98, 99, 100, 102, 103, 104, 105, 110, 116, 210, 213, 217, 218, 221, 222, 225], "pack": [98, 99, 100, 101, 102, 106], "accord": 98, "koeb": 98, "thurston": 98, "andreev": 98, "numer": [98, 100, 207], "r": [98, 106, 143, 144, 145, 218, 221], "collin": 98, "stephenson": 98, "comp": 98, "geom": 98, "appl": 98, "2003": 98, "extern": 99, "argument": [99, 100, 194, 196], "cycl": [99, 104], "surround": [99, 100, 105], "desir": 99, "radiu": [99, 100, 102, 103, 104, 209, 210, 218, 221, 225], "center": [99, 100, 101, 104, 105, 209, 210, 218, 220, 221, 225], "complex": [99, 108, 115, 218, 221, 223, 225], "smallcircl": 100, "invert": [100, 101], "search": 100, "invers": [100, 218], "maxim": [100, 131], "minimum": [100, 102], "quasiconvex": 100, "program": 100, "relat": [100, 145], "hyperbol": 100, "space": 100, "rather": 100, "appli": 100, "qcp": 100, "seem": 100, "simpler": 100, "hill": 100, "climb": 100, "approach": 100, "reli": 100, "tell": 100, "local": 100, "maxima": 100, "stuck": 100, "optim": 100, "look": 100, "target": 102, "chosen": 102, "z": [103, 106, 115, 221], "angl": [103, 104, 219, 221], "radii": [103, 105, 119], "around": [104, 106], "placement": 105, "recurs": [105, 199], "q": [106, 193], "build": 106, "grid": 106, "point": [106, 108, 131, 211, 212, 213, 217, 218, 222, 223, 224, 225], "size": 106, "pointy_end": 108, "graphic": 108, "pointi": 108, "color1": 109, "color2": 109, "area": [110, 116], "label": 110, "titl": 110, "layout": [111, 116], "ax": 111, "filenam": 112, "save": [112, 131], "pdf": 112, "inform": [112, 170], "straight_lin": 115, "b\u00e9zier": 115, "curv": 115, "coordin": [115, 119], "support": [116, 173], "tripl": 117, "tabl": 130, "sandbox": 130, "maximal_number_of_nod": 131, "degree_sequ": 131, "maximal_degre": 131, "output_filenam": 131, "allow_parallel_arc": 131, "output_ignore_degree_sequences_filenam": 131, "start_with_planar_graph": 131, "em": [131, 166, 168, 169, 170, 185, 186], "run_in_parallel": 131, "grap": 131, "wish": 131, "max": 131, "dure": 131, "process": 131, "ones": 131, "match": 131, "step": 131, "alreadi": 131, "been": 131, "sort": [132, 199], "turn": [132, 229], "zero": 134, "constructor": [134, 167], "multipl": 135, "polynomi": [141, 145], "aka": 141, "kauffman": 141, "invari": [141, 196], "unori": 141, "character": 141, "rule": 141, "l_x": 141, "l_inf": 141, "l": [141, 145, 223], "loui": 141, "h": 141, "state": 141, "model": 141, "jone": 141, "topologi": 141, "26": 141, "1987": 141, "395": 141, "407": 141, "variabl": [142, 146, 196], "expr": [142, 146], "m": 144, "simplification_funct": 144, "via": 145, "k0": 145, "\u03c3": 145, "twist": 145, "neg": [145, 173], "leaf": 145, "bouquet": 145, "en": 145, "wikipedia": 145, "org": [145, 173, 174], "wiki": [145, 173, 174], "mathematical_operators_and_symbols_in_unicod": 145, "arc_dict": 149, "old_endpoint_1": 149, "new_endpoint_1": 149, "old_endpoint_2": 149, "new_endpoint_2": 149, "b0": 149, "c1o": 149, "d2": 149, "made": 149, "d2o": 149, "b0i": 149, "stai": 149, "were": 149, "unless": 149, "overwritten": 149, "anoth": 149, "stabl": 149, "realiz": 149, "deal": 150, "simplifi": 150, "plot": 150, "node_nam": 151, "put": 151, "phantom": [151, 152], "exclude_arc": 152, "except": [152, 206], "exclud": [152, 199], "sign": [155, 173], "insid": 155, "unkink": 157, "adjust": 157, "fewer": [157, 158], "in_plac": 160, "str": [163, 164, 166, 168, 174, 175, 177, 228, 229], "modifi": 165, "ew": [165, 170], "millett": [165, 170], "sinc": 165, "similar": [165, 170], "encod": [165, 172, 185, 186, 187], "condens": [165, 166, 168], "lower": 165, "b0c1": 165, "a0d0c0": 165, "b2a1": 165, "b1": 165, "mathemat": [165, 170], "heritag": [165, 170], "cf": [165, 170], "gauss": [165, 170], "225": [165, 170], "266": [165, 170], "world": [165, 170], "scientif": [165, 170], "1991": [165, 170], "separ": [166, 168, 177, 178, 185, 186], "convert": [166, 196], "string": [166, 167, 168, 174, 177, 227, 228, 229], "evalu": 167, "rais": [168, 200, 204], "valueerror": 168, "52": 168, "typeerror": 168, "mix": 168, "store": [170, 202], "x1": [170, 172], "red": [170, 172], "orang": [170, 172], "blue": 170, "whole": 172, "katla": [173, 174], "planar_diagram": [173, 174], "xp": 173, "xn": 173, "23": 173, "17": 173, "16": 173, "15": 173, "18": 173, "24": 173, "abbrevi": 173, "unsign": 173, "xm": 173, "autodetect": 174, "math": 174, "indiana": 174, "edu": [174, 176], "pd_notat": 174, "html": 174, "assign": 174, "ascii": [176, 177], "user": 176, "cec": 176, "anu": 176, "au": 176, "bdm": 176, "guid": 176, "txt": [176, 185, 186], "plantri": [177, 178], "bcde": [177, 178], "aefc": [177, 178], "abfd": [177, 178], "acf": [177, 178], "adfb": [177, 178], "bedc": [177, 178], "resolv": 177, "ambigu": 177, "acci": 178, "decor": [183, 196, 197], "write": 184, "comment": [185, 186, 187], "prepended_node_count": [185, 186], "max_row": [185, 186], "utf": [185, 186, 187], "unix": [185, 186], "style": [185, 186], "pathnam": [185, 186], "pattern": [185, 186], "expans": [185, 186], "delimit": 187, "available_repetit": 190, "include_zero_multipl": 190, "o": 191, "depth": 191, "partit": [193, 204], "xy": 193, "yx": 193, "acb": 193, "cba": 193, "default_vari": 196, "multi": 196, "sympi": 196, "symbol": 196, "therefor": 196, "def": 196, "invariant_func": 196, "obj": 196, "call": [196, 200], "keyword": 196, "kwarg": [196, 200], "cl": 197, "cmp": 197, "dict1": 199, "dict2": 199, "except_kei": 199, "again": 199, "comparison": 199, "defaultdict": 200, "arg": 200, "default_factori": 200, "factori": 200, "__missing__": 200, "fromkei": [200, 204], "pop": [200, 204], "correspond": [200, 204], "found": [200, 204], "keyerror": [200, 204], "popitem": [200, 204], "lifo": [200, 204], "last": [200, 204], "setdefault": [200, 204], "present": [200, 204], "lack": [200, 204], "exchang": [201, 202], "val": [201, 202], "duplic": 201, "equival": 204, "error": 205, "networkx": 206, "theta1": [210, 219], "theta2": [210, 219], "parameter_from_point": [211, 212], "t": [211, 212], "line": [212, 215, 223, 225], "segment": [214, 215, 220, 224], "circulararc": 214, "halv": 214, "geometri": 218, "transform": 218, "cx": 218, "cy": 218, "calcul": 218, "determin": 218, "op": 218, "distanc": 218, "origin": 218, "4j": 218, "0j": 218, "5j": 218, "float": 219, "theta3": 219, "modulo": 219, "pi": 219, "radian": [219, 221], "geometr": 220, "circle1": 221, "circle2": 221, "perpendicular": [221, 222, 223, 225], "circular": 221, "thu": 221, "i0": 221, "z0": 221, "r0": 221, "i1": 221, "z1": 221, "r1": 221, "extra": 221, "main": 221, "1st": 221, "tangent": [221, 225], "2nd": 221, "lie": 221, "circle_point": 222, "goe": [222, 223], "li": [222, 224, 225], "substr": 227, "until": 227, "left": 227, "aaaabc": 227, "aa": 227, "bb": 227, "max_depth": 228, "default_prefix": 229, "date": 230, "apr": 230, "complet": 230, "lorem": 232, "ipsum": 232, "dolor": 232, "sit": 232, "amet": 232, "consectetur": 232, "adipisc": 232, "elit": 232, "pellentesqu": 232, "tempor": 232, "aliquet": 232, "conval": 232, "proin": 232, "fermentum": 232, "cursu": 232, "fusc": 232, "turpi": 232, "nibh": 232, "nulla": 232, "rhoncu": 232, "eu": 232, "sem": 232, "bibendum": 232, "vestibulum": 232, "nunc": 232, "rutrum": 232, "leo": 232, "ut": 232, "tristiqu": 232, "massa": 232, "accumsan": 232, "morbi": 232, "blandit": 232, "vita": 232, "puru": 232, "arcu": 232, "facilisi": 232, "orci": 232, "nisi": 232, "viverra": 232, "variu": 232, "aliquam": 232, "venenati": 232, "lectu": 232, "risu": 232, "sollicitudin": 232, "sodal": 232, "pulvinar": 232, "posuer": 232, "mauri": 232, "molli": 232, "odio": 232, "dui": 232, "sagitti": 232, "ultric": 232, "quam": 232, "vulput": 232, "dapibu": 232, "maecena": 232, "nec": 232, "tempu": 232, "nequ": 232, "id": 232, "loborti": 232, "tortor": 232, "ac": 232, "augu": 232, "vivamu": 232, "feli": 232, "placerat": 232, "ant": 232, "eget": 232, "molesti": 232, "libero": 232, "feugiat": 232, "suspendiss": 232, "magna": 232, "condimentum": 232, "urna": 232, "dictum": 232, "pretium": 232, "quisqu": 232, "justo": 232, "egesta": 232, "maximu": 232, "vehicula": 232, "interdum": 232, "praesent": 232, "qui": 232, "finibu": 232, "est": 232, "phasellu": 232, "mi": 232, "pharetra": 232, "erat": 232, "metu": 232, "eleifend": 232, "sapien": 232, "ligula": 232, "ex": 232, "nam": 232, "diam": 232, "porttitor": 232, "matti": 232, "iaculi": 232, "cra": 232, "et": 232, "lacinia": 232, "nisl": 232, "hendrerit": 232, "ero": 232, "sed": 232, "scelerisqu": 232, "volutpat": 232, "enim": 232, "tincidunt": 232, "donec": 232, "imperdiet": 232, "ornar": 232, "dignissim": 232, "ullamcorp": 232, "vel": 232, "suscipit": 232, "luctu": 232, "congu": 232, "tellu": 232, "euismod": 232, "aptent": 232, "taciti": 232, "sociosqu": 232, "litora": 232, "torquent": 232, "per": 232, "conubia": 232, "nostra": 232, "incepto": 232, "himenaeo": 232, "ultrici": 232, "commodo": 232, "auctor": 232, "etiam": 232, "malesuada": 232}, "objects": {"": [[230, 0, 0, "-", "knotpy"]], "knotpy": [[11, 0, 0, "-", "algorithms"], [64, 0, 0, "-", "classes"], [97, 0, 0, "-", "drawing"], [121, 0, 0, "-", "generate"], [140, 0, 0, "-", "invariants"], [147, 0, 0, "-", "manipulation"], [161, 0, 0, "-", "notation"], [181, 0, 0, "-", "readwrite"], [188, 0, 0, "-", "utils"]], "knotpy.algorithms": [[12, 0, 0, "-", "canonical"], [13, 0, 0, "-", "components"], [24, 0, 0, "-", "faces"], [30, 0, 0, "-", "node_algorithms"], [37, 0, 0, "-", "orientation"], [39, 0, 0, "-", "skein"], [42, 0, 0, "-", "structure"], [54, 0, 0, "-", "symmetry"], [56, 0, 0, "-", "tangle_algorithms"], [59, 0, 0, "-", "tests"]], "knotpy.algorithms.components": [[14, 1, 1, "", "add_unknot_in_place"], [15, 1, 1, "", "cut_sets"], [16, 1, 1, "", "disjoint_components"], [17, 1, 1, "", "disjoint_components_nodes"], [18, 1, 1, "", "disjoint_sum"], [19, 1, 1, "", "is_connected_sum"], [20, 1, 1, "", "is_connected_sum_third_order"], [21, 1, 1, "", "link_components_endpoints"], [22, 1, 1, "", "number_of_disjoint_components"], [23, 1, 1, "", "number_of_link_components"]], "knotpy.algorithms.faces": [[25, 1, 1, "", "check_faces_sanity"], [26, 1, 1, "", "choose_kink"], [27, 1, 1, "", "choose_poke"], [28, 1, 1, "", "pokes"], [29, 1, 1, "", "triangles_nonalternating"]], "knotpy.algorithms.node_algorithms": [[31, 1, 1, "", "add_node_to"], [32, 1, 1, "", "degree_sequence"], [33, 1, 1, "", "name_for_new_node"], [34, 1, 1, "", "name_for_next_node_generator"], [35, 1, 1, "", "permute_node"], [36, 1, 1, "", "relabel_nodes"]], "knotpy.algorithms.orientation": [[38, 1, 1, "", "all_orientations"]], "knotpy.algorithms.skein": [[40, 1, 1, "", "smoothing_type_A"], [41, 1, 1, "", "smoothing_type_B"]], "knotpy.algorithms.structure": [[43, 1, 1, "", "articulation_nodes"], [44, 1, 1, "", "bridges"], [45, 1, 1, "", "cut_edges"], [46, 1, 1, "", "cut_vertices"], [47, 1, 1, "", "edges"], [48, 1, 1, "", "kink_region_iterator"], [49, 1, 1, "", "kinks"], [50, 1, 1, "", "loops"], [51, 1, 1, "", "number_of_edges"], [52, 1, 1, "", "parallel_arcs"], [53, 1, 1, "", "path_from_endpoint"]], "knotpy.algorithms.symmetry": [[55, 1, 1, "", "mirror"]], "knotpy.algorithms.tangle_algorithms": [[57, 1, 1, "", "insert_tangle"], [58, 1, 1, "", "insert_tangles_from"]], "knotpy.algorithms.tests": [[60, 0, 0, "-", "test_components"], [62, 0, 0, "-", "test_tangle"]], "knotpy.algorithms.tests.test_components": [[61, 2, 1, "", "TestComponents"]], "knotpy.algorithms.tests.test_components.TestComponents": [[61, 3, 1, "", "__init__"]], "knotpy.algorithms.tests.test_tangle": [[63, 2, 1, "", "TestTangles"]], "knotpy.algorithms.tests.test_tangle.TestTangles": [[63, 3, 1, "", "__init__"]], "knotpy.classes": [[65, 0, 0, "-", "bondedknot"], [67, 0, 0, "-", "endpoint"], [71, 0, 0, "-", "knot"], [74, 0, 0, "-", "knotoid"], [76, 0, 0, "-", "node"], [78, 0, 0, "-", "orientedknot"], [79, 0, 0, "-", "planardiagram"], [81, 0, 0, "-", "planargraph"], [84, 0, 0, "-", "spatialgraph"], [87, 0, 0, "-", "tangle"], [89, 0, 0, "-", "tests"], [91, 0, 0, "-", "views"]], "knotpy.classes.bondedknot": [[66, 2, 1, "", "BondedKnot"]], "knotpy.classes.bondedknot.BondedKnot": [[66, 3, 1, "", "__init__"], [66, 3, 1, "", "add_bivalent_vertex"], [66, 3, 1, "", "add_bivalent_vertices"], [66, 3, 1, "", "add_crossing"], [66, 3, 1, "", "add_crossings_from"], [66, 3, 1, "", "add_node"], [66, 3, 1, "", "add_nodes_from"], [66, 4, 1, "", "arcs"], [66, 4, 1, "", "bivalent_vertices"], [66, 3, 1, "", "clear"], [66, 3, 1, "", "copy"], [66, 4, 1, "", "crossings"], [66, 4, 1, "", "endpoints"], [66, 4, 1, "", "faces"], [66, 4, 1, "", "framing"], [66, 3, 1, "", "get_endpoint"], [66, 3, 1, "", "get_endpoint_from_pair"], [66, 3, 1, "", "jump_over_node"], [66, 4, 1, "", "name"], [66, 4, 1, "", "nodes"], [66, 3, 1, "", "permute_node"], [66, 3, 1, "", "py3_cmp"], [66, 3, 1, "", "relabel_nodes"], [66, 3, 1, "", "remove_node"], [66, 3, 1, "", "rotate_node_ccw"], [66, 3, 1, "", "set_arc"], [66, 3, 1, "", "set_arcs_from"], [66, 3, 1, "", "set_endpoint"], [66, 3, 1, "", "twin"]], "knotpy.classes.endpoint": [[68, 2, 1, "", "Endpoint"], [69, 2, 1, "", "IngoingEndpoint"], [70, 2, 1, "", "OutgoingEndpoint"]], "knotpy.classes.endpoint.Endpoint": [[68, 3, 1, "", "__init__"]], "knotpy.classes.endpoint.IngoingEndpoint": [[69, 3, 1, "", "__init__"]], "knotpy.classes.endpoint.OutgoingEndpoint": [[70, 3, 1, "", "__init__"]], "knotpy.classes.knot": [[72, 2, 1, "", "Knot"], [73, 2, 1, "", "OrientedKnot"]], "knotpy.classes.knot.Knot": [[72, 3, 1, "", "__init__"], [72, 3, 1, "", "add_bivalent_vertex"], [72, 3, 1, "", "add_bivalent_vertices"], [72, 3, 1, "", "add_crossing"], [72, 3, 1, "", "add_crossings_from"], [72, 3, 1, "", "add_node"], [72, 3, 1, "", "add_nodes_from"], [72, 4, 1, "", "arcs"], [72, 4, 1, "", "bivalent_vertices"], [72, 3, 1, "", "clear"], [72, 3, 1, "", "copy"], [72, 4, 1, "", "crossings"], [72, 4, 1, "", "endpoints"], [72, 4, 1, "", "faces"], [72, 4, 1, "", "framing"], [72, 3, 1, "", "get_endpoint"], [72, 3, 1, "", "get_endpoint_from_pair"], [72, 3, 1, "", "jump_over_node"], [72, 4, 1, "", "name"], [72, 4, 1, "", "nodes"], [72, 3, 1, "", "permute_node"], [72, 3, 1, "", "py3_cmp"], [72, 3, 1, "", "relabel_nodes"], [72, 3, 1, "", "remove_node"], [72, 3, 1, "", "rotate_node_ccw"], [72, 3, 1, "", "set_arc"], [72, 3, 1, "", "set_arcs_from"], [72, 3, 1, "", "set_endpoint"], [72, 3, 1, "", "twin"]], "knotpy.classes.knot.OrientedKnot": [[73, 3, 1, "", "__init__"], [73, 3, 1, "", "add_bivalent_vertex"], [73, 3, 1, "", "add_bivalent_vertices"], [73, 3, 1, "", "add_crossing"], [73, 3, 1, "", "add_crossings_from"], [73, 3, 1, "", "add_node"], [73, 3, 1, "", "add_nodes_from"], [73, 4, 1, "", "arcs"], [73, 4, 1, "", "bivalent_vertices"], [73, 3, 1, "", "clear"], [73, 3, 1, "", "copy"], [73, 4, 1, "", "crossings"], [73, 4, 1, "", "endpoints"], [73, 4, 1, "", "faces"], [73, 4, 1, "", "framing"], [73, 3, 1, "", "get_endpoint"], [73, 3, 1, "", "get_endpoint_from_pair"], [73, 3, 1, "", "jump_over_node"], [73, 4, 1, "", "name"], [73, 4, 1, "", "nodes"], [73, 3, 1, "", "permute_node"], [73, 3, 1, "", "py3_cmp"], [73, 3, 1, "", "relabel_nodes"], [73, 3, 1, "", "remove_node"], [73, 3, 1, "", "rotate_node_ccw"], [73, 3, 1, "", "set_arc"], [73, 3, 1, "", "set_arcs_from"], [73, 3, 1, "", "set_endpoint"], [73, 3, 1, "", "twin"]], "knotpy.classes.knotoid": [[75, 2, 1, "", "Knotoid"]], "knotpy.classes.knotoid.Knotoid": [[75, 3, 1, "", "__init__"], [75, 3, 1, "", "add_bivalent_vertex"], [75, 3, 1, "", "add_bivalent_vertices"], [75, 3, 1, "", "add_crossing"], [75, 3, 1, "", "add_crossings_from"], [75, 3, 1, "", "add_node"], [75, 3, 1, "", "add_nodes_from"], [75, 3, 1, "", "add_terminal"], [75, 3, 1, "", "add_terminals_from"], [75, 4, 1, "", "arcs"], [75, 4, 1, "", "bivalent_vertices"], [75, 3, 1, "", "clear"], [75, 3, 1, "", "copy"], [75, 4, 1, "", "crossings"], [75, 4, 1, "", "endpoints"], [75, 4, 1, "", "faces"], [75, 4, 1, "", "framing"], [75, 3, 1, "", "get_endpoint"], [75, 3, 1, "", "get_endpoint_from_pair"], [75, 3, 1, "", "jump_over_node"], [75, 4, 1, "", "name"], [75, 4, 1, "", "nodes"], [75, 3, 1, "", "permute_node"], [75, 3, 1, "", "py3_cmp"], [75, 3, 1, "", "relabel_nodes"], [75, 3, 1, "", "remove_node"], [75, 3, 1, "", "rotate_node_ccw"], [75, 3, 1, "", "set_arc"], [75, 3, 1, "", "set_arcs_from"], [75, 3, 1, "", "set_endpoint"], [75, 4, 1, "", "terminals"], [75, 3, 1, "", "twin"]], "knotpy.classes.node": [[77, 2, 1, "", "Node"]], "knotpy.classes.node.Node": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "py3_cmp"]], "knotpy.classes.planardiagram": [[80, 2, 1, "", "PlanarDiagram"]], "knotpy.classes.planardiagram.PlanarDiagram": [[80, 3, 1, "", "__init__"], [80, 3, 1, "", "add_node"], [80, 3, 1, "", "add_nodes_from"], [80, 4, 1, "", "arcs"], [80, 3, 1, "", "clear"], [80, 3, 1, "", "copy"], [80, 4, 1, "", "endpoints"], [80, 4, 1, "", "faces"], [80, 4, 1, "", "framing"], [80, 3, 1, "", "get_endpoint"], [80, 3, 1, "", "get_endpoint_from_pair"], [80, 3, 1, "", "jump_over_node"], [80, 4, 1, "", "name"], [80, 4, 1, "", "nodes"], [80, 3, 1, "", "permute_node"], [80, 3, 1, "", "py3_cmp"], [80, 3, 1, "", "relabel_nodes"], [80, 3, 1, "", "remove_node"], [80, 3, 1, "", "rotate_node_ccw"], [80, 3, 1, "", "set_arc"], [80, 3, 1, "", "set_arcs_from"], [80, 3, 1, "", "set_endpoint"], [80, 3, 1, "", "twin"]], "knotpy.classes.planargraph": [[82, 2, 1, "", "OrientedPlanarGraph"], [83, 2, 1, "", "PlanarGraph"]], "knotpy.classes.planargraph.OrientedPlanarGraph": [[82, 3, 1, "", "__init__"], [82, 3, 1, "", "add_node"], [82, 3, 1, "", "add_nodes_from"], [82, 4, 1, "", "arcs"], [82, 3, 1, "", "clear"], [82, 3, 1, "", "copy"], [82, 4, 1, "", "endpoints"], [82, 4, 1, "", "faces"], [82, 4, 1, "", "framing"], [82, 3, 1, "", "get_endpoint"], [82, 3, 1, "", "get_endpoint_from_pair"], [82, 3, 1, "", "jump_over_node"], [82, 4, 1, "", "name"], [82, 4, 1, "", "nodes"], [82, 3, 1, "", "permute_node"], [82, 3, 1, "", "py3_cmp"], [82, 3, 1, "", "relabel_nodes"], [82, 3, 1, "", "remove_node"], [82, 3, 1, "", "rotate_node_ccw"], [82, 3, 1, "", "set_arc"], [82, 3, 1, "", "set_arcs_from"], [82, 3, 1, "", "set_endpoint"], [82, 3, 1, "", "twin"]], "knotpy.classes.planargraph.PlanarGraph": [[83, 3, 1, "", "__init__"], [83, 3, 1, "", "add_node"], [83, 3, 1, "", "add_nodes_from"], [83, 3, 1, "", "add_vertex"], [83, 3, 1, "", "add_vertices_from"], [83, 4, 1, "", "arcs"], [83, 3, 1, "", "clear"], [83, 3, 1, "", "copy"], [83, 4, 1, "", "endpoints"], [83, 4, 1, "", "faces"], [83, 4, 1, "", "framing"], [83, 3, 1, "", "get_endpoint"], [83, 3, 1, "", "get_endpoint_from_pair"], [83, 3, 1, "", "jump_over_node"], [83, 4, 1, "", "name"], [83, 4, 1, "", "nodes"], [83, 3, 1, "", "permute_node"], [83, 3, 1, "", "py3_cmp"], [83, 3, 1, "", "relabel_nodes"], [83, 3, 1, "", "remove_node"], [83, 3, 1, "", "rotate_node_ccw"], [83, 3, 1, "", "set_arc"], [83, 3, 1, "", "set_arcs_from"], [83, 3, 1, "", "set_endpoint"], [83, 3, 1, "", "twin"], [83, 4, 1, "", "vertices"]], "knotpy.classes.spatialgraph": [[85, 2, 1, "", "OrientedSpatialGraph"], [86, 2, 1, "", "SpatialGraph"]], "knotpy.classes.spatialgraph.OrientedSpatialGraph": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "add_bivalent_vertex"], [85, 3, 1, "", "add_bivalent_vertices"], [85, 3, 1, "", "add_crossing"], [85, 3, 1, "", "add_crossings_from"], [85, 3, 1, "", "add_node"], [85, 3, 1, "", "add_nodes_from"], [85, 3, 1, "", "add_vertex"], [85, 3, 1, "", "add_vertices_from"], [85, 4, 1, "", "arcs"], [85, 4, 1, "", "bivalent_vertices"], [85, 3, 1, "", "clear"], [85, 3, 1, "", "copy"], [85, 4, 1, "", "crossings"], [85, 4, 1, "", "endpoints"], [85, 4, 1, "", "faces"], [85, 4, 1, "", "framing"], [85, 3, 1, "", "get_endpoint"], [85, 3, 1, "", "get_endpoint_from_pair"], [85, 3, 1, "", "jump_over_node"], [85, 4, 1, "", "name"], [85, 4, 1, "", "nodes"], [85, 3, 1, "", "permute_node"], [85, 3, 1, "", "py3_cmp"], [85, 3, 1, "", "relabel_nodes"], [85, 3, 1, "", "remove_node"], [85, 3, 1, "", "rotate_node_ccw"], [85, 3, 1, "", "set_arc"], [85, 3, 1, "", "set_arcs_from"], [85, 3, 1, "", "set_endpoint"], [85, 3, 1, "", "twin"], [85, 4, 1, "", "vertices"]], "knotpy.classes.spatialgraph.SpatialGraph": [[86, 3, 1, "", "__init__"], [86, 3, 1, "", "add_bivalent_vertex"], [86, 3, 1, "", "add_bivalent_vertices"], [86, 3, 1, "", "add_crossing"], [86, 3, 1, "", "add_crossings_from"], [86, 3, 1, "", "add_node"], [86, 3, 1, "", "add_nodes_from"], [86, 3, 1, "", "add_vertex"], [86, 3, 1, "", "add_vertices_from"], [86, 4, 1, "", "arcs"], [86, 4, 1, "", "bivalent_vertices"], [86, 3, 1, "", "clear"], [86, 3, 1, "", "copy"], [86, 4, 1, "", "crossings"], [86, 4, 1, "", "endpoints"], [86, 4, 1, "", "faces"], [86, 4, 1, "", "framing"], [86, 3, 1, "", "get_endpoint"], [86, 3, 1, "", "get_endpoint_from_pair"], [86, 3, 1, "", "jump_over_node"], [86, 4, 1, "", "name"], [86, 4, 1, "", "nodes"], [86, 3, 1, "", "permute_node"], [86, 3, 1, "", "py3_cmp"], [86, 3, 1, "", "relabel_nodes"], [86, 3, 1, "", "remove_node"], [86, 3, 1, "", "rotate_node_ccw"], [86, 3, 1, "", "set_arc"], [86, 3, 1, "", "set_arcs_from"], [86, 3, 1, "", "set_endpoint"], [86, 3, 1, "", "twin"], [86, 4, 1, "", "vertices"]], "knotpy.classes.tangle": [[88, 2, 1, "", "Tangle"]], "knotpy.classes.tangle.Tangle": [[88, 3, 1, "", "__init__"], [88, 3, 1, "", "add_bivalent_vertex"], [88, 3, 1, "", "add_bivalent_vertices"], [88, 3, 1, "", "add_crossing"], [88, 3, 1, "", "add_crossings_from"], [88, 3, 1, "", "add_node"], [88, 3, 1, "", "add_nodes_from"], [88, 3, 1, "", "add_terminal"], [88, 3, 1, "", "add_terminals_from"], [88, 4, 1, "", "arcs"], [88, 4, 1, "", "bivalent_vertices"], [88, 3, 1, "", "clear"], [88, 3, 1, "", "copy"], [88, 4, 1, "", "crossings"], [88, 4, 1, "", "endpoints"], [88, 4, 1, "", "faces"], [88, 4, 1, "", "framing"], [88, 3, 1, "", "get_endpoint"], [88, 3, 1, "", "get_endpoint_from_pair"], [88, 3, 1, "", "jump_over_node"], [88, 4, 1, "", "name"], [88, 4, 1, "", "nodes"], [88, 3, 1, "", "permute_node"], [88, 3, 1, "", "py3_cmp"], [88, 3, 1, "", "relabel_nodes"], [88, 3, 1, "", "remove_node"], [88, 3, 1, "", "rotate_node_ccw"], [88, 3, 1, "", "set_arc"], [88, 3, 1, "", "set_arcs_from"], [88, 3, 1, "", "set_endpoint"], [88, 4, 1, "", "terminals"], [88, 3, 1, "", "twin"]], "knotpy.classes.tests": [[90, 0, 0, "-", "endpoint_tests"]], "knotpy.classes.views": [[92, 2, 1, "", "ArcView"], [93, 2, 1, "", "EndpointView"], [94, 2, 1, "", "FaceView"], [95, 2, 1, "", "FilteredNodeView"], [96, 2, 1, "", "NodeView"]], "knotpy.classes.views.ArcView": [[92, 3, 1, "", "__init__"], [92, 3, 1, "", "get"], [92, 3, 1, "", "isdisjoint"], [92, 3, 1, "", "items"], [92, 3, 1, "", "keys"], [92, 3, 1, "", "values"]], "knotpy.classes.views.EndpointView": [[93, 3, 1, "", "__init__"], [93, 3, 1, "", "get"], [93, 3, 1, "", "isdisjoint"], [93, 3, 1, "", "items"], [93, 3, 1, "", "keys"], [93, 3, 1, "", "values"]], "knotpy.classes.views.FaceView": [[94, 3, 1, "", "__init__"], [94, 3, 1, "", "get"], [94, 3, 1, "", "isdisjoint"], [94, 3, 1, "", "items"], [94, 3, 1, "", "keys"], [94, 3, 1, "", "values"]], "knotpy.classes.views.FilteredNodeView": [[95, 3, 1, "", "__init__"], [95, 3, 1, "", "get"], [95, 3, 1, "", "isdisjoint"], [95, 3, 1, "", "items"], [95, 3, 1, "", "keys"], [95, 3, 1, "", "values"]], "knotpy.classes.views.NodeView": [[96, 3, 1, "", "__init__"], [96, 3, 1, "", "get"], [96, 3, 1, "", "isdisjoint"], [96, 3, 1, "", "items"], [96, 3, 1, "", "keys"], [96, 3, 1, "", "values"]], "knotpy.drawing": [[98, 0, 0, "-", "circlepack"], [107, 0, 0, "-", "draw_matplotlib"], [114, 0, 0, "-", "layout"], [118, 0, 0, "-", "test"], [120, 0, 0, "-", "test2"]], "knotpy.drawing.circlepack": [[99, 1, 1, "", "CirclePack"], [100, 1, 1, "", "InvertAround"], [101, 1, 1, "", "InvertPacking"], [102, 1, 1, "", "NormalizePacking"], [103, 1, 1, "", "acxyz"], [104, 1, 1, "", "flower"], [105, 1, 1, "", "place"], [106, 1, 1, "", "testgrid"]], "knotpy.drawing.draw_matplotlib": [[108, 2, 1, "", "Arrow"], [109, 1, 1, "", "average_color"], [110, 1, 1, "", "draw"], [111, 1, 1, "", "draw_from_layout"], [112, 1, 1, "", "export_pdf"], [113, 1, 1, "", "to_color"]], "knotpy.drawing.draw_matplotlib.Arrow": [[108, 3, 1, "", "__init__"]], "knotpy.drawing.layout": [[115, 1, 1, "", "bezier"], [116, 1, 1, "", "circlepack_layout"], [117, 1, 1, "", "preprocess_diagram"]], "knotpy.drawing.test": [[119, 1, 1, "", "plot_circles"]], "knotpy.generate": [[122, 0, 0, "-", "conversions"], [124, 0, 0, "-", "example"], [130, 0, 0, "-", "generate_planar_graphs"], [133, 0, 0, "-", "simple"], [136, 0, 0, "-", "simple_tangles"]], "knotpy.generate.conversions": [[123, 1, 1, "", "orientations"]], "knotpy.generate.example": [[125, 1, 1, "", "example_spatial_graph"], [126, 1, 1, "", "handcuff_theta"], [127, 1, 1, "", "oriented_trefoil"], [128, 1, 1, "", "trefoil_knot"], [129, 1, 1, "", "trefoil_theta"]], "knotpy.generate.generate_planar_graphs": [[131, 1, 1, "", "generate_planar_graphs"], [132, 1, 1, "", "sort_graphs"]], "knotpy.generate.simple": [[134, 1, 1, "", "empty_knot"], [135, 1, 1, "", "parallel_edge"]], "knotpy.generate.simple_tangles": [[137, 1, 1, "", "horizontal_tangle"], [138, 1, 1, "", "integer_tangle"], [139, 1, 1, "", "vertical_tangle"]], "knotpy.invariants": [[141, 0, 0, "-", "bracket"], [143, 0, 0, "-", "module"], [145, 0, 0, "-", "yamada"]], "knotpy.invariants.bracket": [[142, 1, 1, "", "bracket_polynomial"]], "knotpy.invariants.module": [[144, 2, 1, "", "Module"]], "knotpy.invariants.module.Module": [[144, 3, 1, "", "__init__"]], "knotpy.invariants.yamada": [[146, 1, 1, "", "yamada"]], "knotpy.manipulation": [[148, 0, 0, "-", "elementary"], [150, 0, 0, "-", "phantom"], [154, 0, 0, "-", "reidemeister"], [159, 0, 0, "-", "simplification"]], "knotpy.manipulation.elementary": [[149, 1, 1, "", "copy_and_move_arc"]], "knotpy.manipulation.phantom": [[151, 1, 1, "", "insert_phantom_node"], [152, 1, 1, "", "insert_phantom_nodes_on_internal_arcs"], [153, 1, 1, "", "is_node_phantom"]], "knotpy.manipulation.reidemeister": [[155, 1, 1, "", "add_kink"], [156, 1, 1, "", "reidemeister_3"], [157, 1, 1, "", "remove_kink"], [158, 1, 1, "", "remove_poke"]], "knotpy.manipulation.simplification": [[160, 1, 1, "", "simplify"]], "knotpy.notation": [[162, 0, 0, "-", "dispatcher"], [165, 0, 0, "-", "em"], [170, 0, 0, "-", "native"], [173, 0, 0, "-", "pd"], [176, 0, 0, "-", "plantri"], [179, 0, 0, "-", "tests"]], "knotpy.notation.dispatcher": [[163, 1, 1, "", "from_notation_dispatcher"], [164, 1, 1, "", "to_notation_dispatcher"]], "knotpy.notation.em": [[166, 1, 1, "", "from_condensed_em_notation"], [167, 1, 1, "", "from_em_notation"], [168, 1, 1, "", "to_condensed_em_notation"], [169, 1, 1, "", "to_em_notation"]], "knotpy.notation.native": [[171, 1, 1, "", "from_knotpy_notation"], [172, 1, 1, "", "to_knotpy_notation"]], "knotpy.notation.pd": [[174, 1, 1, "", "from_pd_notation"], [175, 1, 1, "", "to_pd_notation"]], "knotpy.notation.plantri": [[177, 1, 1, "", "from_plantri_notation"], [178, 1, 1, "", "to_plantri_notation"]], "knotpy.notation.tests": [[180, 0, 0, "-", "test_notation"]], "knotpy.readwrite": [[182, 0, 0, "-", "cleanopen"], [184, 0, 0, "-", "text"]], "knotpy.readwrite.cleanopen": [[183, 1, 1, "", "prepend_to_extension"]], "knotpy.readwrite.text": [[185, 1, 1, "", "loadtxt_iterator"], [186, 1, 1, "", "loadtxt_multiple"], [187, 1, 1, "", "save_txt"]], "knotpy.utils": [[189, 0, 0, "-", "combinatorics"], [195, 0, 0, "-", "decorators"], [198, 0, 0, "-", "dict_utils"], [203, 0, 0, "-", "equivalence"], [205, 0, 0, "-", "exception"], [207, 0, 0, "-", "geometry"], [226, 0, 0, "-", "string_utils"]], "knotpy.utils.combinatorics": [[190, 1, 1, "", "combinations_with_limited_repetitions"], [191, 1, 1, "", "iterable_depth"], [192, 1, 1, "", "lexicographical_minimal_cyclic_rotation_shift"], [193, 1, 1, "", "parted_permutations"], [194, 1, 1, "", "union"]], "knotpy.utils.decorators": [[196, 1, 1, "", "multi_variable_invariant"], [197, 1, 1, "", "total_ordering_py3"]], "knotpy.utils.dict_utils": [[199, 1, 1, "", "compare_dicts"], [200, 2, 1, "", "identitydict"], [201, 1, 1, "", "inverse_dict"], [202, 1, 1, "", "inverse_multi_dict"]], "knotpy.utils.dict_utils.identitydict": [[200, 3, 1, "", "__init__"], [200, 3, 1, "", "clear"], [200, 3, 1, "", "copy"], [200, 5, 1, "", "default_factory"], [200, 3, 1, "", "fromkeys"], [200, 3, 1, "", "get"], [200, 3, 1, "", "items"], [200, 3, 1, "", "keys"], [200, 3, 1, "", "pop"], [200, 3, 1, "", "popitem"], [200, 3, 1, "", "setdefault"], [200, 3, 1, "", "update"], [200, 3, 1, "", "values"]], "knotpy.utils.equivalence": [[204, 2, 1, "", "EquivalenceRelation"]], "knotpy.utils.equivalence.EquivalenceRelation": [[204, 3, 1, "", "__init__"], [204, 3, 1, "", "clear"], [204, 3, 1, "", "copy"], [204, 3, 1, "", "fromkeys"], [204, 3, 1, "", "get"], [204, 3, 1, "", "items"], [204, 3, 1, "", "keys"], [204, 3, 1, "", "pop"], [204, 3, 1, "", "popitem"], [204, 3, 1, "", "setdefault"], [204, 3, 1, "", "update"], [204, 3, 1, "", "values"]], "knotpy.utils.exception": [[206, 6, 1, "", "KnotPyException"]], "knotpy.utils.geometry": [[208, 2, 1, "", "BoundingBox"], [209, 2, 1, "", "Circle"], [210, 2, 1, "", "CircularArc"], [211, 2, 1, "", "Line"], [212, 2, 1, "", "Segment"], [213, 1, 1, "", "antipode"], [214, 1, 1, "", "bisect"], [215, 1, 1, "", "bisector"], [216, 1, 1, "", "bounding_box"], [217, 1, 1, "", "circle_through_points"], [218, 1, 1, "", "inverse_point_through_circle"], [219, 1, 1, "", "is_angle_between"], [220, 1, 1, "", "middle"], [221, 1, 1, "", "perpendicular_arc"], [222, 1, 1, "", "perpendicular_arc_through_point"], [223, 1, 1, "", "perpendicular_line"], [224, 1, 1, "", "split"], [225, 1, 1, "", "tangent_line"]], "knotpy.utils.geometry.BoundingBox": [[208, 3, 1, "", "__init__"]], "knotpy.utils.geometry.Circle": [[209, 3, 1, "", "__init__"]], "knotpy.utils.geometry.CircularArc": [[210, 3, 1, "", "__init__"]], "knotpy.utils.geometry.Line": [[211, 3, 1, "", "__init__"], [211, 3, 1, "", "parameter_from_point"]], "knotpy.utils.geometry.Segment": [[212, 3, 1, "", "__init__"], [212, 3, 1, "", "parameter_from_point"]], "knotpy.utils.string_utils": [[227, 1, 1, "", "multi_replace"], [228, 1, 1, "", "nested_split"], [229, 1, 1, "", "string_to_nested_tuple_with_prefixes"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"spatial": 0, "graph": 0, "exampl": [0, 2, 4, 124], "basic": [1, 4], "draw": [2, 97, 110], "pars": [2, 5], "knotpi": [2, 9], "notat": [2, 4, 6, 161], "knot": [2, 5, 71, 72], "comput": [3, 7, 8, 231], "time": [3, 7, 8, 231], "licens": 9, "project": 9, "fund": 9, "instal": 10, "releas": 10, "version": 10, "develop": 10, "test": [10, 59, 89, 118, 179], "algorithm": 11, "canon": 12, "compon": 13, "add_unknot_in_plac": 14, "cut_set": 15, "disjoint_compon": 16, "disjoint_components_nod": 17, "disjoint_sum": 18, "is_connected_sum": 19, "is_connected_sum_third_ord": 20, "link_components_endpoint": 21, "number_of_disjoint_compon": 22, "number_of_link_compon": 23, "face": 24, "check_faces_san": 25, "choose_kink": 26, "choose_pok": 27, "poke": 28, "triangles_nonaltern": 29, "node_algorithm": 30, "add_node_to": 31, "degree_sequ": 32, "name_for_new_nod": 33, "name_for_next_node_gener": 34, "permute_nod": 35, "relabel_nod": 36, "orient": [37, 123], "all_orient": 38, "skein": 39, "smoothing_type_a": 40, "smoothing_type_b": 41, "structur": 42, "articulation_nod": 43, "bridg": 44, "cut_edg": 45, "cut_vertic": 46, "edg": 47, "kink_region_iter": 48, "kink": 49, "loop": 50, "number_of_edg": 51, "parallel_arc": 52, "path_from_endpoint": 53, "symmetri": 54, "mirror": 55, "tangle_algorithm": 56, "insert_tangl": 57, "insert_tangles_from": 58, "test_compon": 60, "testcompon": 61, "test_tangl": 62, "testtangl": 63, "class": 64, "bondedknot": [65, 66], "endpoint": [67, 68], "ingoingendpoint": 69, "outgoingendpoint": 70, "orientedknot": [73, 78], "knotoid": [74, 75], "node": [76, 77], "planardiagram": [79, 80], "planargraph": [81, 83], "orientedplanargraph": 82, "spatialgraph": [84, 86], "orientedspatialgraph": 85, "tangl": [87, 88], "endpoint_test": 90, "view": 91, "arcview": 92, "endpointview": 93, "faceview": 94, "filterednodeview": 95, "nodeview": 96, "circlepack": [98, 99], "invertaround": 100, "invertpack": 101, "normalizepack": 102, "acxyz": 103, "flower": 104, "place": 105, "testgrid": 106, "draw_matplotlib": 107, "arrow": 108, "average_color": 109, "draw_from_layout": 111, "export_pdf": 112, "to_color": 113, "layout": 114, "bezier": 115, "circlepack_layout": 116, "preprocess_diagram": 117, "plot_circl": 119, "test2": 120, "gener": 121, "convers": 122, "example_spatial_graph": 125, "handcuff_theta": 126, "oriented_trefoil": 127, "trefoil_knot": 128, "trefoil_theta": 129, "generate_planar_graph": [130, 131], "sort_graph": 132, "simpl": 133, "empty_knot": 134, "parallel_edg": 135, "simple_tangl": 136, "horizontal_tangl": 137, "integer_tangl": 138, "vertical_tangl": 139, "invari": 140, "bracket": 141, "bracket_polynomi": 142, "modul": [143, 144, 230], "yamada": [145, 146], "manipul": 147, "elementari": 148, "copy_and_move_arc": 149, "phantom": 150, "insert_phantom_nod": 151, "insert_phantom_nodes_on_internal_arc": 152, "is_node_phantom": 153, "reidemeist": 154, "add_kink": 155, "reidemeister_3": 156, "remove_kink": 157, "remove_pok": 158, "simplif": 159, "simplifi": 160, "dispatch": 162, "from_notation_dispatch": 163, "to_notation_dispatch": 164, "em": 165, "from_condensed_em_not": 166, "from_em_not": 167, "to_condensed_em_not": 168, "to_em_not": 169, "nativ": 170, "from_knotpy_not": 171, "to_knotpy_not": 172, "pd": 173, "from_pd_not": 174, "to_pd_not": 175, "plantri": 176, "from_plantri_not": 177, "to_plantri_not": 178, "test_not": 180, "readwrit": 181, "cleanopen": 182, "prepend_to_extens": 183, "text": 184, "loadtxt_iter": 185, "loadtxt_multipl": 186, "save_txt": 187, "util": 188, "combinator": 189, "combinations_with_limited_repetit": 190, "iterable_depth": 191, "lexicographical_minimal_cyclic_rotation_shift": 192, "parted_permut": 193, "union": 194, "decor": 195, "multi_variable_invari": 196, "total_ordering_py3": 197, "dict_util": 198, "compare_dict": 199, "identitydict": 200, "inverse_dict": 201, "inverse_multi_dict": 202, "equival": 203, "equivalencerel": 204, "except": 205, "knotpyexcept": 206, "geometri": 207, "boundingbox": 208, "circl": 209, "circulararc": 210, "line": 211, "segment": 212, "antipod": 213, "bisect": 214, "bisector": 215, "bounding_box": 216, "circle_through_point": 217, "inverse_point_through_circl": 218, "is_angle_between": 219, "middl": 220, "perpendicular_arc": 221, "perpendicular_arc_through_point": 222, "perpendicular_lin": 223, "split": 224, "tangent_lin": 225, "string_util": 226, "multi_replac": 227, "nested_split": 228, "string_to_nested_tuple_with_prefix": 229, "refer": 230, "tutori": 232}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Spatial graph example": [[0, "spatial-graph-example"]], "Basic": [[1, "basic"], [4, "basic"]], "Drawing example": [[2, "drawing-example"]], "Parsing knotpy notation": [[2, "parsing-knotpy-notation"]], "Drawing the knot": [[2, "drawing-the-knot"]], "Computation times": [[3, "computation-times"], [7, "computation-times"], [8, "computation-times"], [231, "computation-times"]], "Examples": [[4, "examples"]], "Notation": [[4, "notation"], [6, "notation"]], "Parsing knots": [[5, "parsing-knots"]], "KnotPy": [[9, "knotpy"]], "License": [[9, "license"]], "Project Funding": [[9, "project-funding"]], "Install": [[10, "install"]], "Install the released version": [[10, "install-the-released-version"]], "Install the development version": [[10, "install-the-development-version"]], "Testing": [[10, "testing"]], "algorithms": [[11, "module-knotpy.algorithms"]], "canonical": [[12, "module-knotpy.algorithms.canonical"]], "components": [[13, "module-knotpy.algorithms.components"]], "add_unknot_in_place": [[14, "add-unknot-in-place"]], "cut_sets": [[15, "cut-sets"]], "disjoint_components": [[16, "disjoint-components"]], "disjoint_components_nodes": [[17, "disjoint-components-nodes"]], "disjoint_sum": [[18, "disjoint-sum"]], "is_connected_sum": [[19, "is-connected-sum"]], "is_connected_sum_third_order": [[20, "is-connected-sum-third-order"]], "link_components_endpoints": [[21, "link-components-endpoints"]], "number_of_disjoint_components": [[22, "number-of-disjoint-components"]], "number_of_link_components": [[23, "number-of-link-components"]], "faces": [[24, "module-knotpy.algorithms.faces"]], "check_faces_sanity": [[25, "check-faces-sanity"]], "choose_kink": [[26, "choose-kink"]], "choose_poke": [[27, "choose-poke"]], "pokes": [[28, "pokes"]], "triangles_nonalternating": [[29, "triangles-nonalternating"]], "node_algorithms": [[30, "module-knotpy.algorithms.node_algorithms"]], "add_node_to": [[31, "add-node-to"]], "degree_sequence": [[32, "degree-sequence"]], "name_for_new_node": [[33, "name-for-new-node"]], "name_for_next_node_generator": [[34, "name-for-next-node-generator"]], "permute_node": [[35, "permute-node"]], "relabel_nodes": [[36, "relabel-nodes"]], "orientation": [[37, "module-knotpy.algorithms.orientation"]], "all_orientations": [[38, "all-orientations"]], "skein": [[39, "module-knotpy.algorithms.skein"]], "smoothing_type_A": [[40, "smoothing-type-a"]], "smoothing_type_B": [[41, "smoothing-type-b"]], "structure": [[42, "module-knotpy.algorithms.structure"]], "articulation_nodes": [[43, "articulation-nodes"]], "bridges": [[44, "bridges"]], "cut_edges": [[45, "cut-edges"]], "cut_vertices": [[46, "cut-vertices"]], "edges": [[47, "edges"]], "kink_region_iterator": [[48, "kink-region-iterator"]], "kinks": [[49, "kinks"]], "loops": [[50, "loops"]], "number_of_edges": [[51, "number-of-edges"]], "parallel_arcs": [[52, "parallel-arcs"]], "path_from_endpoint": [[53, "path-from-endpoint"]], "symmetry": [[54, "module-knotpy.algorithms.symmetry"]], "mirror": [[55, "mirror"]], "tangle_algorithms": [[56, "module-knotpy.algorithms.tangle_algorithms"]], "insert_tangle": [[57, "insert-tangle"]], "insert_tangles_from": [[58, "insert-tangles-from"]], "tests": [[59, "module-knotpy.algorithms.tests"], [89, "module-knotpy.classes.tests"], [179, "module-knotpy.notation.tests"]], "test_components": [[60, "module-knotpy.algorithms.tests.test_components"]], "TestComponents": [[61, "testcomponents"]], "test_tangle": [[62, "module-knotpy.algorithms.tests.test_tangle"]], "TestTangles": [[63, "testtangles"]], "classes": [[64, "module-knotpy.classes"]], "bondedknot": [[65, "module-knotpy.classes.bondedknot"]], "BondedKnot": [[66, "bondedknot"]], "endpoint": [[67, "module-knotpy.classes.endpoint"]], "Endpoint": [[68, "endpoint"]], "IngoingEndpoint": [[69, "ingoingendpoint"]], "OutgoingEndpoint": [[70, "outgoingendpoint"]], "knot": [[71, "module-knotpy.classes.knot"]], "Knot": [[72, "knot"]], "OrientedKnot": [[73, "orientedknot"]], "knotoid": [[74, "module-knotpy.classes.knotoid"]], "Knotoid": [[75, "knotoid"]], "node": [[76, "module-knotpy.classes.node"]], "Node": [[77, "node"]], "orientedknot": [[78, "module-knotpy.classes.orientedknot"]], "planardiagram": [[79, "module-knotpy.classes.planardiagram"]], "PlanarDiagram": [[80, "planardiagram"]], "planargraph": [[81, "module-knotpy.classes.planargraph"]], "OrientedPlanarGraph": [[82, "orientedplanargraph"]], "PlanarGraph": [[83, "planargraph"]], "spatialgraph": [[84, "module-knotpy.classes.spatialgraph"]], "OrientedSpatialGraph": [[85, "orientedspatialgraph"]], "SpatialGraph": [[86, "spatialgraph"]], "tangle": [[87, "module-knotpy.classes.tangle"]], "Tangle": [[88, "tangle"]], "endpoint_tests": [[90, "module-knotpy.classes.tests.endpoint_tests"]], "views": [[91, "module-knotpy.classes.views"]], "ArcView": [[92, "arcview"]], "EndpointView": [[93, "endpointview"]], "FaceView": [[94, "faceview"]], "FilteredNodeView": [[95, "filterednodeview"]], "NodeView": [[96, "nodeview"]], "drawing": [[97, "module-knotpy.drawing"]], "circlepack": [[98, "module-knotpy.drawing.circlepack"]], "CirclePack": [[99, "circlepack"]], "InvertAround": [[100, "invertaround"]], "InvertPacking": [[101, "invertpacking"]], "NormalizePacking": [[102, "normalizepacking"]], "acxyz": [[103, "acxyz"]], "flower": [[104, "flower"]], "place": [[105, "place"]], "testgrid": [[106, "testgrid"]], "draw_matplotlib": [[107, "module-knotpy.drawing.draw_matplotlib"]], "Arrow": [[108, "arrow"]], "average_color": [[109, "average-color"]], "draw": [[110, "draw"]], "draw_from_layout": [[111, "draw-from-layout"]], "export_pdf": [[112, "export-pdf"]], "to_color": [[113, "to-color"]], "layout": [[114, "module-knotpy.drawing.layout"]], "bezier": [[115, "bezier"]], "circlepack_layout": [[116, "circlepack-layout"]], "preprocess_diagram": [[117, "preprocess-diagram"]], "test": [[118, "module-knotpy.drawing.test"]], "plot_circles": [[119, "plot-circles"]], "test2": [[120, "module-knotpy.drawing.test2"]], "generate": [[121, "module-knotpy.generate"]], "conversions": [[122, "module-knotpy.generate.conversions"]], "orientations": [[123, "orientations"]], "example": [[124, "module-knotpy.generate.example"]], "example_spatial_graph": [[125, "example-spatial-graph"]], "handcuff_theta": [[126, "handcuff-theta"]], "oriented_trefoil": [[127, "oriented-trefoil"]], "trefoil_knot": [[128, "trefoil-knot"]], "trefoil_theta": [[129, "trefoil-theta"]], "generate_planar_graphs": [[130, "module-knotpy.generate.generate_planar_graphs"], [131, "generate-planar-graphs"]], "sort_graphs": [[132, "sort-graphs"]], "simple": [[133, "module-knotpy.generate.simple"]], "empty_knot": [[134, "empty-knot"]], "parallel_edge": [[135, "parallel-edge"]], "simple_tangles": [[136, "module-knotpy.generate.simple_tangles"]], "horizontal_tangle": [[137, "horizontal-tangle"]], "integer_tangle": [[138, "integer-tangle"]], "vertical_tangle": [[139, "vertical-tangle"]], "invariants": [[140, "module-knotpy.invariants"]], "bracket": [[141, "module-knotpy.invariants.bracket"]], "bracket_polynomial": [[142, "bracket-polynomial"]], "module": [[143, "module-knotpy.invariants.module"]], "Module": [[144, "module"]], "yamada": [[145, "module-knotpy.invariants.yamada"], [146, "yamada"]], "manipulation": [[147, "module-knotpy.manipulation"]], "elementary": [[148, "module-knotpy.manipulation.elementary"]], "copy_and_move_arc": [[149, "copy-and-move-arc"]], "phantom": [[150, "module-knotpy.manipulation.phantom"]], "insert_phantom_node": [[151, "insert-phantom-node"]], "insert_phantom_nodes_on_internal_arcs": [[152, "insert-phantom-nodes-on-internal-arcs"]], "is_node_phantom": [[153, "is-node-phantom"]], "reidemeister": [[154, "module-knotpy.manipulation.reidemeister"]], "add_kink": [[155, "add-kink"]], "reidemeister_3": [[156, "reidemeister-3"]], "remove_kink": [[157, "remove-kink"]], "remove_poke": [[158, "remove-poke"]], "simplification": [[159, "module-knotpy.manipulation.simplification"]], "simplify": [[160, "simplify"]], "notation": [[161, "module-knotpy.notation"]], "dispatcher": [[162, "module-knotpy.notation.dispatcher"]], "from_notation_dispatcher": [[163, "from-notation-dispatcher"]], "to_notation_dispatcher": [[164, "to-notation-dispatcher"]], "em": [[165, "module-knotpy.notation.em"]], "from_condensed_em_notation": [[166, "from-condensed-em-notation"]], "from_em_notation": [[167, "from-em-notation"]], "to_condensed_em_notation": [[168, "to-condensed-em-notation"]], "to_em_notation": [[169, "to-em-notation"]], "native": [[170, "module-knotpy.notation.native"]], "from_knotpy_notation": [[171, "from-knotpy-notation"]], "to_knotpy_notation": [[172, "to-knotpy-notation"]], "pd": [[173, "module-knotpy.notation.pd"]], "from_pd_notation": [[174, "from-pd-notation"]], "to_pd_notation": [[175, "to-pd-notation"]], "plantri": [[176, "module-knotpy.notation.plantri"]], "from_plantri_notation": [[177, "from-plantri-notation"]], "to_plantri_notation": [[178, "to-plantri-notation"]], "test_notation": [[180, "module-knotpy.notation.tests.test_notation"]], "readwrite": [[181, "module-knotpy.readwrite"]], "cleanopen": [[182, "module-knotpy.readwrite.cleanopen"]], "prepend_to_extension": [[183, "prepend-to-extension"]], "text": [[184, "module-knotpy.readwrite.text"]], "loadtxt_iterator": [[185, "loadtxt-iterator"]], "loadtxt_multiple": [[186, "loadtxt-multiple"]], "save_txt": [[187, "save-txt"]], "utils": [[188, "module-knotpy.utils"]], "combinatorics": [[189, "module-knotpy.utils.combinatorics"]], "combinations_with_limited_repetitions": [[190, "combinations-with-limited-repetitions"]], "iterable_depth": [[191, "iterable-depth"]], "lexicographical_minimal_cyclic_rotation_shift": [[192, "lexicographical-minimal-cyclic-rotation-shift"]], "parted_permutations": [[193, "parted-permutations"]], "union": [[194, "union"]], "decorators": [[195, "module-knotpy.utils.decorators"]], "multi_variable_invariant": [[196, "multi-variable-invariant"]], "total_ordering_py3": [[197, "total-ordering-py3"]], "dict_utils": [[198, "module-knotpy.utils.dict_utils"]], "compare_dicts": [[199, "compare-dicts"]], "identitydict": [[200, "identitydict"]], "inverse_dict": [[201, "inverse-dict"]], "inverse_multi_dict": [[202, "inverse-multi-dict"]], "equivalence": [[203, "module-knotpy.utils.equivalence"]], "EquivalenceRelation": [[204, "equivalencerelation"]], "exception": [[205, "module-knotpy.utils.exception"]], "KnotPyException": [[206, "knotpyexception"]], "geometry": [[207, "module-knotpy.utils.geometry"]], "BoundingBox": [[208, "boundingbox"]], "Circle": [[209, "circle"]], "CircularArc": [[210, "circulararc"]], "Line": [[211, "line"]], "Segment": [[212, "segment"]], "antipode": [[213, "antipode"]], "bisect": [[214, "bisect"]], "bisector": [[215, "bisector"]], "bounding_box": [[216, "bounding-box"]], "circle_through_points": [[217, "circle-through-points"]], "inverse_point_through_circle": [[218, "inverse-point-through-circle"]], "is_angle_between": [[219, "is-angle-between"]], "middle": [[220, "middle"]], "perpendicular_arc": [[221, "perpendicular-arc"]], "perpendicular_arc_through_point": [[222, "perpendicular-arc-through-point"]], "perpendicular_line": [[223, "perpendicular-line"]], "split": [[224, "split"]], "tangent_line": [[225, "tangent-line"]], "string_utils": [[226, "module-knotpy.utils.string_utils"]], "multi_replace": [[227, "multi-replace"]], "nested_split": [[228, "nested-split"]], "string_to_nested_tuple_with_prefixes": [[229, "string-to-nested-tuple-with-prefixes"]], "Reference": [[230, "reference"]], "Modules": [[230, "module-knotpy"]], "Tutorial": [[232, "tutorial"]]}, "indexentries": {"knotpy.algorithms": [[11, "module-knotpy.algorithms"]], "module": [[11, "module-knotpy.algorithms"], [12, "module-knotpy.algorithms.canonical"], [13, "module-knotpy.algorithms.components"], [24, "module-knotpy.algorithms.faces"], [30, "module-knotpy.algorithms.node_algorithms"], [37, "module-knotpy.algorithms.orientation"], [39, "module-knotpy.algorithms.skein"], [42, "module-knotpy.algorithms.structure"], [54, "module-knotpy.algorithms.symmetry"], [56, "module-knotpy.algorithms.tangle_algorithms"], [59, "module-knotpy.algorithms.tests"], [60, "module-knotpy.algorithms.tests.test_components"], [62, "module-knotpy.algorithms.tests.test_tangle"], [64, "module-knotpy.classes"], [65, "module-knotpy.classes.bondedknot"], [67, "module-knotpy.classes.endpoint"], [71, "module-knotpy.classes.knot"], [74, "module-knotpy.classes.knotoid"], [76, "module-knotpy.classes.node"], [78, "module-knotpy.classes.orientedknot"], [79, "module-knotpy.classes.planardiagram"], [81, "module-knotpy.classes.planargraph"], [84, "module-knotpy.classes.spatialgraph"], [87, "module-knotpy.classes.tangle"], [89, "module-knotpy.classes.tests"], [90, "module-knotpy.classes.tests.endpoint_tests"], [91, "module-knotpy.classes.views"], [97, "module-knotpy.drawing"], [98, "module-knotpy.drawing.circlepack"], [107, "module-knotpy.drawing.draw_matplotlib"], [114, "module-knotpy.drawing.layout"], [118, "module-knotpy.drawing.test"], [120, "module-knotpy.drawing.test2"], [121, "module-knotpy.generate"], [122, "module-knotpy.generate.conversions"], [124, "module-knotpy.generate.example"], [130, "module-knotpy.generate.generate_planar_graphs"], [133, "module-knotpy.generate.simple"], [136, "module-knotpy.generate.simple_tangles"], [140, "module-knotpy.invariants"], [141, "module-knotpy.invariants.bracket"], [143, "module-knotpy.invariants.module"], [145, "module-knotpy.invariants.yamada"], [147, "module-knotpy.manipulation"], [148, "module-knotpy.manipulation.elementary"], [150, "module-knotpy.manipulation.phantom"], [154, "module-knotpy.manipulation.reidemeister"], [159, "module-knotpy.manipulation.simplification"], [161, "module-knotpy.notation"], [162, "module-knotpy.notation.dispatcher"], [165, "module-knotpy.notation.em"], [170, "module-knotpy.notation.native"], [173, "module-knotpy.notation.pd"], [176, "module-knotpy.notation.plantri"], [179, "module-knotpy.notation.tests"], [180, "module-knotpy.notation.tests.test_notation"], [181, "module-knotpy.readwrite"], [182, "module-knotpy.readwrite.cleanopen"], [184, "module-knotpy.readwrite.text"], [188, "module-knotpy.utils"], [189, "module-knotpy.utils.combinatorics"], [195, "module-knotpy.utils.decorators"], [198, "module-knotpy.utils.dict_utils"], [203, "module-knotpy.utils.equivalence"], [205, "module-knotpy.utils.exception"], [207, "module-knotpy.utils.geometry"], [226, "module-knotpy.utils.string_utils"], [230, "module-knotpy"]], "knotpy.algorithms.canonical": [[12, "module-knotpy.algorithms.canonical"]], "knotpy.algorithms.components": [[13, "module-knotpy.algorithms.components"]], "add_unknot_in_place() (in module knotpy.algorithms.components)": [[14, "knotpy.algorithms.components.add_unknot_in_place"]], "cut_sets() (in module knotpy.algorithms.components)": [[15, "knotpy.algorithms.components.cut_sets"]], "disjoint_components() (in module knotpy.algorithms.components)": [[16, "knotpy.algorithms.components.disjoint_components"]], "disjoint_components_nodes() (in module knotpy.algorithms.components)": [[17, "knotpy.algorithms.components.disjoint_components_nodes"]], "disjoint_sum() (in module knotpy.algorithms.components)": [[18, "knotpy.algorithms.components.disjoint_sum"]], "is_connected_sum() (in module knotpy.algorithms.components)": [[19, "knotpy.algorithms.components.is_connected_sum"]], "is_connected_sum_third_order() (in module knotpy.algorithms.components)": [[20, "knotpy.algorithms.components.is_connected_sum_third_order"]], "link_components_endpoints() (in module knotpy.algorithms.components)": [[21, "knotpy.algorithms.components.link_components_endpoints"]], "number_of_disjoint_components() (in module knotpy.algorithms.components)": [[22, "knotpy.algorithms.components.number_of_disjoint_components"]], "number_of_link_components() (in module knotpy.algorithms.components)": [[23, "knotpy.algorithms.components.number_of_link_components"]], "knotpy.algorithms.faces": [[24, "module-knotpy.algorithms.faces"]], "check_faces_sanity() (in module knotpy.algorithms.faces)": [[25, "knotpy.algorithms.faces.check_faces_sanity"]], "choose_kink() (in module knotpy.algorithms.faces)": [[26, "knotpy.algorithms.faces.choose_kink"]], "choose_poke() (in module knotpy.algorithms.faces)": [[27, "knotpy.algorithms.faces.choose_poke"]], "pokes() (in module knotpy.algorithms.faces)": [[28, "knotpy.algorithms.faces.pokes"]], "triangles_nonalternating() (in module knotpy.algorithms.faces)": [[29, "knotpy.algorithms.faces.triangles_nonalternating"]], "knotpy.algorithms.node_algorithms": [[30, "module-knotpy.algorithms.node_algorithms"]], "add_node_to() (in module knotpy.algorithms.node_algorithms)": [[31, "knotpy.algorithms.node_algorithms.add_node_to"]], "degree_sequence() (in module knotpy.algorithms.node_algorithms)": [[32, "knotpy.algorithms.node_algorithms.degree_sequence"]], "name_for_new_node() (in module knotpy.algorithms.node_algorithms)": [[33, "knotpy.algorithms.node_algorithms.name_for_new_node"]], "name_for_next_node_generator() (in module knotpy.algorithms.node_algorithms)": [[34, "knotpy.algorithms.node_algorithms.name_for_next_node_generator"]], "permute_node() (in module knotpy.algorithms.node_algorithms)": [[35, "knotpy.algorithms.node_algorithms.permute_node"]], "relabel_nodes() (in module knotpy.algorithms.node_algorithms)": [[36, "knotpy.algorithms.node_algorithms.relabel_nodes"]], "knotpy.algorithms.orientation": [[37, "module-knotpy.algorithms.orientation"]], "all_orientations() (in module knotpy.algorithms.orientation)": [[38, "knotpy.algorithms.orientation.all_orientations"]], "knotpy.algorithms.skein": [[39, "module-knotpy.algorithms.skein"]], "smoothing_type_a() (in module knotpy.algorithms.skein)": [[40, "knotpy.algorithms.skein.smoothing_type_A"]], "smoothing_type_b() (in module knotpy.algorithms.skein)": [[41, "knotpy.algorithms.skein.smoothing_type_B"]], "knotpy.algorithms.structure": [[42, "module-knotpy.algorithms.structure"]], "articulation_nodes() (in module knotpy.algorithms.structure)": [[43, "knotpy.algorithms.structure.articulation_nodes"]], "bridges() (in module knotpy.algorithms.structure)": [[44, "knotpy.algorithms.structure.bridges"]], "cut_edges() (in module knotpy.algorithms.structure)": [[45, "knotpy.algorithms.structure.cut_edges"]], "cut_vertices() (in module knotpy.algorithms.structure)": [[46, "knotpy.algorithms.structure.cut_vertices"]], "edges() (in module knotpy.algorithms.structure)": [[47, "knotpy.algorithms.structure.edges"]], "kink_region_iterator() (in module knotpy.algorithms.structure)": [[48, "knotpy.algorithms.structure.kink_region_iterator"]], "kinks() (in module knotpy.algorithms.structure)": [[49, "knotpy.algorithms.structure.kinks"]], "loops() (in module knotpy.algorithms.structure)": [[50, "knotpy.algorithms.structure.loops"]], "number_of_edges() (in module knotpy.algorithms.structure)": [[51, "knotpy.algorithms.structure.number_of_edges"]], "parallel_arcs() (in module knotpy.algorithms.structure)": [[52, "knotpy.algorithms.structure.parallel_arcs"]], "path_from_endpoint() (in module knotpy.algorithms.structure)": [[53, "knotpy.algorithms.structure.path_from_endpoint"]], "knotpy.algorithms.symmetry": [[54, "module-knotpy.algorithms.symmetry"]], "mirror() (in module knotpy.algorithms.symmetry)": [[55, "knotpy.algorithms.symmetry.mirror"]], "knotpy.algorithms.tangle_algorithms": [[56, "module-knotpy.algorithms.tangle_algorithms"]], "insert_tangle() (in module knotpy.algorithms.tangle_algorithms)": [[57, "knotpy.algorithms.tangle_algorithms.insert_tangle"]], "insert_tangles_from() (in module knotpy.algorithms.tangle_algorithms)": [[58, "knotpy.algorithms.tangle_algorithms.insert_tangles_from"]], "knotpy.algorithms.tests": [[59, "module-knotpy.algorithms.tests"]], "knotpy.algorithms.tests.test_components": [[60, "module-knotpy.algorithms.tests.test_components"]], "testcomponents (class in knotpy.algorithms.tests.test_components)": [[61, "knotpy.algorithms.tests.test_components.TestComponents"]], "__init__() (testcomponents method)": [[61, "knotpy.algorithms.tests.test_components.TestComponents.__init__"]], "knotpy.algorithms.tests.test_tangle": [[62, "module-knotpy.algorithms.tests.test_tangle"]], "testtangles (class in knotpy.algorithms.tests.test_tangle)": [[63, "knotpy.algorithms.tests.test_tangle.TestTangles"]], "__init__() (testtangles method)": [[63, "knotpy.algorithms.tests.test_tangle.TestTangles.__init__"]], "knotpy.classes": [[64, "module-knotpy.classes"]], "knotpy.classes.bondedknot": [[65, "module-knotpy.classes.bondedknot"]], "bondedknot (class in knotpy.classes.bondedknot)": [[66, "knotpy.classes.bondedknot.BondedKnot"]], "__init__() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.__init__"]], "add_bivalent_vertex() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.add_bivalent_vertex"]], "add_bivalent_vertices() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.add_bivalent_vertices"]], "add_crossing() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.add_crossing"]], "add_crossings_from() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.add_crossings_from"]], "add_node() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.add_node"]], "add_nodes_from() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.add_nodes_from"]], "arcs (bondedknot property)": [[66, "knotpy.classes.bondedknot.BondedKnot.arcs"]], "bivalent_vertices (bondedknot property)": [[66, "knotpy.classes.bondedknot.BondedKnot.bivalent_vertices"]], "clear() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.clear"]], "copy() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.copy"]], "crossings (bondedknot property)": [[66, "knotpy.classes.bondedknot.BondedKnot.crossings"]], "endpoints (bondedknot property)": [[66, "knotpy.classes.bondedknot.BondedKnot.endpoints"]], "faces (bondedknot property)": [[66, "knotpy.classes.bondedknot.BondedKnot.faces"]], "framing (bondedknot property)": [[66, "knotpy.classes.bondedknot.BondedKnot.framing"]], "get_endpoint() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.get_endpoint"]], "get_endpoint_from_pair() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.get_endpoint_from_pair"]], "jump_over_node() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.jump_over_node"]], "name (bondedknot property)": [[66, "knotpy.classes.bondedknot.BondedKnot.name"]], "nodes (bondedknot property)": [[66, "knotpy.classes.bondedknot.BondedKnot.nodes"]], "permute_node() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.permute_node"]], "py3_cmp() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.py3_cmp"]], "relabel_nodes() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.relabel_nodes"]], "remove_node() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.remove_node"]], "rotate_node_ccw() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.rotate_node_ccw"]], "set_arc() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.set_arc"]], "set_arcs_from() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.set_arcs_from"]], "set_endpoint() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.set_endpoint"]], "twin() (bondedknot method)": [[66, "knotpy.classes.bondedknot.BondedKnot.twin"]], "knotpy.classes.endpoint": [[67, "module-knotpy.classes.endpoint"]], "endpoint (class in knotpy.classes.endpoint)": [[68, "knotpy.classes.endpoint.Endpoint"]], "__init__() (endpoint method)": [[68, "knotpy.classes.endpoint.Endpoint.__init__"]], "ingoingendpoint (class in knotpy.classes.endpoint)": [[69, "knotpy.classes.endpoint.IngoingEndpoint"]], "__init__() (ingoingendpoint method)": [[69, "knotpy.classes.endpoint.IngoingEndpoint.__init__"]], "outgoingendpoint (class in knotpy.classes.endpoint)": [[70, "knotpy.classes.endpoint.OutgoingEndpoint"]], "__init__() (outgoingendpoint method)": [[70, "knotpy.classes.endpoint.OutgoingEndpoint.__init__"]], "knotpy.classes.knot": [[71, "module-knotpy.classes.knot"]], "knot (class in knotpy.classes.knot)": [[72, "knotpy.classes.knot.Knot"]], "__init__() (knot method)": [[72, "knotpy.classes.knot.Knot.__init__"]], "add_bivalent_vertex() (knot method)": [[72, "knotpy.classes.knot.Knot.add_bivalent_vertex"]], "add_bivalent_vertices() (knot method)": [[72, "knotpy.classes.knot.Knot.add_bivalent_vertices"]], "add_crossing() (knot method)": [[72, "knotpy.classes.knot.Knot.add_crossing"]], "add_crossings_from() (knot method)": [[72, "knotpy.classes.knot.Knot.add_crossings_from"]], "add_node() (knot method)": [[72, "knotpy.classes.knot.Knot.add_node"]], "add_nodes_from() (knot method)": [[72, "knotpy.classes.knot.Knot.add_nodes_from"]], "arcs (knot property)": [[72, "knotpy.classes.knot.Knot.arcs"]], "bivalent_vertices (knot property)": [[72, "knotpy.classes.knot.Knot.bivalent_vertices"]], "clear() (knot method)": [[72, "knotpy.classes.knot.Knot.clear"]], "copy() (knot method)": [[72, "knotpy.classes.knot.Knot.copy"]], "crossings (knot property)": [[72, "knotpy.classes.knot.Knot.crossings"]], "endpoints (knot property)": [[72, "knotpy.classes.knot.Knot.endpoints"]], "faces (knot property)": [[72, "knotpy.classes.knot.Knot.faces"]], "framing (knot property)": [[72, "knotpy.classes.knot.Knot.framing"]], "get_endpoint() (knot method)": [[72, "knotpy.classes.knot.Knot.get_endpoint"]], "get_endpoint_from_pair() (knot method)": [[72, "knotpy.classes.knot.Knot.get_endpoint_from_pair"]], "jump_over_node() (knot method)": [[72, "knotpy.classes.knot.Knot.jump_over_node"]], "name (knot property)": [[72, "knotpy.classes.knot.Knot.name"]], "nodes (knot property)": [[72, "knotpy.classes.knot.Knot.nodes"]], "permute_node() (knot method)": [[72, "knotpy.classes.knot.Knot.permute_node"]], "py3_cmp() (knot method)": [[72, "knotpy.classes.knot.Knot.py3_cmp"]], "relabel_nodes() (knot method)": [[72, "knotpy.classes.knot.Knot.relabel_nodes"]], "remove_node() (knot method)": [[72, "knotpy.classes.knot.Knot.remove_node"]], "rotate_node_ccw() (knot method)": [[72, "knotpy.classes.knot.Knot.rotate_node_ccw"]], "set_arc() (knot method)": [[72, "knotpy.classes.knot.Knot.set_arc"]], "set_arcs_from() (knot method)": [[72, "knotpy.classes.knot.Knot.set_arcs_from"]], "set_endpoint() (knot method)": [[72, "knotpy.classes.knot.Knot.set_endpoint"]], "twin() (knot method)": [[72, "knotpy.classes.knot.Knot.twin"]], "orientedknot (class in knotpy.classes.knot)": [[73, "knotpy.classes.knot.OrientedKnot"]], "__init__() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.__init__"]], "add_bivalent_vertex() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.add_bivalent_vertex"]], "add_bivalent_vertices() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.add_bivalent_vertices"]], "add_crossing() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.add_crossing"]], "add_crossings_from() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.add_crossings_from"]], "add_node() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.add_node"]], "add_nodes_from() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.add_nodes_from"]], "arcs (orientedknot property)": [[73, "knotpy.classes.knot.OrientedKnot.arcs"]], "bivalent_vertices (orientedknot property)": [[73, "knotpy.classes.knot.OrientedKnot.bivalent_vertices"]], "clear() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.clear"]], "copy() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.copy"]], "crossings (orientedknot property)": [[73, "knotpy.classes.knot.OrientedKnot.crossings"]], "endpoints (orientedknot property)": [[73, "knotpy.classes.knot.OrientedKnot.endpoints"]], "faces (orientedknot property)": [[73, "knotpy.classes.knot.OrientedKnot.faces"]], "framing (orientedknot property)": [[73, "knotpy.classes.knot.OrientedKnot.framing"]], "get_endpoint() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.get_endpoint"]], "get_endpoint_from_pair() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.get_endpoint_from_pair"]], "jump_over_node() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.jump_over_node"]], "name (orientedknot property)": [[73, "knotpy.classes.knot.OrientedKnot.name"]], "nodes (orientedknot property)": [[73, "knotpy.classes.knot.OrientedKnot.nodes"]], "permute_node() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.permute_node"]], "py3_cmp() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.py3_cmp"]], "relabel_nodes() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.relabel_nodes"]], "remove_node() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.remove_node"]], "rotate_node_ccw() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.rotate_node_ccw"]], "set_arc() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.set_arc"]], "set_arcs_from() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.set_arcs_from"]], "set_endpoint() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.set_endpoint"]], "twin() (orientedknot method)": [[73, "knotpy.classes.knot.OrientedKnot.twin"]], "knotpy.classes.knotoid": [[74, "module-knotpy.classes.knotoid"]], "knotoid (class in knotpy.classes.knotoid)": [[75, "knotpy.classes.knotoid.Knotoid"]], "__init__() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.__init__"]], "add_bivalent_vertex() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.add_bivalent_vertex"]], "add_bivalent_vertices() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.add_bivalent_vertices"]], "add_crossing() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.add_crossing"]], "add_crossings_from() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.add_crossings_from"]], "add_node() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.add_node"]], "add_nodes_from() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.add_nodes_from"]], "add_terminal() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.add_terminal"]], "add_terminals_from() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.add_terminals_from"]], "arcs (knotoid property)": [[75, "knotpy.classes.knotoid.Knotoid.arcs"]], "bivalent_vertices (knotoid property)": [[75, "knotpy.classes.knotoid.Knotoid.bivalent_vertices"]], "clear() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.clear"]], "copy() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.copy"]], "crossings (knotoid property)": [[75, "knotpy.classes.knotoid.Knotoid.crossings"]], "endpoints (knotoid property)": [[75, "knotpy.classes.knotoid.Knotoid.endpoints"]], "faces (knotoid property)": [[75, "knotpy.classes.knotoid.Knotoid.faces"]], "framing (knotoid property)": [[75, "knotpy.classes.knotoid.Knotoid.framing"]], "get_endpoint() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.get_endpoint"]], "get_endpoint_from_pair() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.get_endpoint_from_pair"]], "jump_over_node() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.jump_over_node"]], "name (knotoid property)": [[75, "knotpy.classes.knotoid.Knotoid.name"]], "nodes (knotoid property)": [[75, "knotpy.classes.knotoid.Knotoid.nodes"]], "permute_node() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.permute_node"]], "py3_cmp() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.py3_cmp"]], "relabel_nodes() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.relabel_nodes"]], "remove_node() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.remove_node"]], "rotate_node_ccw() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.rotate_node_ccw"]], "set_arc() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.set_arc"]], "set_arcs_from() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.set_arcs_from"]], "set_endpoint() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.set_endpoint"]], "terminals (knotoid property)": [[75, "knotpy.classes.knotoid.Knotoid.terminals"]], "twin() (knotoid method)": [[75, "knotpy.classes.knotoid.Knotoid.twin"]], "knotpy.classes.node": [[76, "module-knotpy.classes.node"]], "node (class in knotpy.classes.node)": [[77, "knotpy.classes.node.Node"]], "__init__() (node method)": [[77, "knotpy.classes.node.Node.__init__"]], "py3_cmp() (node method)": [[77, "knotpy.classes.node.Node.py3_cmp"]], "knotpy.classes.orientedknot": [[78, "module-knotpy.classes.orientedknot"]], "knotpy.classes.planardiagram": [[79, "module-knotpy.classes.planardiagram"]], "planardiagram (class in knotpy.classes.planardiagram)": [[80, "knotpy.classes.planardiagram.PlanarDiagram"]], "__init__() (planardiagram method)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.__init__"]], "add_node() (planardiagram method)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.add_node"]], "add_nodes_from() (planardiagram method)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.add_nodes_from"]], "arcs (planardiagram property)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.arcs"]], "clear() (planardiagram method)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.clear"]], "copy() (planardiagram method)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.copy"]], "endpoints (planardiagram property)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.endpoints"]], "faces (planardiagram property)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.faces"]], "framing (planardiagram property)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.framing"]], "get_endpoint() (planardiagram method)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.get_endpoint"]], "get_endpoint_from_pair() (planardiagram method)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.get_endpoint_from_pair"]], "jump_over_node() (planardiagram method)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.jump_over_node"]], "name (planardiagram property)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.name"]], "nodes (planardiagram property)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.nodes"]], "permute_node() (planardiagram method)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.permute_node"]], "py3_cmp() (planardiagram method)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.py3_cmp"]], "relabel_nodes() (planardiagram method)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.relabel_nodes"]], "remove_node() (planardiagram method)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.remove_node"]], "rotate_node_ccw() (planardiagram method)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.rotate_node_ccw"]], "set_arc() (planardiagram method)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.set_arc"]], "set_arcs_from() (planardiagram method)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.set_arcs_from"]], "set_endpoint() (planardiagram method)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.set_endpoint"]], "twin() (planardiagram method)": [[80, "knotpy.classes.planardiagram.PlanarDiagram.twin"]], "knotpy.classes.planargraph": [[81, "module-knotpy.classes.planargraph"]], "orientedplanargraph (class in knotpy.classes.planargraph)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph"]], "__init__() (orientedplanargraph method)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.__init__"]], "add_node() (orientedplanargraph method)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.add_node"]], "add_nodes_from() (orientedplanargraph method)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.add_nodes_from"]], "arcs (orientedplanargraph property)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.arcs"]], "clear() (orientedplanargraph method)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.clear"]], "copy() (orientedplanargraph method)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.copy"]], "endpoints (orientedplanargraph property)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.endpoints"]], "faces (orientedplanargraph property)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.faces"]], "framing (orientedplanargraph property)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.framing"]], "get_endpoint() (orientedplanargraph method)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.get_endpoint"]], "get_endpoint_from_pair() (orientedplanargraph method)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.get_endpoint_from_pair"]], "jump_over_node() (orientedplanargraph method)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.jump_over_node"]], "name (orientedplanargraph property)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.name"]], "nodes (orientedplanargraph property)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.nodes"]], "permute_node() (orientedplanargraph method)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.permute_node"]], "py3_cmp() (orientedplanargraph method)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.py3_cmp"]], "relabel_nodes() (orientedplanargraph method)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.relabel_nodes"]], "remove_node() (orientedplanargraph method)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.remove_node"]], "rotate_node_ccw() (orientedplanargraph method)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.rotate_node_ccw"]], "set_arc() (orientedplanargraph method)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.set_arc"]], "set_arcs_from() (orientedplanargraph method)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.set_arcs_from"]], "set_endpoint() (orientedplanargraph method)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.set_endpoint"]], "twin() (orientedplanargraph method)": [[82, "knotpy.classes.planargraph.OrientedPlanarGraph.twin"]], "planargraph (class in knotpy.classes.planargraph)": [[83, "knotpy.classes.planargraph.PlanarGraph"]], "__init__() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.__init__"]], "add_node() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.add_node"]], "add_nodes_from() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.add_nodes_from"]], "add_vertex() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.add_vertex"]], "add_vertices_from() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.add_vertices_from"]], "arcs (planargraph property)": [[83, "knotpy.classes.planargraph.PlanarGraph.arcs"]], "clear() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.clear"]], "copy() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.copy"]], "endpoints (planargraph property)": [[83, "knotpy.classes.planargraph.PlanarGraph.endpoints"]], "faces (planargraph property)": [[83, "knotpy.classes.planargraph.PlanarGraph.faces"]], "framing (planargraph property)": [[83, "knotpy.classes.planargraph.PlanarGraph.framing"]], "get_endpoint() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.get_endpoint"]], "get_endpoint_from_pair() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.get_endpoint_from_pair"]], "jump_over_node() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.jump_over_node"]], "name (planargraph property)": [[83, "knotpy.classes.planargraph.PlanarGraph.name"]], "nodes (planargraph property)": [[83, "knotpy.classes.planargraph.PlanarGraph.nodes"]], "permute_node() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.permute_node"]], "py3_cmp() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.py3_cmp"]], "relabel_nodes() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.relabel_nodes"]], "remove_node() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.remove_node"]], "rotate_node_ccw() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.rotate_node_ccw"]], "set_arc() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.set_arc"]], "set_arcs_from() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.set_arcs_from"]], "set_endpoint() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.set_endpoint"]], "twin() (planargraph method)": [[83, "knotpy.classes.planargraph.PlanarGraph.twin"]], "vertices (planargraph property)": [[83, "knotpy.classes.planargraph.PlanarGraph.vertices"]], "knotpy.classes.spatialgraph": [[84, "module-knotpy.classes.spatialgraph"]], "orientedspatialgraph (class in knotpy.classes.spatialgraph)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph"]], "__init__() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.__init__"]], "add_bivalent_vertex() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.add_bivalent_vertex"]], "add_bivalent_vertices() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.add_bivalent_vertices"]], "add_crossing() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.add_crossing"]], "add_crossings_from() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.add_crossings_from"]], "add_node() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.add_node"]], "add_nodes_from() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.add_nodes_from"]], "add_vertex() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.add_vertex"]], "add_vertices_from() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.add_vertices_from"]], "arcs (orientedspatialgraph property)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.arcs"]], "bivalent_vertices (orientedspatialgraph property)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.bivalent_vertices"]], "clear() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.clear"]], "copy() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.copy"]], "crossings (orientedspatialgraph property)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.crossings"]], "endpoints (orientedspatialgraph property)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.endpoints"]], "faces (orientedspatialgraph property)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.faces"]], "framing (orientedspatialgraph property)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.framing"]], "get_endpoint() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.get_endpoint"]], "get_endpoint_from_pair() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.get_endpoint_from_pair"]], "jump_over_node() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.jump_over_node"]], "name (orientedspatialgraph property)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.name"]], "nodes (orientedspatialgraph property)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.nodes"]], "permute_node() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.permute_node"]], "py3_cmp() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.py3_cmp"]], "relabel_nodes() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.relabel_nodes"]], "remove_node() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.remove_node"]], "rotate_node_ccw() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.rotate_node_ccw"]], "set_arc() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.set_arc"]], "set_arcs_from() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.set_arcs_from"]], "set_endpoint() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.set_endpoint"]], "twin() (orientedspatialgraph method)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.twin"]], "vertices (orientedspatialgraph property)": [[85, "knotpy.classes.spatialgraph.OrientedSpatialGraph.vertices"]], "spatialgraph (class in knotpy.classes.spatialgraph)": [[86, "knotpy.classes.spatialgraph.SpatialGraph"]], "__init__() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.__init__"]], "add_bivalent_vertex() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.add_bivalent_vertex"]], "add_bivalent_vertices() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.add_bivalent_vertices"]], "add_crossing() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.add_crossing"]], "add_crossings_from() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.add_crossings_from"]], "add_node() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.add_node"]], "add_nodes_from() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.add_nodes_from"]], "add_vertex() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.add_vertex"]], "add_vertices_from() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.add_vertices_from"]], "arcs (spatialgraph property)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.arcs"]], "bivalent_vertices (spatialgraph property)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.bivalent_vertices"]], "clear() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.clear"]], "copy() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.copy"]], "crossings (spatialgraph property)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.crossings"]], "endpoints (spatialgraph property)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.endpoints"]], "faces (spatialgraph property)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.faces"]], "framing (spatialgraph property)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.framing"]], "get_endpoint() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.get_endpoint"]], "get_endpoint_from_pair() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.get_endpoint_from_pair"]], "jump_over_node() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.jump_over_node"]], "name (spatialgraph property)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.name"]], "nodes (spatialgraph property)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.nodes"]], "permute_node() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.permute_node"]], "py3_cmp() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.py3_cmp"]], "relabel_nodes() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.relabel_nodes"]], "remove_node() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.remove_node"]], "rotate_node_ccw() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.rotate_node_ccw"]], "set_arc() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.set_arc"]], "set_arcs_from() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.set_arcs_from"]], "set_endpoint() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.set_endpoint"]], "twin() (spatialgraph method)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.twin"]], "vertices (spatialgraph property)": [[86, "knotpy.classes.spatialgraph.SpatialGraph.vertices"]], "knotpy.classes.tangle": [[87, "module-knotpy.classes.tangle"]], "tangle (class in knotpy.classes.tangle)": [[88, "knotpy.classes.tangle.Tangle"]], "__init__() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.__init__"]], "add_bivalent_vertex() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.add_bivalent_vertex"]], "add_bivalent_vertices() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.add_bivalent_vertices"]], "add_crossing() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.add_crossing"]], "add_crossings_from() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.add_crossings_from"]], "add_node() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.add_node"]], "add_nodes_from() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.add_nodes_from"]], "add_terminal() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.add_terminal"]], "add_terminals_from() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.add_terminals_from"]], "arcs (tangle property)": [[88, "knotpy.classes.tangle.Tangle.arcs"]], "bivalent_vertices (tangle property)": [[88, "knotpy.classes.tangle.Tangle.bivalent_vertices"]], "clear() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.clear"]], "copy() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.copy"]], "crossings (tangle property)": [[88, "knotpy.classes.tangle.Tangle.crossings"]], "endpoints (tangle property)": [[88, "knotpy.classes.tangle.Tangle.endpoints"]], "faces (tangle property)": [[88, "knotpy.classes.tangle.Tangle.faces"]], "framing (tangle property)": [[88, "knotpy.classes.tangle.Tangle.framing"]], "get_endpoint() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.get_endpoint"]], "get_endpoint_from_pair() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.get_endpoint_from_pair"]], "jump_over_node() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.jump_over_node"]], "name (tangle property)": [[88, "knotpy.classes.tangle.Tangle.name"]], "nodes (tangle property)": [[88, "knotpy.classes.tangle.Tangle.nodes"]], "permute_node() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.permute_node"]], "py3_cmp() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.py3_cmp"]], "relabel_nodes() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.relabel_nodes"]], "remove_node() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.remove_node"]], "rotate_node_ccw() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.rotate_node_ccw"]], "set_arc() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.set_arc"]], "set_arcs_from() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.set_arcs_from"]], "set_endpoint() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.set_endpoint"]], "terminals (tangle property)": [[88, "knotpy.classes.tangle.Tangle.terminals"]], "twin() (tangle method)": [[88, "knotpy.classes.tangle.Tangle.twin"]], "knotpy.classes.tests": [[89, "module-knotpy.classes.tests"]], "knotpy.classes.tests.endpoint_tests": [[90, "module-knotpy.classes.tests.endpoint_tests"]], "knotpy.classes.views": [[91, "module-knotpy.classes.views"]], "arcview (class in knotpy.classes.views)": [[92, "knotpy.classes.views.ArcView"]], "__init__() (arcview method)": [[92, "knotpy.classes.views.ArcView.__init__"]], "get() (arcview method)": [[92, "knotpy.classes.views.ArcView.get"]], "isdisjoint() (arcview method)": [[92, "knotpy.classes.views.ArcView.isdisjoint"]], "items() (arcview method)": [[92, "knotpy.classes.views.ArcView.items"]], "keys() (arcview method)": [[92, "knotpy.classes.views.ArcView.keys"]], "values() (arcview method)": [[92, "knotpy.classes.views.ArcView.values"]], "endpointview (class in knotpy.classes.views)": [[93, "knotpy.classes.views.EndpointView"]], "__init__() (endpointview method)": [[93, "knotpy.classes.views.EndpointView.__init__"]], "get() (endpointview method)": [[93, "knotpy.classes.views.EndpointView.get"]], "isdisjoint() (endpointview method)": [[93, "knotpy.classes.views.EndpointView.isdisjoint"]], "items() (endpointview method)": [[93, "knotpy.classes.views.EndpointView.items"]], "keys() (endpointview method)": [[93, "knotpy.classes.views.EndpointView.keys"]], "values() (endpointview method)": [[93, "knotpy.classes.views.EndpointView.values"]], "faceview (class in knotpy.classes.views)": [[94, "knotpy.classes.views.FaceView"]], "__init__() (faceview method)": [[94, "knotpy.classes.views.FaceView.__init__"]], "get() (faceview method)": [[94, "knotpy.classes.views.FaceView.get"]], "isdisjoint() (faceview method)": [[94, "knotpy.classes.views.FaceView.isdisjoint"]], "items() (faceview method)": [[94, "knotpy.classes.views.FaceView.items"]], "keys() (faceview method)": [[94, "knotpy.classes.views.FaceView.keys"]], "values() (faceview method)": [[94, "knotpy.classes.views.FaceView.values"]], "filterednodeview (class in knotpy.classes.views)": [[95, "knotpy.classes.views.FilteredNodeView"]], "__init__() (filterednodeview method)": [[95, "knotpy.classes.views.FilteredNodeView.__init__"]], "get() (filterednodeview method)": [[95, "knotpy.classes.views.FilteredNodeView.get"]], "isdisjoint() (filterednodeview method)": [[95, "knotpy.classes.views.FilteredNodeView.isdisjoint"]], "items() (filterednodeview method)": [[95, "knotpy.classes.views.FilteredNodeView.items"]], "keys() (filterednodeview method)": [[95, "knotpy.classes.views.FilteredNodeView.keys"]], "values() (filterednodeview method)": [[95, "knotpy.classes.views.FilteredNodeView.values"]], "nodeview (class in knotpy.classes.views)": [[96, "knotpy.classes.views.NodeView"]], "__init__() (nodeview method)": [[96, "knotpy.classes.views.NodeView.__init__"]], "get() (nodeview method)": [[96, "knotpy.classes.views.NodeView.get"]], "isdisjoint() (nodeview method)": [[96, "knotpy.classes.views.NodeView.isdisjoint"]], "items() (nodeview method)": [[96, "knotpy.classes.views.NodeView.items"]], "keys() (nodeview method)": [[96, "knotpy.classes.views.NodeView.keys"]], "values() (nodeview method)": [[96, "knotpy.classes.views.NodeView.values"]], "knotpy.drawing": [[97, "module-knotpy.drawing"]], "knotpy.drawing.circlepack": [[98, "module-knotpy.drawing.circlepack"]], "circlepack() (in module knotpy.drawing.circlepack)": [[99, "knotpy.drawing.circlepack.CirclePack"]], "invertaround() (in module knotpy.drawing.circlepack)": [[100, "knotpy.drawing.circlepack.InvertAround"]], "invertpacking() (in module knotpy.drawing.circlepack)": [[101, "knotpy.drawing.circlepack.InvertPacking"]], "normalizepacking() (in module knotpy.drawing.circlepack)": [[102, "knotpy.drawing.circlepack.NormalizePacking"]], "acxyz() (in module knotpy.drawing.circlepack)": [[103, "knotpy.drawing.circlepack.acxyz"]], "flower() (in module knotpy.drawing.circlepack)": [[104, "knotpy.drawing.circlepack.flower"]], "place() (in module knotpy.drawing.circlepack)": [[105, "knotpy.drawing.circlepack.place"]], "testgrid() (in module knotpy.drawing.circlepack)": [[106, "knotpy.drawing.circlepack.testgrid"]], "knotpy.drawing.draw_matplotlib": [[107, "module-knotpy.drawing.draw_matplotlib"]], "arrow (class in knotpy.drawing.draw_matplotlib)": [[108, "knotpy.drawing.draw_matplotlib.Arrow"]], "__init__() (arrow method)": [[108, "knotpy.drawing.draw_matplotlib.Arrow.__init__"]], "average_color() (in module knotpy.drawing.draw_matplotlib)": [[109, "knotpy.drawing.draw_matplotlib.average_color"]], "draw() (in module knotpy.drawing.draw_matplotlib)": [[110, "knotpy.drawing.draw_matplotlib.draw"]], "draw_from_layout() (in module knotpy.drawing.draw_matplotlib)": [[111, "knotpy.drawing.draw_matplotlib.draw_from_layout"]], "export_pdf() (in module knotpy.drawing.draw_matplotlib)": [[112, "knotpy.drawing.draw_matplotlib.export_pdf"]], "to_color() (in module knotpy.drawing.draw_matplotlib)": [[113, "knotpy.drawing.draw_matplotlib.to_color"]], "knotpy.drawing.layout": [[114, "module-knotpy.drawing.layout"]], "bezier() (in module knotpy.drawing.layout)": [[115, "knotpy.drawing.layout.bezier"]], "circlepack_layout() (in module knotpy.drawing.layout)": [[116, "knotpy.drawing.layout.circlepack_layout"]], "preprocess_diagram() (in module knotpy.drawing.layout)": [[117, "knotpy.drawing.layout.preprocess_diagram"]], "knotpy.drawing.test": [[118, "module-knotpy.drawing.test"]], "plot_circles() (in module knotpy.drawing.test)": [[119, "knotpy.drawing.test.plot_circles"]], "knotpy.drawing.test2": [[120, "module-knotpy.drawing.test2"]], "knotpy.generate": [[121, "module-knotpy.generate"]], "knotpy.generate.conversions": [[122, "module-knotpy.generate.conversions"]], "orientations() (in module knotpy.generate.conversions)": [[123, "knotpy.generate.conversions.orientations"]], "knotpy.generate.example": [[124, "module-knotpy.generate.example"]], "example_spatial_graph() (in module knotpy.generate.example)": [[125, "knotpy.generate.example.example_spatial_graph"]], "handcuff_theta() (in module knotpy.generate.example)": [[126, "knotpy.generate.example.handcuff_theta"]], "oriented_trefoil() (in module knotpy.generate.example)": [[127, "knotpy.generate.example.oriented_trefoil"]], "trefoil_knot() (in module knotpy.generate.example)": [[128, "knotpy.generate.example.trefoil_knot"]], "trefoil_theta() (in module knotpy.generate.example)": [[129, "knotpy.generate.example.trefoil_theta"]], "knotpy.generate.generate_planar_graphs": [[130, "module-knotpy.generate.generate_planar_graphs"]], "generate_planar_graphs() (in module knotpy.generate.generate_planar_graphs)": [[131, "knotpy.generate.generate_planar_graphs.generate_planar_graphs"]], "sort_graphs() (in module knotpy.generate.generate_planar_graphs)": [[132, "knotpy.generate.generate_planar_graphs.sort_graphs"]], "knotpy.generate.simple": [[133, "module-knotpy.generate.simple"]], "empty_knot() (in module knotpy.generate.simple)": [[134, "knotpy.generate.simple.empty_knot"]], "parallel_edge() (in module knotpy.generate.simple)": [[135, "knotpy.generate.simple.parallel_edge"]], "knotpy.generate.simple_tangles": [[136, "module-knotpy.generate.simple_tangles"]], "horizontal_tangle() (in module knotpy.generate.simple_tangles)": [[137, "knotpy.generate.simple_tangles.horizontal_tangle"]], "integer_tangle() (in module knotpy.generate.simple_tangles)": [[138, "knotpy.generate.simple_tangles.integer_tangle"]], "vertical_tangle() (in module knotpy.generate.simple_tangles)": [[139, "knotpy.generate.simple_tangles.vertical_tangle"]], "knotpy.invariants": [[140, "module-knotpy.invariants"]], "knotpy.invariants.bracket": [[141, "module-knotpy.invariants.bracket"]], "bracket_polynomial() (in module knotpy.invariants.bracket)": [[142, "knotpy.invariants.bracket.bracket_polynomial"]], "knotpy.invariants.module": [[143, "module-knotpy.invariants.module"]], "module (class in knotpy.invariants.module)": [[144, "knotpy.invariants.module.Module"]], "__init__() (module method)": [[144, "knotpy.invariants.module.Module.__init__"]], "knotpy.invariants.yamada": [[145, "module-knotpy.invariants.yamada"]], "yamada() (in module knotpy.invariants.yamada)": [[146, "knotpy.invariants.yamada.yamada"]], "knotpy.manipulation": [[147, "module-knotpy.manipulation"]], "knotpy.manipulation.elementary": [[148, "module-knotpy.manipulation.elementary"]], "copy_and_move_arc() (in module knotpy.manipulation.elementary)": [[149, "knotpy.manipulation.elementary.copy_and_move_arc"]], "knotpy.manipulation.phantom": [[150, "module-knotpy.manipulation.phantom"]], "insert_phantom_node() (in module knotpy.manipulation.phantom)": [[151, "knotpy.manipulation.phantom.insert_phantom_node"]], "insert_phantom_nodes_on_internal_arcs() (in module knotpy.manipulation.phantom)": [[152, "knotpy.manipulation.phantom.insert_phantom_nodes_on_internal_arcs"]], "is_node_phantom() (in module knotpy.manipulation.phantom)": [[153, "knotpy.manipulation.phantom.is_node_phantom"]], "knotpy.manipulation.reidemeister": [[154, "module-knotpy.manipulation.reidemeister"]], "add_kink() (in module knotpy.manipulation.reidemeister)": [[155, "knotpy.manipulation.reidemeister.add_kink"]], "reidemeister_3() (in module knotpy.manipulation.reidemeister)": [[156, "knotpy.manipulation.reidemeister.reidemeister_3"]], "remove_kink() (in module knotpy.manipulation.reidemeister)": [[157, "knotpy.manipulation.reidemeister.remove_kink"]], "remove_poke() (in module knotpy.manipulation.reidemeister)": [[158, "knotpy.manipulation.reidemeister.remove_poke"]], "knotpy.manipulation.simplification": [[159, "module-knotpy.manipulation.simplification"]], "simplify() (in module knotpy.manipulation.simplification)": [[160, "knotpy.manipulation.simplification.simplify"]], "knotpy.notation": [[161, "module-knotpy.notation"]], "knotpy.notation.dispatcher": [[162, "module-knotpy.notation.dispatcher"]], "from_notation_dispatcher() (in module knotpy.notation.dispatcher)": [[163, "knotpy.notation.dispatcher.from_notation_dispatcher"]], "to_notation_dispatcher() (in module knotpy.notation.dispatcher)": [[164, "knotpy.notation.dispatcher.to_notation_dispatcher"]], "knotpy.notation.em": [[165, "module-knotpy.notation.em"]], "from_condensed_em_notation() (in module knotpy.notation.em)": [[166, "knotpy.notation.em.from_condensed_em_notation"]], "from_em_notation() (in module knotpy.notation.em)": [[167, "knotpy.notation.em.from_em_notation"]], "to_condensed_em_notation() (in module knotpy.notation.em)": [[168, "knotpy.notation.em.to_condensed_em_notation"]], "to_em_notation() (in module knotpy.notation.em)": [[169, "knotpy.notation.em.to_em_notation"]], "knotpy.notation.native": [[170, "module-knotpy.notation.native"]], "from_knotpy_notation() (in module knotpy.notation.native)": [[171, "knotpy.notation.native.from_knotpy_notation"]], "to_knotpy_notation() (in module knotpy.notation.native)": [[172, "knotpy.notation.native.to_knotpy_notation"]], "knotpy.notation.pd": [[173, "module-knotpy.notation.pd"]], "from_pd_notation() (in module knotpy.notation.pd)": [[174, "knotpy.notation.pd.from_pd_notation"]], "to_pd_notation() (in module knotpy.notation.pd)": [[175, "knotpy.notation.pd.to_pd_notation"]], "knotpy.notation.plantri": [[176, "module-knotpy.notation.plantri"]], "from_plantri_notation() (in module knotpy.notation.plantri)": [[177, "knotpy.notation.plantri.from_plantri_notation"]], "to_plantri_notation() (in module knotpy.notation.plantri)": [[178, "knotpy.notation.plantri.to_plantri_notation"]], "knotpy.notation.tests": [[179, "module-knotpy.notation.tests"]], "knotpy.notation.tests.test_notation": [[180, "module-knotpy.notation.tests.test_notation"]], "knotpy.readwrite": [[181, "module-knotpy.readwrite"]], "knotpy.readwrite.cleanopen": [[182, "module-knotpy.readwrite.cleanopen"]], "prepend_to_extension() (in module knotpy.readwrite.cleanopen)": [[183, "knotpy.readwrite.cleanopen.prepend_to_extension"]], "knotpy.readwrite.text": [[184, "module-knotpy.readwrite.text"]], "loadtxt_iterator() (in module knotpy.readwrite.text)": [[185, "knotpy.readwrite.text.loadtxt_iterator"]], "loadtxt_multiple() (in module knotpy.readwrite.text)": [[186, "knotpy.readwrite.text.loadtxt_multiple"]], "save_txt() (in module knotpy.readwrite.text)": [[187, "knotpy.readwrite.text.save_txt"]], "knotpy.utils": [[188, "module-knotpy.utils"]], "knotpy.utils.combinatorics": [[189, "module-knotpy.utils.combinatorics"]], "combinations_with_limited_repetitions() (in module knotpy.utils.combinatorics)": [[190, "knotpy.utils.combinatorics.combinations_with_limited_repetitions"]], "iterable_depth() (in module knotpy.utils.combinatorics)": [[191, "knotpy.utils.combinatorics.iterable_depth"]], "lexicographical_minimal_cyclic_rotation_shift() (in module knotpy.utils.combinatorics)": [[192, "knotpy.utils.combinatorics.lexicographical_minimal_cyclic_rotation_shift"]], "parted_permutations() (in module knotpy.utils.combinatorics)": [[193, "knotpy.utils.combinatorics.parted_permutations"]], "union() (in module knotpy.utils.combinatorics)": [[194, "knotpy.utils.combinatorics.union"]], "knotpy.utils.decorators": [[195, "module-knotpy.utils.decorators"]], "multi_variable_invariant() (in module knotpy.utils.decorators)": [[196, "knotpy.utils.decorators.multi_variable_invariant"]], "total_ordering_py3() (in module knotpy.utils.decorators)": [[197, "knotpy.utils.decorators.total_ordering_py3"]], "knotpy.utils.dict_utils": [[198, "module-knotpy.utils.dict_utils"]], "compare_dicts() (in module knotpy.utils.dict_utils)": [[199, "knotpy.utils.dict_utils.compare_dicts"]], "__init__() (identitydict method)": [[200, "knotpy.utils.dict_utils.identitydict.__init__"]], "clear() (identitydict method)": [[200, "knotpy.utils.dict_utils.identitydict.clear"]], "copy() (identitydict method)": [[200, "knotpy.utils.dict_utils.identitydict.copy"]], "default_factory (identitydict attribute)": [[200, "knotpy.utils.dict_utils.identitydict.default_factory"]], "fromkeys() (identitydict method)": [[200, "knotpy.utils.dict_utils.identitydict.fromkeys"]], "get() (identitydict method)": [[200, "knotpy.utils.dict_utils.identitydict.get"]], "identitydict (class in knotpy.utils.dict_utils)": [[200, "knotpy.utils.dict_utils.identitydict"]], "items() (identitydict method)": [[200, "knotpy.utils.dict_utils.identitydict.items"]], "keys() (identitydict method)": [[200, "knotpy.utils.dict_utils.identitydict.keys"]], "pop() (identitydict method)": [[200, "knotpy.utils.dict_utils.identitydict.pop"]], "popitem() (identitydict method)": [[200, "knotpy.utils.dict_utils.identitydict.popitem"]], "setdefault() (identitydict method)": [[200, "knotpy.utils.dict_utils.identitydict.setdefault"]], "update() (identitydict method)": [[200, "knotpy.utils.dict_utils.identitydict.update"]], "values() (identitydict method)": [[200, "knotpy.utils.dict_utils.identitydict.values"]], "inverse_dict() (in module knotpy.utils.dict_utils)": [[201, "knotpy.utils.dict_utils.inverse_dict"]], "inverse_multi_dict() (in module knotpy.utils.dict_utils)": [[202, "knotpy.utils.dict_utils.inverse_multi_dict"]], "knotpy.utils.equivalence": [[203, "module-knotpy.utils.equivalence"]], "equivalencerelation (class in knotpy.utils.equivalence)": [[204, "knotpy.utils.equivalence.EquivalenceRelation"]], "__init__() (equivalencerelation method)": [[204, "knotpy.utils.equivalence.EquivalenceRelation.__init__"]], "clear() (equivalencerelation method)": [[204, "knotpy.utils.equivalence.EquivalenceRelation.clear"]], "copy() (equivalencerelation method)": [[204, "knotpy.utils.equivalence.EquivalenceRelation.copy"]], "fromkeys() (equivalencerelation method)": [[204, "knotpy.utils.equivalence.EquivalenceRelation.fromkeys"]], "get() (equivalencerelation method)": [[204, "knotpy.utils.equivalence.EquivalenceRelation.get"]], "items() (equivalencerelation method)": [[204, "knotpy.utils.equivalence.EquivalenceRelation.items"]], "keys() (equivalencerelation method)": [[204, "knotpy.utils.equivalence.EquivalenceRelation.keys"]], "pop() (equivalencerelation method)": [[204, "knotpy.utils.equivalence.EquivalenceRelation.pop"]], "popitem() (equivalencerelation method)": [[204, "knotpy.utils.equivalence.EquivalenceRelation.popitem"]], "setdefault() (equivalencerelation method)": [[204, "knotpy.utils.equivalence.EquivalenceRelation.setdefault"]], "update() (equivalencerelation method)": [[204, "knotpy.utils.equivalence.EquivalenceRelation.update"]], "values() (equivalencerelation method)": [[204, "knotpy.utils.equivalence.EquivalenceRelation.values"]], "knotpy.utils.exception": [[205, "module-knotpy.utils.exception"]], "knotpyexception": [[206, "knotpy.utils.exception.KnotPyException"]], "knotpy.utils.geometry": [[207, "module-knotpy.utils.geometry"]], "boundingbox (class in knotpy.utils.geometry)": [[208, "knotpy.utils.geometry.BoundingBox"]], "__init__() (boundingbox method)": [[208, "knotpy.utils.geometry.BoundingBox.__init__"]], "circle (class in knotpy.utils.geometry)": [[209, "knotpy.utils.geometry.Circle"]], "__init__() (circle method)": [[209, "knotpy.utils.geometry.Circle.__init__"]], "circulararc (class in knotpy.utils.geometry)": [[210, "knotpy.utils.geometry.CircularArc"]], "__init__() (circulararc method)": [[210, "knotpy.utils.geometry.CircularArc.__init__"]], "line (class in knotpy.utils.geometry)": [[211, "knotpy.utils.geometry.Line"]], "__init__() (line method)": [[211, "knotpy.utils.geometry.Line.__init__"]], "parameter_from_point() (line method)": [[211, "knotpy.utils.geometry.Line.parameter_from_point"]], "segment (class in knotpy.utils.geometry)": [[212, "knotpy.utils.geometry.Segment"]], "__init__() (segment method)": [[212, "knotpy.utils.geometry.Segment.__init__"]], "parameter_from_point() (segment method)": [[212, "knotpy.utils.geometry.Segment.parameter_from_point"]], "antipode() (in module knotpy.utils.geometry)": [[213, "knotpy.utils.geometry.antipode"]], "bisect() (in module knotpy.utils.geometry)": [[214, "knotpy.utils.geometry.bisect"]], "bisector() (in module knotpy.utils.geometry)": [[215, "knotpy.utils.geometry.bisector"]], "bounding_box() (in module knotpy.utils.geometry)": [[216, "knotpy.utils.geometry.bounding_box"]], "circle_through_points() (in module knotpy.utils.geometry)": [[217, "knotpy.utils.geometry.circle_through_points"]], "inverse_point_through_circle() (in module knotpy.utils.geometry)": [[218, "knotpy.utils.geometry.inverse_point_through_circle"]], "is_angle_between() (in module knotpy.utils.geometry)": [[219, "knotpy.utils.geometry.is_angle_between"]], "middle() (in module knotpy.utils.geometry)": [[220, "knotpy.utils.geometry.middle"]], "perpendicular_arc() (in module knotpy.utils.geometry)": [[221, "knotpy.utils.geometry.perpendicular_arc"]], "perpendicular_arc_through_point() (in module knotpy.utils.geometry)": [[222, "knotpy.utils.geometry.perpendicular_arc_through_point"]], "perpendicular_line() (in module knotpy.utils.geometry)": [[223, "knotpy.utils.geometry.perpendicular_line"]], "split() (in module knotpy.utils.geometry)": [[224, "knotpy.utils.geometry.split"]], "tangent_line() (in module knotpy.utils.geometry)": [[225, "knotpy.utils.geometry.tangent_line"]], "knotpy.utils.string_utils": [[226, "module-knotpy.utils.string_utils"]], "multi_replace() (in module knotpy.utils.string_utils)": [[227, "knotpy.utils.string_utils.multi_replace"]], "nested_split() (in module knotpy.utils.string_utils)": [[228, "knotpy.utils.string_utils.nested_split"]], "string_to_nested_tuple_with_prefixes() (in module knotpy.utils.string_utils)": [[229, "knotpy.utils.string_utils.string_to_nested_tuple_with_prefixes"]], "knotpy": [[230, "module-knotpy"]]}})