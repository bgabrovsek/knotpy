Search.setIndex({"docnames": ["examples/index", "index", "install", "reference/generated/knotpy.algorithms", "reference/generated/knotpy.algorithms.canonical", "reference/generated/knotpy.algorithms.components", "reference/generated/knotpy.algorithms.components.add_unknot_in_place", "reference/generated/knotpy.algorithms.components.cut_sets", "reference/generated/knotpy.algorithms.components.disjoint_components", "reference/generated/knotpy.algorithms.components.disjoint_components_nodes", "reference/generated/knotpy.algorithms.components.disjoint_sum", "reference/generated/knotpy.algorithms.components.is_connected_sum", "reference/generated/knotpy.algorithms.components.is_connected_sum_third_order", "reference/generated/knotpy.algorithms.components.link_components_endpoints", "reference/generated/knotpy.algorithms.components.number_of_disjoint_components", "reference/generated/knotpy.algorithms.components.number_of_link_components", "reference/generated/knotpy.algorithms.faces", "reference/generated/knotpy.algorithms.faces.check_faces_sanity", "reference/generated/knotpy.algorithms.faces.choose_kink", "reference/generated/knotpy.algorithms.faces.choose_poke", "reference/generated/knotpy.algorithms.faces.pokes", "reference/generated/knotpy.algorithms.faces.triangles_nonalternating", "reference/generated/knotpy.algorithms.node_algorithms", "reference/generated/knotpy.algorithms.node_algorithms.add_node_to", "reference/generated/knotpy.algorithms.node_algorithms.degree_sequence", "reference/generated/knotpy.algorithms.node_algorithms.name_for_new_node", "reference/generated/knotpy.algorithms.node_algorithms.name_for_next_node_generator", "reference/generated/knotpy.algorithms.node_algorithms.permute_node", "reference/generated/knotpy.algorithms.node_algorithms.relabel_nodes", "reference/generated/knotpy.algorithms.orientation", "reference/generated/knotpy.algorithms.orientation.all_orientations", "reference/generated/knotpy.algorithms.skein", "reference/generated/knotpy.algorithms.skein.smoothing_type_A", "reference/generated/knotpy.algorithms.skein.smoothing_type_B", "reference/generated/knotpy.algorithms.structure", "reference/generated/knotpy.algorithms.structure.articulation_nodes", "reference/generated/knotpy.algorithms.structure.bridges", "reference/generated/knotpy.algorithms.structure.cut_edges", "reference/generated/knotpy.algorithms.structure.cut_vertices", "reference/generated/knotpy.algorithms.structure.edges", "reference/generated/knotpy.algorithms.structure.kink_region_iterator", "reference/generated/knotpy.algorithms.structure.kinks", "reference/generated/knotpy.algorithms.structure.loops", "reference/generated/knotpy.algorithms.structure.number_of_edges", "reference/generated/knotpy.algorithms.structure.parallel_arcs", "reference/generated/knotpy.algorithms.structure.path_from_endpoint", "reference/generated/knotpy.algorithms.symmetry", "reference/generated/knotpy.algorithms.symmetry.mirror", "reference/generated/knotpy.algorithms.tangle_algorithms", "reference/generated/knotpy.algorithms.tangle_algorithms.insert_tangle", "reference/generated/knotpy.algorithms.tangle_algorithms.insert_tangles_from", "reference/generated/knotpy.algorithms.tests", "reference/generated/knotpy.algorithms.tests.test_components", "reference/generated/knotpy.algorithms.tests.test_components.TestComponents", "reference/generated/knotpy.algorithms.tests.test_tangle", "reference/generated/knotpy.algorithms.tests.test_tangle.TestTangles", "reference/generated/knotpy.classes", "reference/generated/knotpy.classes.bondedknot", "reference/generated/knotpy.classes.bondedknot.BondedKnot", "reference/generated/knotpy.classes.endpoint", "reference/generated/knotpy.classes.endpoint.Endpoint", "reference/generated/knotpy.classes.endpoint.IngoingEndpoint", "reference/generated/knotpy.classes.endpoint.OutgoingEndpoint", "reference/generated/knotpy.classes.knot", "reference/generated/knotpy.classes.knot.Knot", "reference/generated/knotpy.classes.knot.OrientedKnot", "reference/generated/knotpy.classes.knotoid", "reference/generated/knotpy.classes.knotoid.Knotoid", "reference/generated/knotpy.classes.node", "reference/generated/knotpy.classes.node.Node", "reference/generated/knotpy.classes.orientedknot", "reference/generated/knotpy.classes.planardiagram", "reference/generated/knotpy.classes.planardiagram.PlanarDiagram", "reference/generated/knotpy.classes.planargraph", "reference/generated/knotpy.classes.planargraph.OrientedPlanarGraph", "reference/generated/knotpy.classes.planargraph.PlanarGraph", "reference/generated/knotpy.classes.spatialgraph", "reference/generated/knotpy.classes.spatialgraph.OrientedSpatialGraph", "reference/generated/knotpy.classes.spatialgraph.SpatialGraph", "reference/generated/knotpy.classes.tangle", "reference/generated/knotpy.classes.tangle.Tangle", "reference/generated/knotpy.classes.tests", "reference/generated/knotpy.classes.tests.endpoint_tests", "reference/generated/knotpy.classes.views", "reference/generated/knotpy.classes.views.ArcView", "reference/generated/knotpy.classes.views.EndpointView", "reference/generated/knotpy.classes.views.FaceView", "reference/generated/knotpy.classes.views.FilteredNodeView", "reference/generated/knotpy.classes.views.NodeView", "reference/generated/knotpy.drawing", "reference/generated/knotpy.drawing.circlepack", "reference/generated/knotpy.drawing.circlepack.CirclePack", "reference/generated/knotpy.drawing.circlepack.InvertAround", "reference/generated/knotpy.drawing.circlepack.InvertPacking", "reference/generated/knotpy.drawing.circlepack.NormalizePacking", "reference/generated/knotpy.drawing.circlepack.acxyz", "reference/generated/knotpy.drawing.circlepack.flower", "reference/generated/knotpy.drawing.circlepack.place", "reference/generated/knotpy.drawing.circlepack.testgrid", "reference/generated/knotpy.drawing.draw_matplotlib", "reference/generated/knotpy.drawing.draw_matplotlib.Arrow", "reference/generated/knotpy.drawing.draw_matplotlib.average_color", "reference/generated/knotpy.drawing.draw_matplotlib.draw", "reference/generated/knotpy.drawing.draw_matplotlib.draw_from_layout", "reference/generated/knotpy.drawing.draw_matplotlib.export_pdf", "reference/generated/knotpy.drawing.draw_matplotlib.to_color", "reference/generated/knotpy.drawing.layout", "reference/generated/knotpy.drawing.layout.bezier", "reference/generated/knotpy.drawing.layout.circlepack_layout", "reference/generated/knotpy.drawing.layout.preprocess_diagram", "reference/generated/knotpy.drawing.test", "reference/generated/knotpy.drawing.test.plot_circles", "reference/generated/knotpy.drawing.test2", "reference/generated/knotpy.generate", "reference/generated/knotpy.generate.conversions", "reference/generated/knotpy.generate.conversions.orientations", "reference/generated/knotpy.generate.example", "reference/generated/knotpy.generate.example.example_spatial_graph", "reference/generated/knotpy.generate.example.handcuff_theta", "reference/generated/knotpy.generate.example.oriented_trefoil", "reference/generated/knotpy.generate.example.trefoil_knot", "reference/generated/knotpy.generate.example.trefoil_theta", "reference/generated/knotpy.generate.generate_planar_graphs", "reference/generated/knotpy.generate.generate_planar_graphs.generate_planar_graphs", "reference/generated/knotpy.generate.generate_planar_graphs.sort_graphs", "reference/generated/knotpy.generate.simple", "reference/generated/knotpy.generate.simple.empty_knot", "reference/generated/knotpy.generate.simple.parallel_edge", "reference/generated/knotpy.generate.simple_tangles", "reference/generated/knotpy.generate.simple_tangles.horizontal_tangle", "reference/generated/knotpy.generate.simple_tangles.integer_tangle", "reference/generated/knotpy.generate.simple_tangles.vertical_tangle", "reference/generated/knotpy.invariants", "reference/generated/knotpy.invariants.bracket", "reference/generated/knotpy.invariants.bracket.bracket_polynomial", "reference/generated/knotpy.invariants.module", "reference/generated/knotpy.invariants.module.Module", "reference/generated/knotpy.invariants.yamada", "reference/generated/knotpy.invariants.yamada.yamada", "reference/generated/knotpy.manipulation", "reference/generated/knotpy.manipulation.elementary", "reference/generated/knotpy.manipulation.elementary.copy_and_move_arc", "reference/generated/knotpy.manipulation.phantom", "reference/generated/knotpy.manipulation.phantom.insert_phantom_node", "reference/generated/knotpy.manipulation.phantom.insert_phantom_nodes_on_internal_arcs", "reference/generated/knotpy.manipulation.phantom.is_node_phantom", "reference/generated/knotpy.manipulation.reidemeister", "reference/generated/knotpy.manipulation.reidemeister.add_kink", "reference/generated/knotpy.manipulation.reidemeister.reidemeister_3", "reference/generated/knotpy.manipulation.reidemeister.remove_kink", "reference/generated/knotpy.manipulation.reidemeister.remove_poke", "reference/generated/knotpy.manipulation.simplification", "reference/generated/knotpy.manipulation.simplification.simplify", "reference/generated/knotpy.notation", "reference/generated/knotpy.notation.dispatcher", "reference/generated/knotpy.notation.dispatcher.from_notation_dispatcher", "reference/generated/knotpy.notation.dispatcher.to_notation_dispatcher", "reference/generated/knotpy.notation.em", "reference/generated/knotpy.notation.em.from_condensed_em_notation", "reference/generated/knotpy.notation.em.from_em_notation", "reference/generated/knotpy.notation.em.to_condensed_em_notation", "reference/generated/knotpy.notation.em.to_em_notation", "reference/generated/knotpy.notation.native", "reference/generated/knotpy.notation.native.from_knotpy_notation", "reference/generated/knotpy.notation.native.to_knotpy_notation", "reference/generated/knotpy.notation.pd", "reference/generated/knotpy.notation.pd.from_pd_notation", "reference/generated/knotpy.notation.pd.to_pd_notation", "reference/generated/knotpy.notation.plantri", "reference/generated/knotpy.notation.plantri.from_plantri_notation", "reference/generated/knotpy.notation.plantri.to_plantri_notation", "reference/generated/knotpy.notation.tests", "reference/generated/knotpy.notation.tests.test_notation", "reference/generated/knotpy.readwrite", "reference/generated/knotpy.readwrite.cleanopen", "reference/generated/knotpy.readwrite.cleanopen.prepend_to_extension", "reference/generated/knotpy.readwrite.text", "reference/generated/knotpy.readwrite.text.loadtxt_iterator", "reference/generated/knotpy.readwrite.text.loadtxt_multiple", "reference/generated/knotpy.readwrite.text.save_txt", "reference/generated/knotpy.utils", "reference/generated/knotpy.utils.combinatorics", "reference/generated/knotpy.utils.combinatorics.combinations_with_limited_repetitions", "reference/generated/knotpy.utils.combinatorics.iterable_depth", "reference/generated/knotpy.utils.combinatorics.lexicographical_minimal_cyclic_rotation_shift", "reference/generated/knotpy.utils.combinatorics.parted_permutations", "reference/generated/knotpy.utils.combinatorics.union", "reference/generated/knotpy.utils.decorators", "reference/generated/knotpy.utils.decorators.multi_variable_invariant", "reference/generated/knotpy.utils.decorators.total_ordering_py3", "reference/generated/knotpy.utils.dict_utils", "reference/generated/knotpy.utils.dict_utils.compare_dicts", "reference/generated/knotpy.utils.dict_utils.identitydict", "reference/generated/knotpy.utils.dict_utils.inverse_dict", "reference/generated/knotpy.utils.dict_utils.inverse_multi_dict", "reference/generated/knotpy.utils.equivalence", "reference/generated/knotpy.utils.equivalence.EquivalenceRelation", "reference/generated/knotpy.utils.exception", "reference/generated/knotpy.utils.exception.KnotPyException", "reference/generated/knotpy.utils.geometry", "reference/generated/knotpy.utils.geometry.BoundingBox", "reference/generated/knotpy.utils.geometry.Circle", "reference/generated/knotpy.utils.geometry.CircularArc", "reference/generated/knotpy.utils.geometry.Line", "reference/generated/knotpy.utils.geometry.Segment", "reference/generated/knotpy.utils.geometry.antipode", "reference/generated/knotpy.utils.geometry.bisect", "reference/generated/knotpy.utils.geometry.bisector", "reference/generated/knotpy.utils.geometry.bounding_box", "reference/generated/knotpy.utils.geometry.circle_through_points", "reference/generated/knotpy.utils.geometry.inverse_point_through_circle", "reference/generated/knotpy.utils.geometry.is_angle_between", "reference/generated/knotpy.utils.geometry.middle", "reference/generated/knotpy.utils.geometry.perpendicular_arc", "reference/generated/knotpy.utils.geometry.perpendicular_arc_through_point", "reference/generated/knotpy.utils.geometry.perpendicular_line", "reference/generated/knotpy.utils.geometry.split", "reference/generated/knotpy.utils.geometry.tangent_line", "reference/generated/knotpy.utils.string_utils", "reference/generated/knotpy.utils.string_utils.multi_replace", "reference/generated/knotpy.utils.string_utils.nested_split", "reference/generated/knotpy.utils.string_utils.string_to_nested_tuple_with_prefixes", "reference/index", "tutorial"], "filenames": ["examples/index.rst", "index.rst", "install.rst", "reference/generated/knotpy.algorithms.rst", "reference/generated/knotpy.algorithms.canonical.rst", "reference/generated/knotpy.algorithms.components.rst", "reference/generated/knotpy.algorithms.components.add_unknot_in_place.rst", "reference/generated/knotpy.algorithms.components.cut_sets.rst", "reference/generated/knotpy.algorithms.components.disjoint_components.rst", "reference/generated/knotpy.algorithms.components.disjoint_components_nodes.rst", "reference/generated/knotpy.algorithms.components.disjoint_sum.rst", "reference/generated/knotpy.algorithms.components.is_connected_sum.rst", "reference/generated/knotpy.algorithms.components.is_connected_sum_third_order.rst", "reference/generated/knotpy.algorithms.components.link_components_endpoints.rst", "reference/generated/knotpy.algorithms.components.number_of_disjoint_components.rst", "reference/generated/knotpy.algorithms.components.number_of_link_components.rst", "reference/generated/knotpy.algorithms.faces.rst", "reference/generated/knotpy.algorithms.faces.check_faces_sanity.rst", "reference/generated/knotpy.algorithms.faces.choose_kink.rst", "reference/generated/knotpy.algorithms.faces.choose_poke.rst", "reference/generated/knotpy.algorithms.faces.pokes.rst", "reference/generated/knotpy.algorithms.faces.triangles_nonalternating.rst", "reference/generated/knotpy.algorithms.node_algorithms.rst", "reference/generated/knotpy.algorithms.node_algorithms.add_node_to.rst", "reference/generated/knotpy.algorithms.node_algorithms.degree_sequence.rst", "reference/generated/knotpy.algorithms.node_algorithms.name_for_new_node.rst", "reference/generated/knotpy.algorithms.node_algorithms.name_for_next_node_generator.rst", "reference/generated/knotpy.algorithms.node_algorithms.permute_node.rst", "reference/generated/knotpy.algorithms.node_algorithms.relabel_nodes.rst", "reference/generated/knotpy.algorithms.orientation.rst", "reference/generated/knotpy.algorithms.orientation.all_orientations.rst", "reference/generated/knotpy.algorithms.skein.rst", "reference/generated/knotpy.algorithms.skein.smoothing_type_A.rst", "reference/generated/knotpy.algorithms.skein.smoothing_type_B.rst", "reference/generated/knotpy.algorithms.structure.rst", "reference/generated/knotpy.algorithms.structure.articulation_nodes.rst", "reference/generated/knotpy.algorithms.structure.bridges.rst", "reference/generated/knotpy.algorithms.structure.cut_edges.rst", "reference/generated/knotpy.algorithms.structure.cut_vertices.rst", "reference/generated/knotpy.algorithms.structure.edges.rst", "reference/generated/knotpy.algorithms.structure.kink_region_iterator.rst", "reference/generated/knotpy.algorithms.structure.kinks.rst", "reference/generated/knotpy.algorithms.structure.loops.rst", "reference/generated/knotpy.algorithms.structure.number_of_edges.rst", "reference/generated/knotpy.algorithms.structure.parallel_arcs.rst", "reference/generated/knotpy.algorithms.structure.path_from_endpoint.rst", "reference/generated/knotpy.algorithms.symmetry.rst", "reference/generated/knotpy.algorithms.symmetry.mirror.rst", "reference/generated/knotpy.algorithms.tangle_algorithms.rst", "reference/generated/knotpy.algorithms.tangle_algorithms.insert_tangle.rst", "reference/generated/knotpy.algorithms.tangle_algorithms.insert_tangles_from.rst", "reference/generated/knotpy.algorithms.tests.rst", "reference/generated/knotpy.algorithms.tests.test_components.rst", "reference/generated/knotpy.algorithms.tests.test_components.TestComponents.rst", "reference/generated/knotpy.algorithms.tests.test_tangle.rst", "reference/generated/knotpy.algorithms.tests.test_tangle.TestTangles.rst", "reference/generated/knotpy.classes.rst", "reference/generated/knotpy.classes.bondedknot.rst", "reference/generated/knotpy.classes.bondedknot.BondedKnot.rst", "reference/generated/knotpy.classes.endpoint.rst", "reference/generated/knotpy.classes.endpoint.Endpoint.rst", "reference/generated/knotpy.classes.endpoint.IngoingEndpoint.rst", "reference/generated/knotpy.classes.endpoint.OutgoingEndpoint.rst", "reference/generated/knotpy.classes.knot.rst", "reference/generated/knotpy.classes.knot.Knot.rst", "reference/generated/knotpy.classes.knot.OrientedKnot.rst", "reference/generated/knotpy.classes.knotoid.rst", "reference/generated/knotpy.classes.knotoid.Knotoid.rst", "reference/generated/knotpy.classes.node.rst", "reference/generated/knotpy.classes.node.Node.rst", "reference/generated/knotpy.classes.orientedknot.rst", "reference/generated/knotpy.classes.planardiagram.rst", "reference/generated/knotpy.classes.planardiagram.PlanarDiagram.rst", "reference/generated/knotpy.classes.planargraph.rst", "reference/generated/knotpy.classes.planargraph.OrientedPlanarGraph.rst", "reference/generated/knotpy.classes.planargraph.PlanarGraph.rst", "reference/generated/knotpy.classes.spatialgraph.rst", "reference/generated/knotpy.classes.spatialgraph.OrientedSpatialGraph.rst", "reference/generated/knotpy.classes.spatialgraph.SpatialGraph.rst", "reference/generated/knotpy.classes.tangle.rst", "reference/generated/knotpy.classes.tangle.Tangle.rst", "reference/generated/knotpy.classes.tests.rst", "reference/generated/knotpy.classes.tests.endpoint_tests.rst", "reference/generated/knotpy.classes.views.rst", "reference/generated/knotpy.classes.views.ArcView.rst", "reference/generated/knotpy.classes.views.EndpointView.rst", "reference/generated/knotpy.classes.views.FaceView.rst", "reference/generated/knotpy.classes.views.FilteredNodeView.rst", "reference/generated/knotpy.classes.views.NodeView.rst", "reference/generated/knotpy.drawing.rst", "reference/generated/knotpy.drawing.circlepack.rst", "reference/generated/knotpy.drawing.circlepack.CirclePack.rst", "reference/generated/knotpy.drawing.circlepack.InvertAround.rst", "reference/generated/knotpy.drawing.circlepack.InvertPacking.rst", "reference/generated/knotpy.drawing.circlepack.NormalizePacking.rst", "reference/generated/knotpy.drawing.circlepack.acxyz.rst", "reference/generated/knotpy.drawing.circlepack.flower.rst", "reference/generated/knotpy.drawing.circlepack.place.rst", "reference/generated/knotpy.drawing.circlepack.testgrid.rst", "reference/generated/knotpy.drawing.draw_matplotlib.rst", "reference/generated/knotpy.drawing.draw_matplotlib.Arrow.rst", "reference/generated/knotpy.drawing.draw_matplotlib.average_color.rst", "reference/generated/knotpy.drawing.draw_matplotlib.draw.rst", "reference/generated/knotpy.drawing.draw_matplotlib.draw_from_layout.rst", "reference/generated/knotpy.drawing.draw_matplotlib.export_pdf.rst", "reference/generated/knotpy.drawing.draw_matplotlib.to_color.rst", "reference/generated/knotpy.drawing.layout.rst", "reference/generated/knotpy.drawing.layout.bezier.rst", "reference/generated/knotpy.drawing.layout.circlepack_layout.rst", "reference/generated/knotpy.drawing.layout.preprocess_diagram.rst", "reference/generated/knotpy.drawing.test.rst", "reference/generated/knotpy.drawing.test.plot_circles.rst", "reference/generated/knotpy.drawing.test2.rst", "reference/generated/knotpy.generate.rst", "reference/generated/knotpy.generate.conversions.rst", "reference/generated/knotpy.generate.conversions.orientations.rst", "reference/generated/knotpy.generate.example.rst", "reference/generated/knotpy.generate.example.example_spatial_graph.rst", "reference/generated/knotpy.generate.example.handcuff_theta.rst", "reference/generated/knotpy.generate.example.oriented_trefoil.rst", "reference/generated/knotpy.generate.example.trefoil_knot.rst", "reference/generated/knotpy.generate.example.trefoil_theta.rst", "reference/generated/knotpy.generate.generate_planar_graphs.rst", "reference/generated/knotpy.generate.generate_planar_graphs.generate_planar_graphs.rst", "reference/generated/knotpy.generate.generate_planar_graphs.sort_graphs.rst", "reference/generated/knotpy.generate.simple.rst", "reference/generated/knotpy.generate.simple.empty_knot.rst", "reference/generated/knotpy.generate.simple.parallel_edge.rst", "reference/generated/knotpy.generate.simple_tangles.rst", "reference/generated/knotpy.generate.simple_tangles.horizontal_tangle.rst", "reference/generated/knotpy.generate.simple_tangles.integer_tangle.rst", "reference/generated/knotpy.generate.simple_tangles.vertical_tangle.rst", "reference/generated/knotpy.invariants.rst", "reference/generated/knotpy.invariants.bracket.rst", "reference/generated/knotpy.invariants.bracket.bracket_polynomial.rst", "reference/generated/knotpy.invariants.module.rst", "reference/generated/knotpy.invariants.module.Module.rst", "reference/generated/knotpy.invariants.yamada.rst", "reference/generated/knotpy.invariants.yamada.yamada.rst", "reference/generated/knotpy.manipulation.rst", "reference/generated/knotpy.manipulation.elementary.rst", "reference/generated/knotpy.manipulation.elementary.copy_and_move_arc.rst", "reference/generated/knotpy.manipulation.phantom.rst", "reference/generated/knotpy.manipulation.phantom.insert_phantom_node.rst", "reference/generated/knotpy.manipulation.phantom.insert_phantom_nodes_on_internal_arcs.rst", "reference/generated/knotpy.manipulation.phantom.is_node_phantom.rst", "reference/generated/knotpy.manipulation.reidemeister.rst", "reference/generated/knotpy.manipulation.reidemeister.add_kink.rst", "reference/generated/knotpy.manipulation.reidemeister.reidemeister_3.rst", "reference/generated/knotpy.manipulation.reidemeister.remove_kink.rst", "reference/generated/knotpy.manipulation.reidemeister.remove_poke.rst", "reference/generated/knotpy.manipulation.simplification.rst", "reference/generated/knotpy.manipulation.simplification.simplify.rst", "reference/generated/knotpy.notation.rst", "reference/generated/knotpy.notation.dispatcher.rst", "reference/generated/knotpy.notation.dispatcher.from_notation_dispatcher.rst", "reference/generated/knotpy.notation.dispatcher.to_notation_dispatcher.rst", "reference/generated/knotpy.notation.em.rst", "reference/generated/knotpy.notation.em.from_condensed_em_notation.rst", "reference/generated/knotpy.notation.em.from_em_notation.rst", "reference/generated/knotpy.notation.em.to_condensed_em_notation.rst", "reference/generated/knotpy.notation.em.to_em_notation.rst", "reference/generated/knotpy.notation.native.rst", "reference/generated/knotpy.notation.native.from_knotpy_notation.rst", "reference/generated/knotpy.notation.native.to_knotpy_notation.rst", "reference/generated/knotpy.notation.pd.rst", "reference/generated/knotpy.notation.pd.from_pd_notation.rst", "reference/generated/knotpy.notation.pd.to_pd_notation.rst", "reference/generated/knotpy.notation.plantri.rst", "reference/generated/knotpy.notation.plantri.from_plantri_notation.rst", "reference/generated/knotpy.notation.plantri.to_plantri_notation.rst", "reference/generated/knotpy.notation.tests.rst", "reference/generated/knotpy.notation.tests.test_notation.rst", "reference/generated/knotpy.readwrite.rst", "reference/generated/knotpy.readwrite.cleanopen.rst", "reference/generated/knotpy.readwrite.cleanopen.prepend_to_extension.rst", "reference/generated/knotpy.readwrite.text.rst", "reference/generated/knotpy.readwrite.text.loadtxt_iterator.rst", "reference/generated/knotpy.readwrite.text.loadtxt_multiple.rst", "reference/generated/knotpy.readwrite.text.save_txt.rst", "reference/generated/knotpy.utils.rst", "reference/generated/knotpy.utils.combinatorics.rst", "reference/generated/knotpy.utils.combinatorics.combinations_with_limited_repetitions.rst", "reference/generated/knotpy.utils.combinatorics.iterable_depth.rst", "reference/generated/knotpy.utils.combinatorics.lexicographical_minimal_cyclic_rotation_shift.rst", "reference/generated/knotpy.utils.combinatorics.parted_permutations.rst", "reference/generated/knotpy.utils.combinatorics.union.rst", "reference/generated/knotpy.utils.decorators.rst", "reference/generated/knotpy.utils.decorators.multi_variable_invariant.rst", "reference/generated/knotpy.utils.decorators.total_ordering_py3.rst", "reference/generated/knotpy.utils.dict_utils.rst", "reference/generated/knotpy.utils.dict_utils.compare_dicts.rst", "reference/generated/knotpy.utils.dict_utils.identitydict.rst", "reference/generated/knotpy.utils.dict_utils.inverse_dict.rst", "reference/generated/knotpy.utils.dict_utils.inverse_multi_dict.rst", "reference/generated/knotpy.utils.equivalence.rst", "reference/generated/knotpy.utils.equivalence.EquivalenceRelation.rst", "reference/generated/knotpy.utils.exception.rst", "reference/generated/knotpy.utils.exception.KnotPyException.rst", "reference/generated/knotpy.utils.geometry.rst", "reference/generated/knotpy.utils.geometry.BoundingBox.rst", "reference/generated/knotpy.utils.geometry.Circle.rst", "reference/generated/knotpy.utils.geometry.CircularArc.rst", "reference/generated/knotpy.utils.geometry.Line.rst", "reference/generated/knotpy.utils.geometry.Segment.rst", "reference/generated/knotpy.utils.geometry.antipode.rst", "reference/generated/knotpy.utils.geometry.bisect.rst", "reference/generated/knotpy.utils.geometry.bisector.rst", "reference/generated/knotpy.utils.geometry.bounding_box.rst", "reference/generated/knotpy.utils.geometry.circle_through_points.rst", "reference/generated/knotpy.utils.geometry.inverse_point_through_circle.rst", "reference/generated/knotpy.utils.geometry.is_angle_between.rst", "reference/generated/knotpy.utils.geometry.middle.rst", "reference/generated/knotpy.utils.geometry.perpendicular_arc.rst", "reference/generated/knotpy.utils.geometry.perpendicular_arc_through_point.rst", "reference/generated/knotpy.utils.geometry.perpendicular_line.rst", "reference/generated/knotpy.utils.geometry.split.rst", "reference/generated/knotpy.utils.geometry.tangent_line.rst", "reference/generated/knotpy.utils.string_utils.rst", "reference/generated/knotpy.utils.string_utils.multi_replace.rst", "reference/generated/knotpy.utils.string_utils.nested_split.rst", "reference/generated/knotpy.utils.string_utils.string_to_nested_tuple_with_prefixes.rst", "reference/index.rst", "tutorial.rst"], "titles": ["First example", "KnotPy", "Install", "algorithms", "canonical", "components", "add_unknot_in_place", "cut_sets", "disjoint_components", "disjoint_components_nodes", "disjoint_sum", "is_connected_sum", "is_connected_sum_third_order", "link_components_endpoints", "number_of_disjoint_components", "number_of_link_components", "faces", "check_faces_sanity", "choose_kink", "choose_poke", "pokes", "triangles_nonalternating", "node_algorithms", "add_node_to", "degree_sequence", "name_for_new_node", "name_for_next_node_generator", "permute_node", "relabel_nodes", "orientation", "all_orientations", "skein", "smoothing_type_A", "smoothing_type_B", "structure", "articulation_nodes", "bridges", "cut_edges", "cut_vertices", "edges", "kink_region_iterator", "kinks", "loops", "number_of_edges", "parallel_arcs", "path_from_endpoint", "symmetry", "mirror", "tangle_algorithms", "insert_tangle", "insert_tangles_from", "tests", "test_components", "TestComponents", "test_tangle", "TestTangles", "classes", "bondedknot", "BondedKnot", "endpoint", "Endpoint", "IngoingEndpoint", "OutgoingEndpoint", "knot", "Knot", "OrientedKnot", "knotoid", "Knotoid", "node", "Node", "orientedknot", "planardiagram", "PlanarDiagram", "planargraph", "OrientedPlanarGraph", "PlanarGraph", "spatialgraph", "OrientedSpatialGraph", "SpatialGraph", "tangle", "Tangle", "tests", "endpoint_tests", "views", "ArcView", "EndpointView", "FaceView", "FilteredNodeView", "NodeView", "drawing", "circlepack", "CirclePack", "InvertAround", "InvertPacking", "NormalizePacking", "acxyz", "flower", "place", "testgrid", "draw_matplotlib", "Arrow", "average_color", "draw", "draw_from_layout", "export_pdf", "to_color", "layout", "bezier", "circlepack_layout", "preprocess_diagram", "test", "plot_circles", "test2", "generate", "conversions", "orientations", "example", "example_spatial_graph", "handcuff_theta", "oriented_trefoil", "trefoil_knot", "trefoil_theta", "generate_planar_graphs", "generate_planar_graphs", "sort_graphs", "simple", "empty_knot", "parallel_edge", "simple_tangles", "horizontal_tangle", "integer_tangle", "vertical_tangle", "invariants", "bracket", "bracket_polynomial", "module", "Module", "yamada", "yamada", "manipulation", "elementary", "copy_and_move_arc", "phantom", "insert_phantom_node", "insert_phantom_nodes_on_internal_arcs", "is_node_phantom", "reidemeister", "add_kink", "reidemeister_3", "remove_kink", "remove_poke", "simplification", "simplify", "notation", "dispatcher", "from_notation_dispatcher", "to_notation_dispatcher", "em", "from_condensed_em_notation", "from_em_notation", "to_condensed_em_notation", "to_em_notation", "native", "from_knotpy_notation", "to_knotpy_notation", "pd", "from_pd_notation", "to_pd_notation", "plantri", "from_plantri_notation", "to_plantri_notation", "tests", "test_notation", "readwrite", "cleanopen", "prepend_to_extension", "text", "loadtxt_iterator", "loadtxt_multiple", "save_txt", "utils", "combinatorics", "combinations_with_limited_repetitions", "iterable_depth", "lexicographical_minimal_cyclic_rotation_shift", "parted_permutations", "union", "decorators", "multi_variable_invariant", "total_ordering_py3", "dict_utils", "compare_dicts", "identitydict", "inverse_dict", "inverse_multi_dict", "equivalence", "EquivalenceRelation", "exception", "KnotPyException", "geometry", "BoundingBox", "Circle", "CircularArc", "Line", "Segment", "antipode", "bisect", "bisector", "bounding_box", "circle_through_points", "inverse_point_through_circle", "is_angle_between", "middle", "perpendicular_arc", "perpendicular_arc_through_point", "perpendicular_line", "split", "tangent_line", "string_utils", "multi_replace", "nested_split", "string_to_nested_tuple_with_prefixes", "Reference", "Tutorial"], "terms": {"i": [1, 2, 5, 7, 11, 12, 25, 26, 35, 36, 39, 40, 41, 42, 45, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 83, 91, 92, 94, 108, 123, 133, 137, 141, 149, 157, 160, 162, 165, 188, 191, 192, 196, 210, 211, 213, 214, 215, 222], "python": [1, 2, 164, 222], "packag": [1, 2, 222], "design": 1, "creat": [1, 141, 144, 166, 169, 189, 192, 196], "manipul": 1, "visual": 1, "studi": 1, "knot": [1, 5, 7, 10, 18, 19, 25, 26, 27, 32, 33, 49, 50, 58, 65, 67, 72, 74, 75, 77, 78, 80, 108, 123, 126, 149, 150, 157, 165, 177, 178, 179, 222], "link": [1, 5, 13, 15, 17, 133], "virtual": 1, "knotoid": [1, 80], "planar": [1, 6, 13, 15, 18, 19, 20, 21, 23, 36, 40, 41, 42, 44, 45, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 83, 99, 102, 104, 106, 115, 122, 123, 125, 126, 141, 149, 150, 158, 161, 164, 165, 166, 168, 169, 170], "graph": [1, 7, 25, 26, 35, 39, 50, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 83, 99, 106, 122, 123, 124, 126, 127, 157, 159, 169], "spatial": [1, 39], "websit": 1, "includ": 1, "document": [1, 2, 222], "http": [1, 2, 137, 165, 166, 168], "bgabrovsek": [1, 2], "github": [1, 2], "io": 1, "author": [1, 90, 104], "bo\u0161tjan": 1, "gabrov\u0161ek": 1, "bostjan": 1, "gabrovsek": 1, "f": [1, 192, 196], "uni": 1, "lj": 1, "si": 1, "publish": 1, "self": [1, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 189], "distribut": 1, "3": [1, 2, 5, 27, 49, 50, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 133, 137, 162, 165, 166, 210, 221], "claus": 1, "bsd": 1, "copyright": 1, "c": [1, 27, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 90, 141, 157, 162, 185, 209, 210, 217, 219, 220], "2023": 1, "2024": [1, 222], "develop": 1, "all": [1, 7, 25, 26, 39, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 92, 97, 115, 123, 162, 192, 196, 213], "right": 1, "reserv": 1, "redistribut": 1, "us": [1, 2, 50, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 92, 102, 104, 123, 142, 157, 169], "sourc": 1, "binari": 1, "form": [1, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 188], "without": [1, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 162], "modif": [1, 142], "ar": [1, 5, 10, 25, 26, 27, 39, 40, 42, 44, 49, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 83, 91, 92, 108, 123, 141, 142, 160, 191, 192, 193, 196, 213, 219], "permit": 1, "provid": [1, 72, 84, 85, 86, 87, 88, 123, 192, 196], "follow": [1, 2, 39, 72, 90, 133, 137, 141, 192, 196], "condit": [1, 213], "met": 1, "code": [1, 160, 161, 166, 168, 169, 170], "must": [1, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 141], "retain": 1, "abov": 1, "notic": 1, "thi": [1, 7, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 92, 122, 123, 157, 159, 192, 196, 210], "list": [1, 7, 10, 13, 27, 30, 35, 39, 40, 45, 49, 50, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 104, 107, 123, 124, 141, 144, 149, 150, 157, 159, 164, 165, 219, 220], "disclaim": 1, "reproduc": 1, "other": [1, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 84, 85, 86, 87, 88, 92, 137, 215, 219], "materi": 1, "neither": 1, "name": [1, 5, 25, 26, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 104, 162, 164, 166], "nor": 1, "its": [1, 27, 35, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 91], "contributor": 1, "mai": [1, 7], "endors": 1, "promot": 1, "product": 1, "deriv": 1, "from": [1, 2, 39, 45, 50, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 91, 99, 100, 123, 141, 144, 166, 169, 189, 191, 192, 196, 210, 213], "softwar": 1, "specif": 1, "prior": 1, "written": 1, "permiss": 1, "BY": 1, "THE": 1, "holder": 1, "AND": 1, "AS": 1, "ani": [1, 44, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "express": [1, 92], "OR": 1, "impli": 1, "warranti": 1, "BUT": 1, "NOT": 1, "limit": 1, "TO": 1, "OF": 1, "merchant": 1, "fit": 1, "FOR": 1, "A": [1, 7, 32, 33, 35, 36, 39, 41, 42, 45, 58, 64, 65, 67, 72, 75, 77, 78, 80, 90, 102, 108, 133, 134, 137, 138, 141, 157, 203, 204, 209], "particular": 1, "purpos": 1, "IN": 1, "NO": 1, "event": 1, "shall": 1, "owner": 1, "BE": 1, "liabl": 1, "direct": [1, 100], "indirect": 1, "incident": 1, "special": 1, "exemplari": 1, "consequenti": 1, "damag": [1, 141], "procur": 1, "substitut": 1, "good": 1, "servic": 1, "loss": 1, "data": [1, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 90, 91, 158, 159, 169, 222], "profit": 1, "busi": 1, "interrupt": 1, "howev": 1, "caus": [1, 7], "ON": 1, "theori": [1, 90, 92, 222], "liabil": 1, "whether": 1, "contract": 1, "strict": 1, "tort": 1, "neglig": 1, "otherwis": [1, 11, 12, 18, 19, 25, 26, 39, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 192, 196, 211, 217], "aris": 1, "wai": 1, "out": [1, 192, 196], "even": 1, "IF": 1, "advis": 1, "possibl": [1, 115], "SUCH": 1, "slovenian": 1, "research": 1, "innovatiom": 1, "agenc": 1, "grant": 1, "j1": 1, "4031": 1, "The": [2, 10, 20, 39, 40, 44, 72, 83, 91, 133, 137, 141, 157, 162, 165, 188, 210, 213], "knotpi": [2, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 162, 164, 197], "requir": 2, "12": [2, 165], "newer": 2, "your": 2, "system": 2, "befor": 2, "proceed": 2, "ensur": 2, "you": 2, "have": [2, 7, 39, 84, 85, 86, 87, 88, 94, 123], "most": [2, 157], "recent": 2, "pip": 2, "manag": 2, "If": [2, 7, 25, 26, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 92, 94, 188, 191, 192, 196], "pleas": 2, "consult": 2, "instruct": 2, "further": 2, "To": 2, "current": 2, "execut": 2, "command": 2, "first": [2, 18, 19, 39, 191, 192, 196, 211], "make": [2, 94], "sure": 2, "git": 2, "Then": 2, "run": 2, "clone": 2, "com": 2, "cd": 2, "e": [2, 5, 15, 17, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 123, 137, 142, 160, 177, 178, 183, 185, 192, 196, 220, 221], "dev": 2, "want": 2, "updat": [2, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 83, 192, 196], "pull": 2, "latest": 2, "chang": [2, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 141], "repositori": 2, "project": 2, "directori": 2, "pytest": 2, "learn": 2, "more": [2, 7, 160], "read": [2, 83, 176], "homepag": 2, "modul": [3, 51, 56, 81, 89, 113, 132, 139, 153, 171, 173, 180], "comput": [5, 90, 96, 123], "variou": 5, "decomposit": 5, "object": [5, 18, 19, 20, 21, 40, 53, 55, 58, 60, 64, 65, 67, 72, 74, 75, 77, 78, 80, 84, 85, 86, 87, 88, 99, 100, 136, 141, 142, 149, 150, 159, 166, 179, 183, 192, 196, 200, 201, 203, 206], "connect": [5, 11, 12, 41, 42, 49, 144], "g": [5, 11, 12, 15, 17, 24, 28, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 98, 123, 138, 142, 160, 161, 170, 177, 178, 183, 185, 200, 206, 212, 216, 221], "ha": [5, 7, 15, 27, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 137, 192, 196], "1": [5, 10, 15, 27, 39, 49, 50, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 94, 107, 133, 137, 157, 162, 165, 166, 183, 185, 191, 213, 221], "hopf": [5, 15], "2": [5, 15, 19, 27, 49, 50, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 107, 133, 137, 157, 162, 165, 166, 183, 185, 192, 196, 210, 211, 213, 221], "borromean": 5, "disjoint": [5, 6, 10, 36, 91, 108], "do": [5, 17, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80], "share": 5, "common": 5, "node": [5, 7, 10, 22, 23, 25, 26, 27, 28, 35, 39, 40, 41, 42, 44, 45, 49, 50, 58, 60, 61, 62, 64, 65, 67, 72, 74, 75, 77, 78, 80, 84, 85, 86, 87, 88, 102, 108, 122, 123, 126, 127, 141, 144, 145, 157, 160, 165, 166], "cross": [5, 32, 33, 39, 41, 42, 44, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 149, 150, 162, 165], "vertex": [5, 17, 35, 39, 44, 45, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 137, 143, 162, 164, 165], "sum": [5, 10, 11, 12, 96], "factor": 5, "composit": 5, "diagram": [5, 6, 11, 12, 13, 15, 18, 19, 20, 21, 23, 27, 36, 39, 40, 41, 42, 43, 44, 45, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 83, 102, 104, 108, 115, 125, 126, 141, 149, 150, 158, 161, 162, 164, 165, 166], "strand": [5, 39, 43, 45], "either": [5, 192, 196], "close": [5, 45], "path": [5, 45, 175, 177, 178, 179], "between": [5, 127, 211], "function": [5, 16, 22, 29, 31, 34, 46, 48, 90, 91, 99, 106, 110, 114, 116, 122, 125, 128, 133, 137, 140, 142, 146, 151, 154, 157, 162, 165, 168, 174, 176, 181, 187, 188, 190, 199, 210, 218], "k": [6, 7, 8, 9, 10, 13, 14, 15, 17, 18, 19, 20, 21, 23, 25, 26, 27, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 84, 85, 86, 87, 88, 90, 92, 94, 97, 98, 102, 103, 104, 108, 109, 115, 134, 137, 141, 143, 144, 145, 147, 148, 149, 150, 152, 157, 162, 164, 167, 179, 192, 196], "planardiagram": [6, 7, 11, 12, 13, 15, 17, 30, 39, 43, 45, 47, 64, 74, 75, 115, 141, 143, 144, 145, 149, 150, 152, 163, 167, 179, 222], "add": [6, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 104, 108, 109, 147], "unknot": [6, 133], "place": [6, 28, 213], "param": [6, 7, 10, 13, 15, 17, 20, 21, 27, 32, 33, 36, 39, 40, 41, 42, 43, 44, 45, 49, 50, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 102, 104, 107, 123, 124, 126, 141, 144, 149, 150, 169, 189, 191, 211, 219, 220], "input": [6, 15, 115, 219], "return": [6, 7, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 23, 25, 26, 27, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 49, 50, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 84, 85, 86, 87, 88, 91, 102, 103, 104, 107, 108, 115, 123, 124, 126, 127, 141, 144, 149, 150, 159, 160, 161, 164, 166, 167, 169, 170, 177, 178, 179, 183, 185, 186, 189, 191, 192, 196, 207, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220], "order": [7, 12, 17, 39, 124, 157, 189, 192, 196, 213], "int": [7, 43, 130, 160, 166], "max_cut_set": 7, "none": [7, 10, 18, 19, 23, 26, 27, 39, 40, 49, 50, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 84, 85, 86, 87, 88, 92, 94, 103, 104, 123, 126, 129, 130, 131, 136, 143, 144, 150, 158, 159, 166, 175, 177, 178, 182, 191, 192, 196, 200, 213, 220, 221], "find": [7, 91, 97], "cut": [7, 17, 35, 137], "set": [7, 13, 36, 41, 42, 44, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 84, 85, 86, 87, 88, 102, 144, 186, 191, 192, 194, 196], "edg": [7, 17, 45, 72, 108, 127, 137, 144], "when": 7, "remov": [7, 35, 36, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 137, 141, 149, 192, 196], "disconnect": [7, 35], "two": [7, 20, 36, 39, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 84, 85, 86, 87, 88, 91, 95, 109, 127, 144, 150, 206], "compon": [7, 10, 13, 15, 45], "In": [7, 72, 157, 192, 196], "our": 7, "case": [7, 10, 157, 192, 196], "we": [7, 27, 49, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 123], "assum": [7, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 157, 188, 193, 217], "than": [7, 92, 160], "one": [7, 94, 123, 149], "potenti": [7, 223], "problem": [7, 27, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "exampl": [7, 27, 39, 49, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 141, 157, 162, 164, 169, 170, 210, 219, 220], "three": [7, 133], "onli": [7, 39, 40, 72, 83, 92, 123], "algorithm": [7, 22, 29, 90, 123, 142], "doe": [7, 27, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 192, 196], "need": 7, "can": [7, 44, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 92, 123, 141, 177, 178], "easili": 7, "adopt": 7, "situat": 7, "number": [7, 15, 43, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 91, 107, 123, 124, 160, 210, 213], "arc": [7, 36, 41, 42, 44, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 102, 109, 124, 126, 141, 142, 143, 144, 149, 157, 212, 213, 214, 216], "up": [7, 44, 122, 123], "max_cut": 7, "consist": [7, 44, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "tupl": [7, 27, 44, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 115, 157, 159, 164, 188, 192, 196, 210, 219, 221], "return_relabel_dict": 10, "fals": [10, 11, 12, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 102, 103, 104, 107, 123, 170, 177, 178, 182, 211], "create_us": [10, 49, 50, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 126, 129, 130, 131, 158, 159, 166, 169], "0": [10, 27, 39, 49, 50, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 94, 137, 157, 162, 164, 165, 166, 185, 191, 210], "relabel": [10, 28, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "b": [10, 27, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 141, 157, 162, 164, 165, 166, 185, 203, 204, 209, 220], "mani": 10, "structur": [10, 49, 50, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 157, 164, 165], "type": [10, 23, 32, 33, 44, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 149, 150, 160], "bool": [11, 12, 211], "true": [11, 12, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 84, 85, 86, 87, 88, 102, 103, 104, 107, 123, 152, 169, 177, 178, 179, 211], "3rd": 12, "endpoint": [13, 20, 27, 39, 40, 45, 49, 58, 61, 62, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 141, 147, 150], "belong": [13, 147], "same": 13, "contain": [13, 20, 40, 83, 149, 166, 221], "unord": 13, "trefoil": 15, "check": [17, 27, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 211], "face": [17, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 102], "overlap": 17, "ccw": [17, 27, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 157, 169, 170, 177, 178, 179], "respect": [17, 210, 213], "todo": [17, 27, 44, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 108, 122, 169], "fix": 17, "so": [17, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 92, 203, 204], "work": [17, 27, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 142], "handcuff": 17, "like": [17, 39, 45, 50, 84, 85, 86, 87, 88, 192, 196], "kink": [18, 40, 42, 108, 109, 147], "region": [18, 19, 20, 21, 40, 72, 147, 148, 149, 150], "singleton": [18, 40, 149], "exist": [18, 19, 39], "bigon": [19, 20, 150], "poke": [19, 150], "length": 19, "an": [20, 21, 36, 39, 40, 41, 42, 45, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 84, 85, 86, 87, 88, 165, 169, 176, 192, 196], "iter": [20, 21, 40, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 83, 124, 183, 192, 196], "gener": [20, 21, 40, 122, 123, 125], "over": [20, 21, 39, 40], "enabl": [20, 21], "u": [20, 21, 92, 133, 162], "unpok": [20, 150], "reidemeist": [20, 21, 148, 149, 150], "ii": [20, 150], "move": [20, 21, 122, 148, 149, 150], "defin": [20, 102, 137, 150], "see": [20, 21, 40, 41, 42, 133, 157, 162, 165, 166, 168, 222], "also": [20, 21, 40, 41, 42, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 123, 177, 178, 214], "non": [21, 39, 137, 141, 148, 223], "altern": [21, 39, 148], "triangular": [21, 148], "perform": [21, 148, 149, 150, 210], "iii": [21, 148], "triangl": 21, "simpl": 22, "regard": [22, 27, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "node_for_ad": [23, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "node_typ": [23, 87, 166, 169], "degre": [23, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 107, 123, 124], "paramet": [23, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 100, 103, 115, 123, 159, 166, 167, 170, 177, 178, 179, 196, 203, 204, 210, 213], "instanc": [23, 39, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 126, 159], "ad": [23, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 188, 223], "x": [23, 95, 165, 166, 185, 210, 221], "v": [23, 162, 165, 166, 192, 196], "option": [23, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "default": [25, 26, 50, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 84, 85, 86, 87, 88, 157, 162, 188, 192, 196], "natur": [25, 26], "next": [25, 26], "avail": [25, 26], "letter": [25, 26, 157], "za": [25, 26], "y": [25, 26, 95, 185, 210], "integ": [25, 26, 223], "empti": [25, 26, 126, 192, 196], "count": 26, "p": [27, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 165, 210, 215, 217], "permut": [27, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 185], "For": [27, 49, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 141, 203, 204], "d": [27, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 84, 85, 86, 87, 88, 141, 157, 185, 192, 193, 194, 196, 220], "new": [27, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 141, 147, 192, 196], "which": [27, 49, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 213], "given": [27, 39, 40, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 91, 92, 94, 95, 96, 123, 157, 192, 196, 210, 213], "dict": [27, 50, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 83, 141, 161, 164, 191, 192, 196, 219], "attribut": [27, 39, 58, 60, 61, 62, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 141, 162, 166, 179, 192], "loop": [27, 40, 41, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 108, 109, 137], "probabl": [27, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "map": [28, 50, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 88, 91], "crossing_for_smooth": [32, 33], "smoothen": [32, 33], "l_0": [32, 133], "smooth": [32, 33], "l_infin": 33, "articul": 35, "vertic": [35, 69, 72, 75, 77, 78, 127, 142, 144], "onc": 36, "split": [36, 185, 206, 220], "part": [36, 45, 72, 185, 213], "repres": [36, 41, 72, 100, 141, 157, 165, 196, 210, 213], "endpoint_attribut": 39, "pair": [39, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 91, 141, 192, 196, 213], "twin": [39, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "third": [39, 211], "element": [39, 182, 221], "adjac": [39, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 157, 176], "start": [39, 45, 100, 123, 213, 214], "thei": [39, 141], "detect": 39, "valu": [39, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 84, 85, 86, 87, 88, 108, 123, 141, 157, 184, 185, 191, 192, 196], "jump_ov": 39, "orient": [39, 44, 157], "filter": 39, "color": [39, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 162, 164], "of_nod": 40, "attach": 40, "itself": [41, 42], "bridg": [41, 108, 109], "each": [44, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 91, 141, 157, 196], "parallel": 44, "incid": [44, 69, 141, 165], "consid": 44, "stop": 45, "continu": [45, 123], "tangl": [49, 50], "compass": [49, 50], "insert": [49, 50, 144, 192, 196], "strictur": 49, "4": [49, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 123, 165, 166, 210, 221], "valent": [49, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 137], "replac": [49, 58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 109, 137, 219], "dictionari": [49, 50, 58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 91, 108, 123, 141, 157, 159, 176, 188, 191, 192, 196], "specifi": [49, 92, 93, 192, 196], "ne": [49, 50], "nw": [49, 50], "sw": [49, 50], "se": [49, 50], "posit": [49, 58, 60, 61, 62, 64, 65, 67, 72, 74, 75, 77, 78, 80, 100, 102, 137, 157, 165], "etc": [49, 69, 72], "tangles_dict": 50, "class": [52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 99, 100, 135, 136, 157, 166, 169, 170, 185, 189, 190, 192, 195, 196, 198, 199, 200, 201, 202, 203, 204, 223], "base": [53, 55, 58, 60, 61, 62, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 84, 85, 86, 87, 88, 100, 136, 192, 196, 197, 198, 200, 201, 202, 203, 204], "__init__": [53, 55, 58, 60, 61, 62, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 84, 85, 86, 87, 88, 100, 136, 192, 196, 200, 201, 202, 203, 204], "method": [53, 55, 58, 60, 61, 62, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 84, 85, 86, 87, 88, 92, 100, 136, 141, 189, 192, 196, 200, 201, 202, 203, 204], "attr": [58, 60, 61, 62, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 166], "initi": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "incoming_diagram_data": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "implement": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 137], "frame": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 133, 149, 166], "add_bivalent_vertex": [58, 64, 65, 67, 77, 78, 80], "bivalent_vertex_for_ad": [58, 64, 65, 67, 77, 78, 80], "bival": [58, 64, 65, 67, 77, 78, 80, 142, 143, 144, 165], "hashabl": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "add_bivalent_vertic": [58, 64, 65, 67, 77, 78, 80], "bivalent_nodes_for_ad": [58, 64, 65, 67, 77, 78, 80], "bunch": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "add_cross": [58, 64, 65, 67, 77, 78, 80], "crossing_for_ad": [58, 64, 65, 67, 77, 78, 80], "add_crossings_from": [58, 64, 65, 67, 77, 78, 80], "crossings_for_ad": [58, 64, 65, 67, 77, 78, 80], "add_nod": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "add_nodes_from": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "nodes_for_ad": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "where": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 91, 108, 123, 133, 157, 210], "newli": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 144], "inherit": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "properti": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "hold": [58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80], "bivalent_vertic": [58, 64, 65, 67, 77, 78, 80], "clear": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 192, 196], "copi": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 141, 192, 196], "copy_us": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "shallow": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 192, 196], "blackboard": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "get_endpoint": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "get_endpoint_from_pair": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "endpoint_pair": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "jump_over_nod": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "identifi": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 91], "permute_nod": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "py3_cmp": [58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 189], "compare_attr": [58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80], "compar": [58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80, 191], "obsolet": [58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80], "__cmp__": [58, 64, 65, 67, 69, 72, 74, 75, 77, 78, 80], "relabel_nod": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "partial": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "remove_nod": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "node_for_remov": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "remove_incident_endpoint": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "care": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "break": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "rotate_node_ccw": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "ccw_shift": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "take": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "rotat": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "90": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "should": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 83, 91, 141, 157], "set_arc": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "arc_for_set": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "v_endpoint": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "u_endpoint": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "equal": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 206], "adj": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "vice": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "versa": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "set_arcs_from": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "arcs_for_ad": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "set_endpoint": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "endpoint_for_set": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "adjacent_endpoint": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "overwrit": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "ingoingendpoint": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "outgoingendpoint": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "instead": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 94], "addit": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80, 109, 137, 166], "opposit": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "both": [58, 64, 65, 67, 72, 74, 75, 77, 78, 80], "add_termin": [67, 80], "terminal_for_ad": [67, 80], "add_terminals_from": [67, 80], "terminals_for_ad": [67, 80], "termin": [67, 80], "incoming_node_data": 69, "abc": [69, 72, 185, 219], "abstract": [69, 72], "basic": [72, 157], "It": [72, 133, 162], "intend": 72, "parent": 72, "planargraph": [72, 78, 99, 159, 170, 176], "eman": 72, "node_posit": 72, "terminologi": 72, "sequenc": [72, 123, 124, 221], "add_vertex": [75, 77, 78], "vertex_for_ad": [75, 77, 78], "add_vertices_from": [75, 77, 78], "vertices_for_ad": [75, 77, 78], "spatialgraph": [77, 162, 164], "n": [80, 122, 130, 137, 182], "As": 83, "while": 83, "through": [83, 209, 213, 214, 215, 217], "nodeview": [84, 85, 86, 87], "get": [84, 85, 86, 87, 88, 92, 192, 196, 203, 204], "els": [84, 85, 86, 87, 88, 192, 196, 213], "isdisjoint": [84, 85, 86, 87, 88], "null": [84, 85, 86, 87, 88], "intersect": [84, 85, 86, 87, 88, 213], "item": [84, 85, 86, 87, 88, 105, 192, 196], "view": [84, 85, 86, 87, 88, 192, 196], "": [84, 85, 86, 87, 88, 104, 157, 192, 196, 207], "kei": [84, 85, 86, 87, 88, 91, 108, 123, 141, 185, 188, 191, 192, 193, 194, 196], "py": 90, "circl": [90, 91, 92, 94, 95, 96, 97, 102, 108, 202, 205, 209, 210, 213, 214, 217], "pack": [90, 91, 92, 93, 94, 98], "accord": 90, "koeb": 90, "thurston": 90, "andreev": 90, "numer": [90, 92, 199], "r": [90, 98, 135, 136, 137, 210, 213], "collin": 90, "stephenson": 90, "comp": 90, "geom": 90, "appl": 90, "2003": 90, "intern": [91, 96, 97], "extern": 91, "argument": [91, 92, 186, 188], "cycl": [91, 96], "surround": [91, 92, 97], "desir": 91, "radiu": [91, 92, 94, 95, 96, 201, 202, 210, 213, 217], "center": [91, 92, 93, 96, 97, 201, 202, 210, 212, 213, 217], "complex": [91, 100, 107, 210, 213, 215, 217], "smallcircl": 92, "invert": [92, 93], "search": 92, "invers": [92, 210], "maxim": [92, 123], "minimum": [92, 94], "quasiconvex": 92, "program": 92, "relat": [92, 137], "hyperbol": 92, "space": 92, "rather": 92, "appli": 92, "qcp": 92, "seem": 92, "simpler": 92, "hill": 92, "climb": 92, "approach": 92, "reli": 92, "tell": 92, "local": 92, "maxima": 92, "stuck": 92, "optim": 92, "look": 92, "target": 94, "chosen": 94, "z": [95, 98, 107, 213], "angl": [95, 96, 211, 213], "radii": [95, 97, 111], "around": [96, 98], "placement": 97, "recurs": [97, 191], "q": [98, 185], "build": 98, "grid": 98, "test": 98, "point": [98, 100, 123, 203, 204, 205, 209, 210, 214, 215, 216, 217], "size": 98, "draw": [99, 104, 106, 107], "pointy_end": 100, "graphic": 100, "pointi": 100, "end": [100, 213], "color1": 101, "color2": 101, "draw_circl": [102, 103, 104], "with_label": [102, 103, 104], "with_titl": [102, 103, 104], "matplotlib": [102, 104], "area": [102, 108], "label": 102, "titl": 102, "layout": [103, 108], "ax": 103, "filenam": 104, "save": [104, 123], "pdf": 104, "inform": [104, 162], "straight_lin": 107, "b\u00e9zier": 107, "curv": 107, "coordin": [107, 111], "support": [108, 165], "tripl": 109, "tabl": 122, "sandbox": 122, "maximal_number_of_nod": 123, "degree_sequ": 123, "maximal_degre": 123, "output_filenam": 123, "allow_parallel_arc": 123, "output_ignore_degree_sequences_filenam": 123, "start_with_planar_graph": 123, "notat": [123, 155, 156, 157, 162, 164, 165, 166, 168, 177, 178, 179], "em": [123, 158, 160, 161, 162, 177, 178], "run_in_parallel": 123, "grap": 123, "wish": 123, "max": 123, "dure": 123, "process": 123, "ones": 123, "match": 123, "step": 123, "some": [123, 125], "alreadi": 123, "been": 123, "sort": [124, 191], "turn": [124, 221], "zero": 126, "constructor": [126, 159], "multipl": 127, "polynomi": [133, 137], "aka": 133, "kauffman": 133, "invari": [133, 188], "unori": 133, "character": 133, "rule": 133, "l_x": 133, "l_inf": 133, "l": [133, 137, 215], "loui": 133, "h": 133, "state": 133, "model": 133, "jone": 133, "topologi": 133, "26": 133, "1987": 133, "395": 133, "407": 133, "variabl": [134, 138, 188], "expr": [134, 138], "m": 136, "simplification_funct": 136, "via": 137, "k0": 137, "\u03c3": 137, "twist": 137, "neg": [137, 165], "leaf": 137, "bouquet": 137, "en": 137, "wikipedia": 137, "org": [137, 165, 166], "wiki": [137, 165, 166], "mathematical_operators_and_symbols_in_unicod": 137, "arc_dict": 141, "old_endpoint_1": 141, "new_endpoint_1": 141, "old_endpoint_2": 141, "new_endpoint_2": 141, "a0i": 141, "b0": 141, "c1o": 141, "d2": 141, "made": 141, "d2o": 141, "b0i": 141, "stai": 141, "were": 141, "unless": 141, "overwritten": 141, "anoth": 141, "stabl": 141, "realiz": 141, "deal": 142, "simplifi": 142, "plot": 142, "node_nam": 143, "put": 143, "phantom": [143, 144], "exclude_arc": 144, "except": [144, 198], "exclud": [144, 191], "sign": [147, 165], "insid": 147, "unkink": 149, "adjust": 149, "fewer": [149, 150], "in_plac": 152, "str": [155, 156, 158, 160, 166, 167, 169, 220, 221], "modifi": 157, "ew": [157, 162], "millett": [157, 162], "sinc": 157, "similar": [157, 162], "nativ": [157, 164], "encod": [157, 164, 177, 178, 179], "condens": [157, 158, 160], "lower": 157, "b0c1": 157, "a0d0c0": 157, "b2a1": 157, "b1": 157, "mathemat": [157, 162], "heritag": [157, 162], "cf": [157, 162], "gauss": [157, 162], "225": [157, 162], "266": [157, 162], "world": [157, 162], "scientif": [157, 162], "1991": [157, 162], "separ": [158, 160, 169, 170, 177, 178], "convert": [158, 188], "string": [158, 159, 160, 166, 169, 219, 220, 221], "evalu": 159, "rais": [160, 192, 196], "valueerror": 160, "52": 160, "typeerror": 160, "mix": 160, "store": [162, 194], "x1": [162, 164], "red": [162, 164], "orang": [162, 164], "blue": 162, "text": [163, 166, 219, 220, 221], "whole": 164, "katla": [165, 166], "planar_diagram": [165, 166], "format": [165, 166, 176], "mathematica": [165, 166], "xp": 165, "9": [165, 221], "8": [165, 177, 178, 179, 221], "xn": 165, "10": [165, 221], "11": [165, 221, 222], "5": [165, 166, 210, 221], "6": [165, 166, 169, 221], "7": [165, 221], "13": [165, 210], "knotinfo": [165, 166], "topoli": 165, "23": 165, "14": [165, 210], "17": 165, "16": 165, "15": 165, "18": 165, "24": 165, "abbrevi": 165, "unsign": 165, "xm": 165, "pd": 166, "autodetect": 166, "math": 166, "indiana": 166, "edu": [166, 168], "descript": [166, 210], "pd_notat": 166, "html": 166, "assign": 166, "ascii": [168, 169], "user": 168, "cec": 168, "anu": 168, "au": 168, "bdm": 168, "guid": 168, "txt": [168, 177, 178], "plantri": [169, 170], "bcde": [169, 170], "aefc": [169, 170], "abfd": [169, 170], "acf": [169, 170], "adfb": [169, 170], "bedc": [169, 170], "resolv": 169, "ambigu": 169, "acci": 170, "decor": [175, 188, 189], "write": 176, "comment": [177, 178, 179], "prepended_node_count": [177, 178], "max_row": [177, 178], "utf": [177, 178, 179], "unix": [177, 178], "style": [177, 178], "pathnam": [177, 178], "pattern": [177, 178], "expans": [177, 178], "delimit": 179, "available_repetit": 182, "include_zero_multipl": 182, "o": 183, "depth": 183, "partit": [185, 196], "xy": 185, "yx": 185, "acb": 185, "cba": 185, "default_vari": 188, "multi": 188, "second": [188, 191], "sympi": 188, "symbol": 188, "therefor": 188, "def": 188, "invariant_func": 188, "obj": 188, "call": [188, 192], "keyword": 188, "kwarg": [188, 192], "cl": 189, "total": 189, "cmp": 189, "dict1": 191, "dict2": 191, "except_kei": 191, "again": 191, "comparison": 191, "defaultdict": 192, "arg": 192, "default_factori": 192, "factori": 192, "__missing__": 192, "fromkei": [192, 196], "pop": [192, 196], "correspond": [192, 196], "found": [192, 196], "keyerror": [192, 196], "popitem": [192, 196], "lifo": [192, 196], "last": [192, 196], "setdefault": [192, 196], "present": [192, 196], "lack": [192, 196], "exchang": [193, 194], "val": [193, 194], "duplic": 193, "equival": 196, "error": 197, "networkx": 198, "librari": 199, "theta1": [202, 211], "theta2": [202, 211], "parameter_from_point": [203, 204], "t": [203, 204], "line": [204, 207, 215, 217], "segment": [206, 207, 212, 216], "circulararc": 206, "halv": 206, "geometri": 210, "transform": 210, "cx": 210, "cy": 210, "calcul": 210, "determin": 210, "op": 210, "distanc": 210, "origin": 210, "4j": 210, "0j": 210, "5j": 210, "float": 211, "theta3": 211, "modulo": 211, "pi": 211, "radian": [211, 213], "geometr": 212, "circle1": 213, "circle2": 213, "perpendicular": [213, 214, 215, 217], "circular": 213, "thu": 213, "i0": 213, "z0": 213, "r0": 213, "i1": 213, "z1": 213, "r1": 213, "extra": 213, "main": 213, "1st": 213, "tangent": [213, 217], "2nd": 213, "lie": 213, "circle_point": 214, "goe": [214, 215], "li": [214, 216, 217], "substr": 219, "until": 219, "left": 219, "aaaabc": 219, "aa": 219, "bb": 219, "max_depth": 220, "default_prefix": 221, "date": 222, "apr": 222, "complet": 222, "lorem": 223, "ipsum": 223, "dolor": 223, "sit": 223, "amet": 223, "consectetur": 223, "adipisc": 223, "elit": 223, "pellentesqu": 223, "tempor": 223, "aliquet": 223, "conval": 223, "proin": 223, "fermentum": 223, "cursu": 223, "fusc": 223, "turpi": 223, "nibh": 223, "nulla": 223, "rhoncu": 223, "eu": 223, "sem": 223, "bibendum": 223, "vestibulum": 223, "nunc": 223, "rutrum": 223, "leo": 223, "ut": 223, "tristiqu": 223, "massa": 223, "accumsan": 223, "morbi": 223, "blandit": 223, "vita": 223, "puru": 223, "arcu": 223, "facilisi": 223, "orci": 223, "nisi": 223, "viverra": 223, "variu": 223, "aliquam": 223, "venenati": 223, "lectu": 223, "risu": 223, "sollicitudin": 223, "sodal": 223, "pulvinar": 223, "posuer": 223, "mauri": 223, "molli": 223, "odio": 223, "dui": 223, "sagitti": 223, "ultric": 223, "quam": 223, "vulput": 223, "dapibu": 223, "maecena": 223, "nec": 223, "tempu": 223, "nequ": 223, "id": 223, "loborti": 223, "tortor": 223, "ac": 223, "augu": 223, "vivamu": 223, "feli": 223, "placerat": 223, "ant": 223, "eget": 223, "molesti": 223, "libero": 223, "feugiat": 223, "suspendiss": 223, "magna": 223, "condimentum": 223, "urna": 223, "dictum": 223, "pretium": 223, "quisqu": 223, "justo": 223, "egesta": 223, "maximu": 223, "vehicula": 223, "interdum": 223, "praesent": 223, "qui": 223, "finibu": 223, "est": 223, "phasellu": 223, "mi": 223, "pharetra": 223, "erat": 223, "metu": 223, "eleifend": 223, "sapien": 223, "ligula": 223, "ex": 223, "nam": 223, "diam": 223, "porttitor": 223, "matti": 223, "iaculi": 223, "cra": 223, "et": 223, "lacinia": 223, "nisl": 223, "hendrerit": 223, "ero": 223, "sed": 223, "scelerisqu": 223, "volutpat": 223, "enim": 223, "tincidunt": 223, "donec": 223, "imperdiet": 223, "ornar": 223, "dignissim": 223, "ullamcorp": 223, "vel": 223, "suscipit": 223, "luctu": 223, "congu": 223, "tellu": 223, "euismod": 223, "aptent": 223, "taciti": 223, "sociosqu": 223, "litora": 223, "torquent": 223, "per": 223, "conubia": 223, "nostra": 223, "incepto": 223, "himenaeo": 223, "ultrici": 223, "commodo": 223, "auctor": 223, "etiam": 223, "malesuada": 223}, "objects": {"": [[222, 0, 0, "-", "knotpy"]], "knotpy": [[3, 0, 0, "-", "algorithms"], [56, 0, 0, "-", "classes"], [89, 0, 0, "-", "drawing"], [113, 0, 0, "-", "generate"], [132, 0, 0, "-", "invariants"], [139, 0, 0, "-", "manipulation"], [153, 0, 0, "-", "notation"], [173, 0, 0, "-", "readwrite"], [180, 0, 0, "-", "utils"]], "knotpy.algorithms": [[4, 0, 0, "-", "canonical"], [5, 0, 0, "-", "components"], [16, 0, 0, "-", "faces"], [22, 0, 0, "-", "node_algorithms"], [29, 0, 0, "-", "orientation"], [31, 0, 0, "-", "skein"], [34, 0, 0, "-", "structure"], [46, 0, 0, "-", "symmetry"], [48, 0, 0, "-", "tangle_algorithms"], [51, 0, 0, "-", "tests"]], "knotpy.algorithms.components": [[6, 1, 1, "", "add_unknot_in_place"], [7, 1, 1, "", "cut_sets"], [8, 1, 1, "", "disjoint_components"], [9, 1, 1, "", "disjoint_components_nodes"], [10, 1, 1, "", "disjoint_sum"], [11, 1, 1, "", "is_connected_sum"], [12, 1, 1, "", "is_connected_sum_third_order"], [13, 1, 1, "", "link_components_endpoints"], [14, 1, 1, "", "number_of_disjoint_components"], [15, 1, 1, "", "number_of_link_components"]], "knotpy.algorithms.faces": [[17, 1, 1, "", "check_faces_sanity"], [18, 1, 1, "", "choose_kink"], [19, 1, 1, "", "choose_poke"], [20, 1, 1, "", "pokes"], [21, 1, 1, "", "triangles_nonalternating"]], "knotpy.algorithms.node_algorithms": [[23, 1, 1, "", "add_node_to"], [24, 1, 1, "", "degree_sequence"], [25, 1, 1, "", "name_for_new_node"], [26, 1, 1, "", "name_for_next_node_generator"], [27, 1, 1, "", "permute_node"], [28, 1, 1, "", "relabel_nodes"]], "knotpy.algorithms.orientation": [[30, 1, 1, "", "all_orientations"]], "knotpy.algorithms.skein": [[32, 1, 1, "", "smoothing_type_A"], [33, 1, 1, "", "smoothing_type_B"]], "knotpy.algorithms.structure": [[35, 1, 1, "", "articulation_nodes"], [36, 1, 1, "", "bridges"], [37, 1, 1, "", "cut_edges"], [38, 1, 1, "", "cut_vertices"], [39, 1, 1, "", "edges"], [40, 1, 1, "", "kink_region_iterator"], [41, 1, 1, "", "kinks"], [42, 1, 1, "", "loops"], [43, 1, 1, "", "number_of_edges"], [44, 1, 1, "", "parallel_arcs"], [45, 1, 1, "", "path_from_endpoint"]], "knotpy.algorithms.symmetry": [[47, 1, 1, "", "mirror"]], "knotpy.algorithms.tangle_algorithms": [[49, 1, 1, "", "insert_tangle"], [50, 1, 1, "", "insert_tangles_from"]], "knotpy.algorithms.tests": [[52, 0, 0, "-", "test_components"], [54, 0, 0, "-", "test_tangle"]], "knotpy.algorithms.tests.test_components": [[53, 2, 1, "", "TestComponents"]], "knotpy.algorithms.tests.test_components.TestComponents": [[53, 3, 1, "", "__init__"]], "knotpy.algorithms.tests.test_tangle": [[55, 2, 1, "", "TestTangles"]], "knotpy.algorithms.tests.test_tangle.TestTangles": [[55, 3, 1, "", "__init__"]], "knotpy.classes": [[57, 0, 0, "-", "bondedknot"], [59, 0, 0, "-", "endpoint"], [63, 0, 0, "-", "knot"], [66, 0, 0, "-", "knotoid"], [68, 0, 0, "-", "node"], [70, 0, 0, "-", "orientedknot"], [71, 0, 0, "-", "planardiagram"], [73, 0, 0, "-", "planargraph"], [76, 0, 0, "-", "spatialgraph"], [79, 0, 0, "-", "tangle"], [81, 0, 0, "-", "tests"], [83, 0, 0, "-", "views"]], "knotpy.classes.bondedknot": [[58, 2, 1, "", "BondedKnot"]], "knotpy.classes.bondedknot.BondedKnot": [[58, 3, 1, "", "__init__"], [58, 3, 1, "", "add_bivalent_vertex"], [58, 3, 1, "", "add_bivalent_vertices"], [58, 3, 1, "", "add_crossing"], [58, 3, 1, "", "add_crossings_from"], [58, 3, 1, "", "add_node"], [58, 3, 1, "", "add_nodes_from"], [58, 4, 1, "", "arcs"], [58, 4, 1, "", "bivalent_vertices"], [58, 3, 1, "", "clear"], [58, 3, 1, "", "copy"], [58, 4, 1, "", "crossings"], [58, 4, 1, "", "endpoints"], [58, 4, 1, "", "faces"], [58, 4, 1, "", "framing"], [58, 3, 1, "", "get_endpoint"], [58, 3, 1, "", "get_endpoint_from_pair"], [58, 3, 1, "", "jump_over_node"], [58, 4, 1, "", "name"], [58, 4, 1, "", "nodes"], [58, 3, 1, "", "permute_node"], [58, 3, 1, "", "py3_cmp"], [58, 3, 1, "", "relabel_nodes"], [58, 3, 1, "", "remove_node"], [58, 3, 1, "", "rotate_node_ccw"], [58, 3, 1, "", "set_arc"], [58, 3, 1, "", "set_arcs_from"], [58, 3, 1, "", "set_endpoint"], [58, 3, 1, "", "twin"]], "knotpy.classes.endpoint": [[60, 2, 1, "", "Endpoint"], [61, 2, 1, "", "IngoingEndpoint"], [62, 2, 1, "", "OutgoingEndpoint"]], "knotpy.classes.endpoint.Endpoint": [[60, 3, 1, "", "__init__"]], "knotpy.classes.endpoint.IngoingEndpoint": [[61, 3, 1, "", "__init__"]], "knotpy.classes.endpoint.OutgoingEndpoint": [[62, 3, 1, "", "__init__"]], "knotpy.classes.knot": [[64, 2, 1, "", "Knot"], [65, 2, 1, "", "OrientedKnot"]], "knotpy.classes.knot.Knot": [[64, 3, 1, "", "__init__"], [64, 3, 1, "", "add_bivalent_vertex"], [64, 3, 1, "", "add_bivalent_vertices"], [64, 3, 1, "", "add_crossing"], [64, 3, 1, "", "add_crossings_from"], [64, 3, 1, "", "add_node"], [64, 3, 1, "", "add_nodes_from"], [64, 4, 1, "", "arcs"], [64, 4, 1, "", "bivalent_vertices"], [64, 3, 1, "", "clear"], [64, 3, 1, "", "copy"], [64, 4, 1, "", "crossings"], [64, 4, 1, "", "endpoints"], [64, 4, 1, "", "faces"], [64, 4, 1, "", "framing"], [64, 3, 1, "", "get_endpoint"], [64, 3, 1, "", "get_endpoint_from_pair"], [64, 3, 1, "", "jump_over_node"], [64, 4, 1, "", "name"], [64, 4, 1, "", "nodes"], [64, 3, 1, "", "permute_node"], [64, 3, 1, "", "py3_cmp"], [64, 3, 1, "", "relabel_nodes"], [64, 3, 1, "", "remove_node"], [64, 3, 1, "", "rotate_node_ccw"], [64, 3, 1, "", "set_arc"], [64, 3, 1, "", "set_arcs_from"], [64, 3, 1, "", "set_endpoint"], [64, 3, 1, "", "twin"]], "knotpy.classes.knot.OrientedKnot": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "add_bivalent_vertex"], [65, 3, 1, "", "add_bivalent_vertices"], [65, 3, 1, "", "add_crossing"], [65, 3, 1, "", "add_crossings_from"], [65, 3, 1, "", "add_node"], [65, 3, 1, "", "add_nodes_from"], [65, 4, 1, "", "arcs"], [65, 4, 1, "", "bivalent_vertices"], [65, 3, 1, "", "clear"], [65, 3, 1, "", "copy"], [65, 4, 1, "", "crossings"], [65, 4, 1, "", "endpoints"], [65, 4, 1, "", "faces"], [65, 4, 1, "", "framing"], [65, 3, 1, "", "get_endpoint"], [65, 3, 1, "", "get_endpoint_from_pair"], [65, 3, 1, "", "jump_over_node"], [65, 4, 1, "", "name"], [65, 4, 1, "", "nodes"], [65, 3, 1, "", "permute_node"], [65, 3, 1, "", "py3_cmp"], [65, 3, 1, "", "relabel_nodes"], [65, 3, 1, "", "remove_node"], [65, 3, 1, "", "rotate_node_ccw"], [65, 3, 1, "", "set_arc"], [65, 3, 1, "", "set_arcs_from"], [65, 3, 1, "", "set_endpoint"], [65, 3, 1, "", "twin"]], "knotpy.classes.knotoid": [[67, 2, 1, "", "Knotoid"]], "knotpy.classes.knotoid.Knotoid": [[67, 3, 1, "", "__init__"], [67, 3, 1, "", "add_bivalent_vertex"], [67, 3, 1, "", "add_bivalent_vertices"], [67, 3, 1, "", "add_crossing"], [67, 3, 1, "", "add_crossings_from"], [67, 3, 1, "", "add_node"], [67, 3, 1, "", "add_nodes_from"], [67, 3, 1, "", "add_terminal"], [67, 3, 1, "", "add_terminals_from"], [67, 4, 1, "", "arcs"], [67, 4, 1, "", "bivalent_vertices"], [67, 3, 1, "", "clear"], [67, 3, 1, "", "copy"], [67, 4, 1, "", "crossings"], [67, 4, 1, "", "endpoints"], [67, 4, 1, "", "faces"], [67, 4, 1, "", "framing"], [67, 3, 1, "", "get_endpoint"], [67, 3, 1, "", "get_endpoint_from_pair"], [67, 3, 1, "", "jump_over_node"], [67, 4, 1, "", "name"], [67, 4, 1, "", "nodes"], [67, 3, 1, "", "permute_node"], [67, 3, 1, "", "py3_cmp"], [67, 3, 1, "", "relabel_nodes"], [67, 3, 1, "", "remove_node"], [67, 3, 1, "", "rotate_node_ccw"], [67, 3, 1, "", "set_arc"], [67, 3, 1, "", "set_arcs_from"], [67, 3, 1, "", "set_endpoint"], [67, 4, 1, "", "terminals"], [67, 3, 1, "", "twin"]], "knotpy.classes.node": [[69, 2, 1, "", "Node"]], "knotpy.classes.node.Node": [[69, 3, 1, "", "__init__"], [69, 3, 1, "", "py3_cmp"]], "knotpy.classes.planardiagram": [[72, 2, 1, "", "PlanarDiagram"]], "knotpy.classes.planardiagram.PlanarDiagram": [[72, 3, 1, "", "__init__"], [72, 3, 1, "", "add_node"], [72, 3, 1, "", "add_nodes_from"], [72, 4, 1, "", "arcs"], [72, 3, 1, "", "clear"], [72, 3, 1, "", "copy"], [72, 4, 1, "", "endpoints"], [72, 4, 1, "", "faces"], [72, 4, 1, "", "framing"], [72, 3, 1, "", "get_endpoint"], [72, 3, 1, "", "get_endpoint_from_pair"], [72, 3, 1, "", "jump_over_node"], [72, 4, 1, "", "name"], [72, 4, 1, "", "nodes"], [72, 3, 1, "", "permute_node"], [72, 3, 1, "", "py3_cmp"], [72, 3, 1, "", "relabel_nodes"], [72, 3, 1, "", "remove_node"], [72, 3, 1, "", "rotate_node_ccw"], [72, 3, 1, "", "set_arc"], [72, 3, 1, "", "set_arcs_from"], [72, 3, 1, "", "set_endpoint"], [72, 3, 1, "", "twin"]], "knotpy.classes.planargraph": [[74, 2, 1, "", "OrientedPlanarGraph"], [75, 2, 1, "", "PlanarGraph"]], "knotpy.classes.planargraph.OrientedPlanarGraph": [[74, 3, 1, "", "__init__"], [74, 3, 1, "", "add_node"], [74, 3, 1, "", "add_nodes_from"], [74, 4, 1, "", "arcs"], [74, 3, 1, "", "clear"], [74, 3, 1, "", "copy"], [74, 4, 1, "", "endpoints"], [74, 4, 1, "", "faces"], [74, 4, 1, "", "framing"], [74, 3, 1, "", "get_endpoint"], [74, 3, 1, "", "get_endpoint_from_pair"], [74, 3, 1, "", "jump_over_node"], [74, 4, 1, "", "name"], [74, 4, 1, "", "nodes"], [74, 3, 1, "", "permute_node"], [74, 3, 1, "", "py3_cmp"], [74, 3, 1, "", "relabel_nodes"], [74, 3, 1, "", "remove_node"], [74, 3, 1, "", "rotate_node_ccw"], [74, 3, 1, "", "set_arc"], [74, 3, 1, "", "set_arcs_from"], [74, 3, 1, "", "set_endpoint"], [74, 3, 1, "", "twin"]], "knotpy.classes.planargraph.PlanarGraph": [[75, 3, 1, "", "__init__"], [75, 3, 1, "", "add_node"], [75, 3, 1, "", "add_nodes_from"], [75, 3, 1, "", "add_vertex"], [75, 3, 1, "", "add_vertices_from"], [75, 4, 1, "", "arcs"], [75, 3, 1, "", "clear"], [75, 3, 1, "", "copy"], [75, 4, 1, "", "endpoints"], [75, 4, 1, "", "faces"], [75, 4, 1, "", "framing"], [75, 3, 1, "", "get_endpoint"], [75, 3, 1, "", "get_endpoint_from_pair"], [75, 3, 1, "", "jump_over_node"], [75, 4, 1, "", "name"], [75, 4, 1, "", "nodes"], [75, 3, 1, "", "permute_node"], [75, 3, 1, "", "py3_cmp"], [75, 3, 1, "", "relabel_nodes"], [75, 3, 1, "", "remove_node"], [75, 3, 1, "", "rotate_node_ccw"], [75, 3, 1, "", "set_arc"], [75, 3, 1, "", "set_arcs_from"], [75, 3, 1, "", "set_endpoint"], [75, 3, 1, "", "twin"], [75, 4, 1, "", "vertices"]], "knotpy.classes.spatialgraph": [[77, 2, 1, "", "OrientedSpatialGraph"], [78, 2, 1, "", "SpatialGraph"]], "knotpy.classes.spatialgraph.OrientedSpatialGraph": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "add_bivalent_vertex"], [77, 3, 1, "", "add_bivalent_vertices"], [77, 3, 1, "", "add_crossing"], [77, 3, 1, "", "add_crossings_from"], [77, 3, 1, "", "add_node"], [77, 3, 1, "", "add_nodes_from"], [77, 3, 1, "", "add_vertex"], [77, 3, 1, "", "add_vertices_from"], [77, 4, 1, "", "arcs"], [77, 4, 1, "", "bivalent_vertices"], [77, 3, 1, "", "clear"], [77, 3, 1, "", "copy"], [77, 4, 1, "", "crossings"], [77, 4, 1, "", "endpoints"], [77, 4, 1, "", "faces"], [77, 4, 1, "", "framing"], [77, 3, 1, "", "get_endpoint"], [77, 3, 1, "", "get_endpoint_from_pair"], [77, 3, 1, "", "jump_over_node"], [77, 4, 1, "", "name"], [77, 4, 1, "", "nodes"], [77, 3, 1, "", "permute_node"], [77, 3, 1, "", "py3_cmp"], [77, 3, 1, "", "relabel_nodes"], [77, 3, 1, "", "remove_node"], [77, 3, 1, "", "rotate_node_ccw"], [77, 3, 1, "", "set_arc"], [77, 3, 1, "", "set_arcs_from"], [77, 3, 1, "", "set_endpoint"], [77, 3, 1, "", "twin"], [77, 4, 1, "", "vertices"]], "knotpy.classes.spatialgraph.SpatialGraph": [[78, 3, 1, "", "__init__"], [78, 3, 1, "", "add_bivalent_vertex"], [78, 3, 1, "", "add_bivalent_vertices"], [78, 3, 1, "", "add_crossing"], [78, 3, 1, "", "add_crossings_from"], [78, 3, 1, "", "add_node"], [78, 3, 1, "", "add_nodes_from"], [78, 3, 1, "", "add_vertex"], [78, 3, 1, "", "add_vertices_from"], [78, 4, 1, "", "arcs"], [78, 4, 1, "", "bivalent_vertices"], [78, 3, 1, "", "clear"], [78, 3, 1, "", "copy"], [78, 4, 1, "", "crossings"], [78, 4, 1, "", "endpoints"], [78, 4, 1, "", "faces"], [78, 4, 1, "", "framing"], [78, 3, 1, "", "get_endpoint"], [78, 3, 1, "", "get_endpoint_from_pair"], [78, 3, 1, "", "jump_over_node"], [78, 4, 1, "", "name"], [78, 4, 1, "", "nodes"], [78, 3, 1, "", "permute_node"], [78, 3, 1, "", "py3_cmp"], [78, 3, 1, "", "relabel_nodes"], [78, 3, 1, "", "remove_node"], [78, 3, 1, "", "rotate_node_ccw"], [78, 3, 1, "", "set_arc"], [78, 3, 1, "", "set_arcs_from"], [78, 3, 1, "", "set_endpoint"], [78, 3, 1, "", "twin"], [78, 4, 1, "", "vertices"]], "knotpy.classes.tangle": [[80, 2, 1, "", "Tangle"]], "knotpy.classes.tangle.Tangle": [[80, 3, 1, "", "__init__"], [80, 3, 1, "", "add_bivalent_vertex"], [80, 3, 1, "", "add_bivalent_vertices"], [80, 3, 1, "", "add_crossing"], [80, 3, 1, "", "add_crossings_from"], [80, 3, 1, "", "add_node"], [80, 3, 1, "", "add_nodes_from"], [80, 3, 1, "", "add_terminal"], [80, 3, 1, "", "add_terminals_from"], [80, 4, 1, "", "arcs"], [80, 4, 1, "", "bivalent_vertices"], [80, 3, 1, "", "clear"], [80, 3, 1, "", "copy"], [80, 4, 1, "", "crossings"], [80, 4, 1, "", "endpoints"], [80, 4, 1, "", "faces"], [80, 4, 1, "", "framing"], [80, 3, 1, "", "get_endpoint"], [80, 3, 1, "", "get_endpoint_from_pair"], [80, 3, 1, "", "jump_over_node"], [80, 4, 1, "", "name"], [80, 4, 1, "", "nodes"], [80, 3, 1, "", "permute_node"], [80, 3, 1, "", "py3_cmp"], [80, 3, 1, "", "relabel_nodes"], [80, 3, 1, "", "remove_node"], [80, 3, 1, "", "rotate_node_ccw"], [80, 3, 1, "", "set_arc"], [80, 3, 1, "", "set_arcs_from"], [80, 3, 1, "", "set_endpoint"], [80, 4, 1, "", "terminals"], [80, 3, 1, "", "twin"]], "knotpy.classes.tests": [[82, 0, 0, "-", "endpoint_tests"]], "knotpy.classes.views": [[84, 2, 1, "", "ArcView"], [85, 2, 1, "", "EndpointView"], [86, 2, 1, "", "FaceView"], [87, 2, 1, "", "FilteredNodeView"], [88, 2, 1, "", "NodeView"]], "knotpy.classes.views.ArcView": [[84, 3, 1, "", "__init__"], [84, 3, 1, "", "get"], [84, 3, 1, "", "isdisjoint"], [84, 3, 1, "", "items"], [84, 3, 1, "", "keys"], [84, 3, 1, "", "values"]], "knotpy.classes.views.EndpointView": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "get"], [85, 3, 1, "", "isdisjoint"], [85, 3, 1, "", "items"], [85, 3, 1, "", "keys"], [85, 3, 1, "", "values"]], "knotpy.classes.views.FaceView": [[86, 3, 1, "", "__init__"], [86, 3, 1, "", "get"], [86, 3, 1, "", "isdisjoint"], [86, 3, 1, "", "items"], [86, 3, 1, "", "keys"], [86, 3, 1, "", "values"]], "knotpy.classes.views.FilteredNodeView": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "get"], [87, 3, 1, "", "isdisjoint"], [87, 3, 1, "", "items"], [87, 3, 1, "", "keys"], [87, 3, 1, "", "values"]], "knotpy.classes.views.NodeView": [[88, 3, 1, "", "__init__"], [88, 3, 1, "", "get"], [88, 3, 1, "", "isdisjoint"], [88, 3, 1, "", "items"], [88, 3, 1, "", "keys"], [88, 3, 1, "", "values"]], "knotpy.drawing": [[90, 0, 0, "-", "circlepack"], [99, 0, 0, "-", "draw_matplotlib"], [106, 0, 0, "-", "layout"], [110, 0, 0, "-", "test"], [112, 0, 0, "-", "test2"]], "knotpy.drawing.circlepack": [[91, 1, 1, "", "CirclePack"], [92, 1, 1, "", "InvertAround"], [93, 1, 1, "", "InvertPacking"], [94, 1, 1, "", "NormalizePacking"], [95, 1, 1, "", "acxyz"], [96, 1, 1, "", "flower"], [97, 1, 1, "", "place"], [98, 1, 1, "", "testgrid"]], "knotpy.drawing.draw_matplotlib": [[100, 2, 1, "", "Arrow"], [101, 1, 1, "", "average_color"], [102, 1, 1, "", "draw"], [103, 1, 1, "", "draw_from_layout"], [104, 1, 1, "", "export_pdf"], [105, 1, 1, "", "to_color"]], "knotpy.drawing.draw_matplotlib.Arrow": [[100, 3, 1, "", "__init__"]], "knotpy.drawing.layout": [[107, 1, 1, "", "bezier"], [108, 1, 1, "", "circlepack_layout"], [109, 1, 1, "", "preprocess_diagram"]], "knotpy.drawing.test": [[111, 1, 1, "", "plot_circles"]], "knotpy.generate": [[114, 0, 0, "-", "conversions"], [116, 0, 0, "-", "example"], [122, 0, 0, "-", "generate_planar_graphs"], [125, 0, 0, "-", "simple"], [128, 0, 0, "-", "simple_tangles"]], "knotpy.generate.conversions": [[115, 1, 1, "", "orientations"]], "knotpy.generate.example": [[117, 1, 1, "", "example_spatial_graph"], [118, 1, 1, "", "handcuff_theta"], [119, 1, 1, "", "oriented_trefoil"], [120, 1, 1, "", "trefoil_knot"], [121, 1, 1, "", "trefoil_theta"]], "knotpy.generate.generate_planar_graphs": [[123, 1, 1, "", "generate_planar_graphs"], [124, 1, 1, "", "sort_graphs"]], "knotpy.generate.simple": [[126, 1, 1, "", "empty_knot"], [127, 1, 1, "", "parallel_edge"]], "knotpy.generate.simple_tangles": [[129, 1, 1, "", "horizontal_tangle"], [130, 1, 1, "", "integer_tangle"], [131, 1, 1, "", "vertical_tangle"]], "knotpy.invariants": [[133, 0, 0, "-", "bracket"], [135, 0, 0, "-", "module"], [137, 0, 0, "-", "yamada"]], "knotpy.invariants.bracket": [[134, 1, 1, "", "bracket_polynomial"]], "knotpy.invariants.module": [[136, 2, 1, "", "Module"]], "knotpy.invariants.module.Module": [[136, 3, 1, "", "__init__"]], "knotpy.invariants.yamada": [[138, 1, 1, "", "yamada"]], "knotpy.manipulation": [[140, 0, 0, "-", "elementary"], [142, 0, 0, "-", "phantom"], [146, 0, 0, "-", "reidemeister"], [151, 0, 0, "-", "simplification"]], "knotpy.manipulation.elementary": [[141, 1, 1, "", "copy_and_move_arc"]], "knotpy.manipulation.phantom": [[143, 1, 1, "", "insert_phantom_node"], [144, 1, 1, "", "insert_phantom_nodes_on_internal_arcs"], [145, 1, 1, "", "is_node_phantom"]], "knotpy.manipulation.reidemeister": [[147, 1, 1, "", "add_kink"], [148, 1, 1, "", "reidemeister_3"], [149, 1, 1, "", "remove_kink"], [150, 1, 1, "", "remove_poke"]], "knotpy.manipulation.simplification": [[152, 1, 1, "", "simplify"]], "knotpy.notation": [[154, 0, 0, "-", "dispatcher"], [157, 0, 0, "-", "em"], [162, 0, 0, "-", "native"], [165, 0, 0, "-", "pd"], [168, 0, 0, "-", "plantri"], [171, 0, 0, "-", "tests"]], "knotpy.notation.dispatcher": [[155, 1, 1, "", "from_notation_dispatcher"], [156, 1, 1, "", "to_notation_dispatcher"]], "knotpy.notation.em": [[158, 1, 1, "", "from_condensed_em_notation"], [159, 1, 1, "", "from_em_notation"], [160, 1, 1, "", "to_condensed_em_notation"], [161, 1, 1, "", "to_em_notation"]], "knotpy.notation.native": [[163, 1, 1, "", "from_knotpy_notation"], [164, 1, 1, "", "to_knotpy_notation"]], "knotpy.notation.pd": [[166, 1, 1, "", "from_pd_notation"], [167, 1, 1, "", "to_pd_notation"]], "knotpy.notation.plantri": [[169, 1, 1, "", "from_plantri_notation"], [170, 1, 1, "", "to_plantri_notation"]], "knotpy.notation.tests": [[172, 0, 0, "-", "test_notation"]], "knotpy.readwrite": [[174, 0, 0, "-", "cleanopen"], [176, 0, 0, "-", "text"]], "knotpy.readwrite.cleanopen": [[175, 1, 1, "", "prepend_to_extension"]], "knotpy.readwrite.text": [[177, 1, 1, "", "loadtxt_iterator"], [178, 1, 1, "", "loadtxt_multiple"], [179, 1, 1, "", "save_txt"]], "knotpy.utils": [[181, 0, 0, "-", "combinatorics"], [187, 0, 0, "-", "decorators"], [190, 0, 0, "-", "dict_utils"], [195, 0, 0, "-", "equivalence"], [197, 0, 0, "-", "exception"], [199, 0, 0, "-", "geometry"], [218, 0, 0, "-", "string_utils"]], "knotpy.utils.combinatorics": [[182, 1, 1, "", "combinations_with_limited_repetitions"], [183, 1, 1, "", "iterable_depth"], [184, 1, 1, "", "lexicographical_minimal_cyclic_rotation_shift"], [185, 1, 1, "", "parted_permutations"], [186, 1, 1, "", "union"]], "knotpy.utils.decorators": [[188, 1, 1, "", "multi_variable_invariant"], [189, 1, 1, "", "total_ordering_py3"]], "knotpy.utils.dict_utils": [[191, 1, 1, "", "compare_dicts"], [192, 2, 1, "", "identitydict"], [193, 1, 1, "", "inverse_dict"], [194, 1, 1, "", "inverse_multi_dict"]], "knotpy.utils.dict_utils.identitydict": [[192, 3, 1, "", "__init__"], [192, 3, 1, "", "clear"], [192, 3, 1, "", "copy"], [192, 5, 1, "", "default_factory"], [192, 3, 1, "", "fromkeys"], [192, 3, 1, "", "get"], [192, 3, 1, "", "items"], [192, 3, 1, "", "keys"], [192, 3, 1, "", "pop"], [192, 3, 1, "", "popitem"], [192, 3, 1, "", "setdefault"], [192, 3, 1, "", "update"], [192, 3, 1, "", "values"]], "knotpy.utils.equivalence": [[196, 2, 1, "", "EquivalenceRelation"]], "knotpy.utils.equivalence.EquivalenceRelation": [[196, 3, 1, "", "__init__"], [196, 3, 1, "", "clear"], [196, 3, 1, "", "copy"], [196, 3, 1, "", "fromkeys"], [196, 3, 1, "", "get"], [196, 3, 1, "", "items"], [196, 3, 1, "", "keys"], [196, 3, 1, "", "pop"], [196, 3, 1, "", "popitem"], [196, 3, 1, "", "setdefault"], [196, 3, 1, "", "update"], [196, 3, 1, "", "values"]], "knotpy.utils.exception": [[198, 6, 1, "", "KnotPyException"]], "knotpy.utils.geometry": [[200, 2, 1, "", "BoundingBox"], [201, 2, 1, "", "Circle"], [202, 2, 1, "", "CircularArc"], [203, 2, 1, "", "Line"], [204, 2, 1, "", "Segment"], [205, 1, 1, "", "antipode"], [206, 1, 1, "", "bisect"], [207, 1, 1, "", "bisector"], [208, 1, 1, "", "bounding_box"], [209, 1, 1, "", "circle_through_points"], [210, 1, 1, "", "inverse_point_through_circle"], [211, 1, 1, "", "is_angle_between"], [212, 1, 1, "", "middle"], [213, 1, 1, "", "perpendicular_arc"], [214, 1, 1, "", "perpendicular_arc_through_point"], [215, 1, 1, "", "perpendicular_line"], [216, 1, 1, "", "split"], [217, 1, 1, "", "tangent_line"]], "knotpy.utils.geometry.BoundingBox": [[200, 3, 1, "", "__init__"]], "knotpy.utils.geometry.Circle": [[201, 3, 1, "", "__init__"]], "knotpy.utils.geometry.CircularArc": [[202, 3, 1, "", "__init__"]], "knotpy.utils.geometry.Line": [[203, 3, 1, "", "__init__"], [203, 3, 1, "", "parameter_from_point"]], "knotpy.utils.geometry.Segment": [[204, 3, 1, "", "__init__"], [204, 3, 1, "", "parameter_from_point"]], "knotpy.utils.string_utils": [[219, 1, 1, "", "multi_replace"], [220, 1, 1, "", "nested_split"], [221, 1, 1, "", "string_to_nested_tuple_with_prefixes"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"first": 0, "exampl": [0, 116], "knotpi": 1, "licens": 1, "project": 1, "fund": 1, "instal": 2, "releas": 2, "version": 2, "develop": 2, "test": [2, 51, 81, 110, 171], "algorithm": 3, "canon": 4, "compon": 5, "add_unknot_in_plac": 6, "cut_set": 7, "disjoint_compon": 8, "disjoint_components_nod": 9, "disjoint_sum": 10, "is_connected_sum": 11, "is_connected_sum_third_ord": 12, "link_components_endpoint": 13, "number_of_disjoint_compon": 14, "number_of_link_compon": 15, "face": 16, "check_faces_san": 17, "choose_kink": 18, "choose_pok": 19, "poke": 20, "triangles_nonaltern": 21, "node_algorithm": 22, "add_node_to": 23, "degree_sequ": 24, "name_for_new_nod": 25, "name_for_next_node_gener": 26, "permute_nod": 27, "relabel_nod": 28, "orient": [29, 115], "all_orient": 30, "skein": 31, "smoothing_type_a": 32, "smoothing_type_b": 33, "structur": 34, "articulation_nod": 35, "bridg": 36, "cut_edg": 37, "cut_vertic": 38, "edg": 39, "kink_region_iter": 40, "kink": 41, "loop": 42, "number_of_edg": 43, "parallel_arc": 44, "path_from_endpoint": 45, "symmetri": 46, "mirror": 47, "tangle_algorithm": 48, "insert_tangl": 49, "insert_tangles_from": 50, "test_compon": 52, "testcompon": 53, "test_tangl": 54, "testtangl": 55, "class": 56, "bondedknot": [57, 58], "endpoint": [59, 60], "ingoingendpoint": 61, "outgoingendpoint": 62, "knot": [63, 64], "orientedknot": [65, 70], "knotoid": [66, 67], "node": [68, 69], "planardiagram": [71, 72], "planargraph": [73, 75], "orientedplanargraph": 74, "spatialgraph": [76, 78], "orientedspatialgraph": 77, "tangl": [79, 80], "endpoint_test": 82, "view": 83, "arcview": 84, "endpointview": 85, "faceview": 86, "filterednodeview": 87, "nodeview": 88, "draw": [89, 102], "circlepack": [90, 91], "invertaround": 92, "invertpack": 93, "normalizepack": 94, "acxyz": 95, "flower": 96, "place": 97, "testgrid": 98, "draw_matplotlib": 99, "arrow": 100, "average_color": 101, "draw_from_layout": 103, "export_pdf": 104, "to_color": 105, "layout": 106, "bezier": 107, "circlepack_layout": 108, "preprocess_diagram": 109, "plot_circl": 111, "test2": 112, "gener": 113, "convers": 114, "example_spatial_graph": 117, "handcuff_theta": 118, "oriented_trefoil": 119, "trefoil_knot": 120, "trefoil_theta": 121, "generate_planar_graph": [122, 123], "sort_graph": 124, "simpl": 125, "empty_knot": 126, "parallel_edg": 127, "simple_tangl": 128, "horizontal_tangl": 129, "integer_tangl": 130, "vertical_tangl": 131, "invari": 132, "bracket": 133, "bracket_polynomi": 134, "modul": [135, 136, 222], "yamada": [137, 138], "manipul": 139, "elementari": 140, "copy_and_move_arc": 141, "phantom": 142, "insert_phantom_nod": 143, "insert_phantom_nodes_on_internal_arc": 144, "is_node_phantom": 145, "reidemeist": 146, "add_kink": 147, "reidemeister_3": 148, "remove_kink": 149, "remove_pok": 150, "simplif": 151, "simplifi": 152, "notat": 153, "dispatch": 154, "from_notation_dispatch": 155, "to_notation_dispatch": 156, "em": 157, "from_condensed_em_not": 158, "from_em_not": 159, "to_condensed_em_not": 160, "to_em_not": 161, "nativ": 162, "from_knotpy_not": 163, "to_knotpy_not": 164, "pd": 165, "from_pd_not": 166, "to_pd_not": 167, "plantri": 168, "from_plantri_not": 169, "to_plantri_not": 170, "test_not": 172, "readwrit": 173, "cleanopen": 174, "prepend_to_extens": 175, "text": 176, "loadtxt_iter": 177, "loadtxt_multipl": 178, "save_txt": 179, "util": 180, "combinator": 181, "combinations_with_limited_repetit": 182, "iterable_depth": 183, "lexicographical_minimal_cyclic_rotation_shift": 184, "parted_permut": 185, "union": 186, "decor": 187, "multi_variable_invari": 188, "total_ordering_py3": 189, "dict_util": 190, "compare_dict": 191, "identitydict": 192, "inverse_dict": 193, "inverse_multi_dict": 194, "equival": 195, "equivalencerel": 196, "except": 197, "knotpyexcept": 198, "geometri": 199, "boundingbox": 200, "circl": 201, "circulararc": 202, "line": 203, "segment": 204, "antipod": 205, "bisect": 206, "bisector": 207, "bounding_box": 208, "circle_through_point": 209, "inverse_point_through_circl": 210, "is_angle_between": 211, "middl": 212, "perpendicular_arc": 213, "perpendicular_arc_through_point": 214, "perpendicular_lin": 215, "split": 216, "tangent_lin": 217, "string_util": 218, "multi_replac": 219, "nested_split": 220, "string_to_nested_tuple_with_prefix": 221, "refer": 222, "tutori": 223}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"First example": [[0, "first-example"]], "KnotPy": [[1, "knotpy"]], "License": [[1, "license"]], "Project Funding": [[1, "project-funding"]], "Install": [[2, "install"]], "Install the released version": [[2, "install-the-released-version"]], "Install the development version": [[2, "install-the-development-version"]], "Testing": [[2, "testing"]], "algorithms": [[3, "module-knotpy.algorithms"]], "canonical": [[4, "module-knotpy.algorithms.canonical"]], "components": [[5, "module-knotpy.algorithms.components"]], "add_unknot_in_place": [[6, "add-unknot-in-place"]], "cut_sets": [[7, "cut-sets"]], "disjoint_components": [[8, "disjoint-components"]], "disjoint_components_nodes": [[9, "disjoint-components-nodes"]], "disjoint_sum": [[10, "disjoint-sum"]], "is_connected_sum": [[11, "is-connected-sum"]], "is_connected_sum_third_order": [[12, "is-connected-sum-third-order"]], "link_components_endpoints": [[13, "link-components-endpoints"]], "number_of_disjoint_components": [[14, "number-of-disjoint-components"]], "number_of_link_components": [[15, "number-of-link-components"]], "faces": [[16, "module-knotpy.algorithms.faces"]], "check_faces_sanity": [[17, "check-faces-sanity"]], "choose_kink": [[18, "choose-kink"]], "choose_poke": [[19, "choose-poke"]], "pokes": [[20, "pokes"]], "triangles_nonalternating": [[21, "triangles-nonalternating"]], "node_algorithms": [[22, "module-knotpy.algorithms.node_algorithms"]], "add_node_to": [[23, "add-node-to"]], "degree_sequence": [[24, "degree-sequence"]], "name_for_new_node": [[25, "name-for-new-node"]], "name_for_next_node_generator": [[26, "name-for-next-node-generator"]], "permute_node": [[27, "permute-node"]], "relabel_nodes": [[28, "relabel-nodes"]], "orientation": [[29, "module-knotpy.algorithms.orientation"]], "all_orientations": [[30, "all-orientations"]], "skein": [[31, "module-knotpy.algorithms.skein"]], "smoothing_type_A": [[32, "smoothing-type-a"]], "smoothing_type_B": [[33, "smoothing-type-b"]], "structure": [[34, "module-knotpy.algorithms.structure"]], "articulation_nodes": [[35, "articulation-nodes"]], "bridges": [[36, "bridges"]], "cut_edges": [[37, "cut-edges"]], "cut_vertices": [[38, "cut-vertices"]], "edges": [[39, "edges"]], "kink_region_iterator": [[40, "kink-region-iterator"]], "kinks": [[41, "kinks"]], "loops": [[42, "loops"]], "number_of_edges": [[43, "number-of-edges"]], "parallel_arcs": [[44, "parallel-arcs"]], "path_from_endpoint": [[45, "path-from-endpoint"]], "symmetry": [[46, "module-knotpy.algorithms.symmetry"]], "mirror": [[47, "mirror"]], "tangle_algorithms": [[48, "module-knotpy.algorithms.tangle_algorithms"]], "insert_tangle": [[49, "insert-tangle"]], "insert_tangles_from": [[50, "insert-tangles-from"]], "tests": [[51, "module-knotpy.algorithms.tests"], [81, "module-knotpy.classes.tests"], [171, "module-knotpy.notation.tests"]], "test_components": [[52, "module-knotpy.algorithms.tests.test_components"]], "TestComponents": [[53, "testcomponents"]], "test_tangle": [[54, "module-knotpy.algorithms.tests.test_tangle"]], "TestTangles": [[55, "testtangles"]], "classes": [[56, "module-knotpy.classes"]], "bondedknot": [[57, "module-knotpy.classes.bondedknot"]], "BondedKnot": [[58, "bondedknot"]], "endpoint": [[59, "module-knotpy.classes.endpoint"]], "Endpoint": [[60, "endpoint"]], "IngoingEndpoint": [[61, "ingoingendpoint"]], "OutgoingEndpoint": [[62, "outgoingendpoint"]], "knot": [[63, "module-knotpy.classes.knot"]], "Knot": [[64, "knot"]], "OrientedKnot": [[65, "orientedknot"]], "knotoid": [[66, "module-knotpy.classes.knotoid"]], "Knotoid": [[67, "knotoid"]], "node": [[68, "module-knotpy.classes.node"]], "Node": [[69, "node"]], "orientedknot": [[70, "module-knotpy.classes.orientedknot"]], "planardiagram": [[71, "module-knotpy.classes.planardiagram"]], "PlanarDiagram": [[72, "planardiagram"]], "planargraph": [[73, "module-knotpy.classes.planargraph"]], "OrientedPlanarGraph": [[74, "orientedplanargraph"]], "PlanarGraph": [[75, "planargraph"]], "spatialgraph": [[76, "module-knotpy.classes.spatialgraph"]], "OrientedSpatialGraph": [[77, "orientedspatialgraph"]], "SpatialGraph": [[78, "spatialgraph"]], "tangle": [[79, "module-knotpy.classes.tangle"]], "Tangle": [[80, "tangle"]], "endpoint_tests": [[82, "module-knotpy.classes.tests.endpoint_tests"]], "views": [[83, "module-knotpy.classes.views"]], "ArcView": [[84, "arcview"]], "EndpointView": [[85, "endpointview"]], "FaceView": [[86, "faceview"]], "FilteredNodeView": [[87, "filterednodeview"]], "NodeView": [[88, "nodeview"]], "drawing": [[89, "module-knotpy.drawing"]], "circlepack": [[90, "module-knotpy.drawing.circlepack"]], "CirclePack": [[91, "circlepack"]], "InvertAround": [[92, "invertaround"]], "InvertPacking": [[93, "invertpacking"]], "NormalizePacking": [[94, "normalizepacking"]], "acxyz": [[95, "acxyz"]], "flower": [[96, "flower"]], "place": [[97, "place"]], "testgrid": [[98, "testgrid"]], "draw_matplotlib": [[99, "module-knotpy.drawing.draw_matplotlib"]], "Arrow": [[100, "arrow"]], "average_color": [[101, "average-color"]], "draw": [[102, "draw"]], "draw_from_layout": [[103, "draw-from-layout"]], "export_pdf": [[104, "export-pdf"]], "to_color": [[105, "to-color"]], "layout": [[106, "module-knotpy.drawing.layout"]], "bezier": [[107, "bezier"]], "circlepack_layout": [[108, "circlepack-layout"]], "preprocess_diagram": [[109, "preprocess-diagram"]], "test": [[110, "module-knotpy.drawing.test"]], "plot_circles": [[111, "plot-circles"]], "test2": [[112, "module-knotpy.drawing.test2"]], "generate": [[113, "module-knotpy.generate"]], "conversions": [[114, "module-knotpy.generate.conversions"]], "orientations": [[115, "orientations"]], "example": [[116, "module-knotpy.generate.example"]], "example_spatial_graph": [[117, "example-spatial-graph"]], "handcuff_theta": [[118, "handcuff-theta"]], "oriented_trefoil": [[119, "oriented-trefoil"]], "trefoil_knot": [[120, "trefoil-knot"]], "trefoil_theta": [[121, "trefoil-theta"]], "generate_planar_graphs": [[122, "module-knotpy.generate.generate_planar_graphs"], [123, "generate-planar-graphs"]], "sort_graphs": [[124, "sort-graphs"]], "simple": [[125, "module-knotpy.generate.simple"]], "empty_knot": [[126, "empty-knot"]], "parallel_edge": [[127, "parallel-edge"]], "simple_tangles": [[128, "module-knotpy.generate.simple_tangles"]], "horizontal_tangle": [[129, "horizontal-tangle"]], "integer_tangle": [[130, "integer-tangle"]], "vertical_tangle": [[131, "vertical-tangle"]], "invariants": [[132, "module-knotpy.invariants"]], "bracket": [[133, "module-knotpy.invariants.bracket"]], "bracket_polynomial": [[134, "bracket-polynomial"]], "module": [[135, "module-knotpy.invariants.module"]], "Module": [[136, "module"]], "yamada": [[137, "module-knotpy.invariants.yamada"], [138, "yamada"]], "manipulation": [[139, "module-knotpy.manipulation"]], "elementary": [[140, "module-knotpy.manipulation.elementary"]], "copy_and_move_arc": [[141, "copy-and-move-arc"]], "phantom": [[142, "module-knotpy.manipulation.phantom"]], "insert_phantom_node": [[143, "insert-phantom-node"]], "insert_phantom_nodes_on_internal_arcs": [[144, "insert-phantom-nodes-on-internal-arcs"]], "is_node_phantom": [[145, "is-node-phantom"]], "reidemeister": [[146, "module-knotpy.manipulation.reidemeister"]], "add_kink": [[147, "add-kink"]], "reidemeister_3": [[148, "reidemeister-3"]], "remove_kink": [[149, "remove-kink"]], "remove_poke": [[150, "remove-poke"]], "simplification": [[151, "module-knotpy.manipulation.simplification"]], "simplify": [[152, "simplify"]], "notation": [[153, "module-knotpy.notation"]], "dispatcher": [[154, "module-knotpy.notation.dispatcher"]], "from_notation_dispatcher": [[155, "from-notation-dispatcher"]], "to_notation_dispatcher": [[156, "to-notation-dispatcher"]], "em": [[157, "module-knotpy.notation.em"]], "from_condensed_em_notation": [[158, "from-condensed-em-notation"]], "from_em_notation": [[159, "from-em-notation"]], "to_condensed_em_notation": [[160, "to-condensed-em-notation"]], "to_em_notation": [[161, "to-em-notation"]], "native": [[162, "module-knotpy.notation.native"]], "from_knotpy_notation": [[163, "from-knotpy-notation"]], "to_knotpy_notation": [[164, "to-knotpy-notation"]], "pd": [[165, "module-knotpy.notation.pd"]], "from_pd_notation": [[166, "from-pd-notation"]], "to_pd_notation": [[167, "to-pd-notation"]], "plantri": [[168, "module-knotpy.notation.plantri"]], "from_plantri_notation": [[169, "from-plantri-notation"]], "to_plantri_notation": [[170, "to-plantri-notation"]], "test_notation": [[172, "module-knotpy.notation.tests.test_notation"]], "readwrite": [[173, "module-knotpy.readwrite"]], "cleanopen": [[174, "module-knotpy.readwrite.cleanopen"]], "prepend_to_extension": [[175, "prepend-to-extension"]], "text": [[176, "module-knotpy.readwrite.text"]], "loadtxt_iterator": [[177, "loadtxt-iterator"]], "loadtxt_multiple": [[178, "loadtxt-multiple"]], "save_txt": [[179, "save-txt"]], "utils": [[180, "module-knotpy.utils"]], "combinatorics": [[181, "module-knotpy.utils.combinatorics"]], "combinations_with_limited_repetitions": [[182, "combinations-with-limited-repetitions"]], "iterable_depth": [[183, "iterable-depth"]], "lexicographical_minimal_cyclic_rotation_shift": [[184, "lexicographical-minimal-cyclic-rotation-shift"]], "parted_permutations": [[185, "parted-permutations"]], "union": [[186, "union"]], "decorators": [[187, "module-knotpy.utils.decorators"]], "multi_variable_invariant": [[188, "multi-variable-invariant"]], "total_ordering_py3": [[189, "total-ordering-py3"]], "dict_utils": [[190, "module-knotpy.utils.dict_utils"]], "compare_dicts": [[191, "compare-dicts"]], "identitydict": [[192, "identitydict"]], "inverse_dict": [[193, "inverse-dict"]], "inverse_multi_dict": [[194, "inverse-multi-dict"]], "equivalence": [[195, "module-knotpy.utils.equivalence"]], "EquivalenceRelation": [[196, "equivalencerelation"]], "exception": [[197, "module-knotpy.utils.exception"]], "KnotPyException": [[198, "knotpyexception"]], "geometry": [[199, "module-knotpy.utils.geometry"]], "BoundingBox": [[200, "boundingbox"]], "Circle": [[201, "circle"]], "CircularArc": [[202, "circulararc"]], "Line": [[203, "line"]], "Segment": [[204, "segment"]], "antipode": [[205, "antipode"]], "bisect": [[206, "bisect"]], "bisector": [[207, "bisector"]], "bounding_box": [[208, "bounding-box"]], "circle_through_points": [[209, "circle-through-points"]], "inverse_point_through_circle": [[210, "inverse-point-through-circle"]], "is_angle_between": [[211, "is-angle-between"]], "middle": [[212, "middle"]], "perpendicular_arc": [[213, "perpendicular-arc"]], "perpendicular_arc_through_point": [[214, "perpendicular-arc-through-point"]], "perpendicular_line": [[215, "perpendicular-line"]], "split": [[216, "split"]], "tangent_line": [[217, "tangent-line"]], "string_utils": [[218, "module-knotpy.utils.string_utils"]], "multi_replace": [[219, "multi-replace"]], "nested_split": [[220, "nested-split"]], "string_to_nested_tuple_with_prefixes": [[221, "string-to-nested-tuple-with-prefixes"]], "Reference": [[222, "reference"]], "Modules": [[222, "module-knotpy"]], "Tutorial": [[223, "tutorial"]]}, "indexentries": {"knotpy.algorithms": [[3, "module-knotpy.algorithms"]], "module": [[3, "module-knotpy.algorithms"], [4, "module-knotpy.algorithms.canonical"], [5, "module-knotpy.algorithms.components"], [16, "module-knotpy.algorithms.faces"], [22, "module-knotpy.algorithms.node_algorithms"], [29, "module-knotpy.algorithms.orientation"], [31, "module-knotpy.algorithms.skein"], [34, "module-knotpy.algorithms.structure"], [46, "module-knotpy.algorithms.symmetry"], [48, "module-knotpy.algorithms.tangle_algorithms"], [51, "module-knotpy.algorithms.tests"], [52, "module-knotpy.algorithms.tests.test_components"], [54, "module-knotpy.algorithms.tests.test_tangle"], [56, "module-knotpy.classes"], [57, "module-knotpy.classes.bondedknot"], [59, "module-knotpy.classes.endpoint"], [63, "module-knotpy.classes.knot"], [66, "module-knotpy.classes.knotoid"], [68, "module-knotpy.classes.node"], [70, "module-knotpy.classes.orientedknot"], [71, "module-knotpy.classes.planardiagram"], [73, "module-knotpy.classes.planargraph"], [76, "module-knotpy.classes.spatialgraph"], [79, "module-knotpy.classes.tangle"], [81, "module-knotpy.classes.tests"], [82, "module-knotpy.classes.tests.endpoint_tests"], [83, "module-knotpy.classes.views"], [89, "module-knotpy.drawing"], [90, "module-knotpy.drawing.circlepack"], [99, "module-knotpy.drawing.draw_matplotlib"], [106, "module-knotpy.drawing.layout"], [110, "module-knotpy.drawing.test"], [112, "module-knotpy.drawing.test2"], [113, "module-knotpy.generate"], [114, "module-knotpy.generate.conversions"], [116, "module-knotpy.generate.example"], [122, "module-knotpy.generate.generate_planar_graphs"], [125, "module-knotpy.generate.simple"], [128, "module-knotpy.generate.simple_tangles"], [132, "module-knotpy.invariants"], [133, "module-knotpy.invariants.bracket"], [135, "module-knotpy.invariants.module"], [137, "module-knotpy.invariants.yamada"], [139, "module-knotpy.manipulation"], [140, "module-knotpy.manipulation.elementary"], [142, "module-knotpy.manipulation.phantom"], [146, "module-knotpy.manipulation.reidemeister"], [151, "module-knotpy.manipulation.simplification"], [153, "module-knotpy.notation"], [154, "module-knotpy.notation.dispatcher"], [157, "module-knotpy.notation.em"], [162, "module-knotpy.notation.native"], [165, "module-knotpy.notation.pd"], [168, "module-knotpy.notation.plantri"], [171, "module-knotpy.notation.tests"], [172, "module-knotpy.notation.tests.test_notation"], [173, "module-knotpy.readwrite"], [174, "module-knotpy.readwrite.cleanopen"], [176, "module-knotpy.readwrite.text"], [180, "module-knotpy.utils"], [181, "module-knotpy.utils.combinatorics"], [187, "module-knotpy.utils.decorators"], [190, "module-knotpy.utils.dict_utils"], [195, "module-knotpy.utils.equivalence"], [197, "module-knotpy.utils.exception"], [199, "module-knotpy.utils.geometry"], [218, "module-knotpy.utils.string_utils"], [222, "module-knotpy"]], "knotpy.algorithms.canonical": [[4, "module-knotpy.algorithms.canonical"]], "knotpy.algorithms.components": [[5, "module-knotpy.algorithms.components"]], "add_unknot_in_place() (in module knotpy.algorithms.components)": [[6, "knotpy.algorithms.components.add_unknot_in_place"]], "cut_sets() (in module knotpy.algorithms.components)": [[7, "knotpy.algorithms.components.cut_sets"]], "disjoint_components() (in module knotpy.algorithms.components)": [[8, "knotpy.algorithms.components.disjoint_components"]], "disjoint_components_nodes() (in module knotpy.algorithms.components)": [[9, "knotpy.algorithms.components.disjoint_components_nodes"]], "disjoint_sum() (in module knotpy.algorithms.components)": [[10, "knotpy.algorithms.components.disjoint_sum"]], "is_connected_sum() (in module knotpy.algorithms.components)": [[11, "knotpy.algorithms.components.is_connected_sum"]], "is_connected_sum_third_order() (in module knotpy.algorithms.components)": [[12, "knotpy.algorithms.components.is_connected_sum_third_order"]], "link_components_endpoints() (in module knotpy.algorithms.components)": [[13, "knotpy.algorithms.components.link_components_endpoints"]], "number_of_disjoint_components() (in module knotpy.algorithms.components)": [[14, "knotpy.algorithms.components.number_of_disjoint_components"]], "number_of_link_components() (in module knotpy.algorithms.components)": [[15, "knotpy.algorithms.components.number_of_link_components"]], "knotpy.algorithms.faces": [[16, "module-knotpy.algorithms.faces"]], "check_faces_sanity() (in module knotpy.algorithms.faces)": [[17, "knotpy.algorithms.faces.check_faces_sanity"]], "choose_kink() (in module knotpy.algorithms.faces)": [[18, "knotpy.algorithms.faces.choose_kink"]], "choose_poke() (in module knotpy.algorithms.faces)": [[19, "knotpy.algorithms.faces.choose_poke"]], "pokes() (in module knotpy.algorithms.faces)": [[20, "knotpy.algorithms.faces.pokes"]], "triangles_nonalternating() (in module knotpy.algorithms.faces)": [[21, "knotpy.algorithms.faces.triangles_nonalternating"]], "knotpy.algorithms.node_algorithms": [[22, "module-knotpy.algorithms.node_algorithms"]], "add_node_to() (in module knotpy.algorithms.node_algorithms)": [[23, "knotpy.algorithms.node_algorithms.add_node_to"]], "degree_sequence() (in module knotpy.algorithms.node_algorithms)": [[24, "knotpy.algorithms.node_algorithms.degree_sequence"]], "name_for_new_node() (in module knotpy.algorithms.node_algorithms)": [[25, "knotpy.algorithms.node_algorithms.name_for_new_node"]], "name_for_next_node_generator() (in module knotpy.algorithms.node_algorithms)": [[26, "knotpy.algorithms.node_algorithms.name_for_next_node_generator"]], "permute_node() (in module knotpy.algorithms.node_algorithms)": [[27, "knotpy.algorithms.node_algorithms.permute_node"]], "relabel_nodes() (in module knotpy.algorithms.node_algorithms)": [[28, "knotpy.algorithms.node_algorithms.relabel_nodes"]], "knotpy.algorithms.orientation": [[29, "module-knotpy.algorithms.orientation"]], "all_orientations() (in module knotpy.algorithms.orientation)": [[30, "knotpy.algorithms.orientation.all_orientations"]], "knotpy.algorithms.skein": [[31, "module-knotpy.algorithms.skein"]], "smoothing_type_a() (in module knotpy.algorithms.skein)": [[32, "knotpy.algorithms.skein.smoothing_type_A"]], "smoothing_type_b() (in module knotpy.algorithms.skein)": [[33, "knotpy.algorithms.skein.smoothing_type_B"]], "knotpy.algorithms.structure": [[34, "module-knotpy.algorithms.structure"]], "articulation_nodes() (in module knotpy.algorithms.structure)": [[35, "knotpy.algorithms.structure.articulation_nodes"]], "bridges() (in module knotpy.algorithms.structure)": [[36, "knotpy.algorithms.structure.bridges"]], "cut_edges() (in module knotpy.algorithms.structure)": [[37, "knotpy.algorithms.structure.cut_edges"]], "cut_vertices() (in module knotpy.algorithms.structure)": [[38, "knotpy.algorithms.structure.cut_vertices"]], "edges() (in module knotpy.algorithms.structure)": [[39, "knotpy.algorithms.structure.edges"]], "kink_region_iterator() (in module knotpy.algorithms.structure)": [[40, "knotpy.algorithms.structure.kink_region_iterator"]], "kinks() (in module knotpy.algorithms.structure)": [[41, "knotpy.algorithms.structure.kinks"]], "loops() (in module knotpy.algorithms.structure)": [[42, "knotpy.algorithms.structure.loops"]], "number_of_edges() (in module knotpy.algorithms.structure)": [[43, "knotpy.algorithms.structure.number_of_edges"]], "parallel_arcs() (in module knotpy.algorithms.structure)": [[44, "knotpy.algorithms.structure.parallel_arcs"]], "path_from_endpoint() (in module knotpy.algorithms.structure)": [[45, "knotpy.algorithms.structure.path_from_endpoint"]], "knotpy.algorithms.symmetry": [[46, "module-knotpy.algorithms.symmetry"]], "mirror() (in module knotpy.algorithms.symmetry)": [[47, "knotpy.algorithms.symmetry.mirror"]], "knotpy.algorithms.tangle_algorithms": [[48, "module-knotpy.algorithms.tangle_algorithms"]], "insert_tangle() (in module knotpy.algorithms.tangle_algorithms)": [[49, "knotpy.algorithms.tangle_algorithms.insert_tangle"]], "insert_tangles_from() (in module knotpy.algorithms.tangle_algorithms)": [[50, "knotpy.algorithms.tangle_algorithms.insert_tangles_from"]], "knotpy.algorithms.tests": [[51, "module-knotpy.algorithms.tests"]], "knotpy.algorithms.tests.test_components": [[52, "module-knotpy.algorithms.tests.test_components"]], "testcomponents (class in knotpy.algorithms.tests.test_components)": [[53, "knotpy.algorithms.tests.test_components.TestComponents"]], "__init__() (testcomponents method)": [[53, "knotpy.algorithms.tests.test_components.TestComponents.__init__"]], "knotpy.algorithms.tests.test_tangle": [[54, "module-knotpy.algorithms.tests.test_tangle"]], "testtangles (class in knotpy.algorithms.tests.test_tangle)": [[55, "knotpy.algorithms.tests.test_tangle.TestTangles"]], "__init__() (testtangles method)": [[55, "knotpy.algorithms.tests.test_tangle.TestTangles.__init__"]], "knotpy.classes": [[56, "module-knotpy.classes"]], "knotpy.classes.bondedknot": [[57, "module-knotpy.classes.bondedknot"]], "bondedknot (class in knotpy.classes.bondedknot)": [[58, "knotpy.classes.bondedknot.BondedKnot"]], "__init__() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.__init__"]], "add_bivalent_vertex() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.add_bivalent_vertex"]], "add_bivalent_vertices() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.add_bivalent_vertices"]], "add_crossing() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.add_crossing"]], "add_crossings_from() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.add_crossings_from"]], "add_node() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.add_node"]], "add_nodes_from() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.add_nodes_from"]], "arcs (bondedknot property)": [[58, "knotpy.classes.bondedknot.BondedKnot.arcs"]], "bivalent_vertices (bondedknot property)": [[58, "knotpy.classes.bondedknot.BondedKnot.bivalent_vertices"]], "clear() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.clear"]], "copy() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.copy"]], "crossings (bondedknot property)": [[58, "knotpy.classes.bondedknot.BondedKnot.crossings"]], "endpoints (bondedknot property)": [[58, "knotpy.classes.bondedknot.BondedKnot.endpoints"]], "faces (bondedknot property)": [[58, "knotpy.classes.bondedknot.BondedKnot.faces"]], "framing (bondedknot property)": [[58, "knotpy.classes.bondedknot.BondedKnot.framing"]], "get_endpoint() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.get_endpoint"]], "get_endpoint_from_pair() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.get_endpoint_from_pair"]], "jump_over_node() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.jump_over_node"]], "name (bondedknot property)": [[58, "knotpy.classes.bondedknot.BondedKnot.name"]], "nodes (bondedknot property)": [[58, "knotpy.classes.bondedknot.BondedKnot.nodes"]], "permute_node() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.permute_node"]], "py3_cmp() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.py3_cmp"]], "relabel_nodes() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.relabel_nodes"]], "remove_node() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.remove_node"]], "rotate_node_ccw() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.rotate_node_ccw"]], "set_arc() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.set_arc"]], "set_arcs_from() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.set_arcs_from"]], "set_endpoint() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.set_endpoint"]], "twin() (bondedknot method)": [[58, "knotpy.classes.bondedknot.BondedKnot.twin"]], "knotpy.classes.endpoint": [[59, "module-knotpy.classes.endpoint"]], "endpoint (class in knotpy.classes.endpoint)": [[60, "knotpy.classes.endpoint.Endpoint"]], "__init__() (endpoint method)": [[60, "knotpy.classes.endpoint.Endpoint.__init__"]], "ingoingendpoint (class in knotpy.classes.endpoint)": [[61, "knotpy.classes.endpoint.IngoingEndpoint"]], "__init__() (ingoingendpoint method)": [[61, "knotpy.classes.endpoint.IngoingEndpoint.__init__"]], "outgoingendpoint (class in knotpy.classes.endpoint)": [[62, "knotpy.classes.endpoint.OutgoingEndpoint"]], "__init__() (outgoingendpoint method)": [[62, "knotpy.classes.endpoint.OutgoingEndpoint.__init__"]], "knotpy.classes.knot": [[63, "module-knotpy.classes.knot"]], "knot (class in knotpy.classes.knot)": [[64, "knotpy.classes.knot.Knot"]], "__init__() (knot method)": [[64, "knotpy.classes.knot.Knot.__init__"]], "add_bivalent_vertex() (knot method)": [[64, "knotpy.classes.knot.Knot.add_bivalent_vertex"]], "add_bivalent_vertices() (knot method)": [[64, "knotpy.classes.knot.Knot.add_bivalent_vertices"]], "add_crossing() (knot method)": [[64, "knotpy.classes.knot.Knot.add_crossing"]], "add_crossings_from() (knot method)": [[64, "knotpy.classes.knot.Knot.add_crossings_from"]], "add_node() (knot method)": [[64, "knotpy.classes.knot.Knot.add_node"]], "add_nodes_from() (knot method)": [[64, "knotpy.classes.knot.Knot.add_nodes_from"]], "arcs (knot property)": [[64, "knotpy.classes.knot.Knot.arcs"]], "bivalent_vertices (knot property)": [[64, "knotpy.classes.knot.Knot.bivalent_vertices"]], "clear() (knot method)": [[64, "knotpy.classes.knot.Knot.clear"]], "copy() (knot method)": [[64, "knotpy.classes.knot.Knot.copy"]], "crossings (knot property)": [[64, "knotpy.classes.knot.Knot.crossings"]], "endpoints (knot property)": [[64, "knotpy.classes.knot.Knot.endpoints"]], "faces (knot property)": [[64, "knotpy.classes.knot.Knot.faces"]], "framing (knot property)": [[64, "knotpy.classes.knot.Knot.framing"]], "get_endpoint() (knot method)": [[64, "knotpy.classes.knot.Knot.get_endpoint"]], "get_endpoint_from_pair() (knot method)": [[64, "knotpy.classes.knot.Knot.get_endpoint_from_pair"]], "jump_over_node() (knot method)": [[64, "knotpy.classes.knot.Knot.jump_over_node"]], "name (knot property)": [[64, "knotpy.classes.knot.Knot.name"]], "nodes (knot property)": [[64, "knotpy.classes.knot.Knot.nodes"]], "permute_node() (knot method)": [[64, "knotpy.classes.knot.Knot.permute_node"]], "py3_cmp() (knot method)": [[64, "knotpy.classes.knot.Knot.py3_cmp"]], "relabel_nodes() (knot method)": [[64, "knotpy.classes.knot.Knot.relabel_nodes"]], "remove_node() (knot method)": [[64, "knotpy.classes.knot.Knot.remove_node"]], "rotate_node_ccw() (knot method)": [[64, "knotpy.classes.knot.Knot.rotate_node_ccw"]], "set_arc() (knot method)": [[64, "knotpy.classes.knot.Knot.set_arc"]], "set_arcs_from() (knot method)": [[64, "knotpy.classes.knot.Knot.set_arcs_from"]], "set_endpoint() (knot method)": [[64, "knotpy.classes.knot.Knot.set_endpoint"]], "twin() (knot method)": [[64, "knotpy.classes.knot.Knot.twin"]], "orientedknot (class in knotpy.classes.knot)": [[65, "knotpy.classes.knot.OrientedKnot"]], "__init__() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.__init__"]], "add_bivalent_vertex() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.add_bivalent_vertex"]], "add_bivalent_vertices() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.add_bivalent_vertices"]], "add_crossing() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.add_crossing"]], "add_crossings_from() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.add_crossings_from"]], "add_node() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.add_node"]], "add_nodes_from() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.add_nodes_from"]], "arcs (orientedknot property)": [[65, "knotpy.classes.knot.OrientedKnot.arcs"]], "bivalent_vertices (orientedknot property)": [[65, "knotpy.classes.knot.OrientedKnot.bivalent_vertices"]], "clear() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.clear"]], "copy() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.copy"]], "crossings (orientedknot property)": [[65, "knotpy.classes.knot.OrientedKnot.crossings"]], "endpoints (orientedknot property)": [[65, "knotpy.classes.knot.OrientedKnot.endpoints"]], "faces (orientedknot property)": [[65, "knotpy.classes.knot.OrientedKnot.faces"]], "framing (orientedknot property)": [[65, "knotpy.classes.knot.OrientedKnot.framing"]], "get_endpoint() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.get_endpoint"]], "get_endpoint_from_pair() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.get_endpoint_from_pair"]], "jump_over_node() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.jump_over_node"]], "name (orientedknot property)": [[65, "knotpy.classes.knot.OrientedKnot.name"]], "nodes (orientedknot property)": [[65, "knotpy.classes.knot.OrientedKnot.nodes"]], "permute_node() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.permute_node"]], "py3_cmp() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.py3_cmp"]], "relabel_nodes() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.relabel_nodes"]], "remove_node() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.remove_node"]], "rotate_node_ccw() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.rotate_node_ccw"]], "set_arc() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.set_arc"]], "set_arcs_from() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.set_arcs_from"]], "set_endpoint() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.set_endpoint"]], "twin() (orientedknot method)": [[65, "knotpy.classes.knot.OrientedKnot.twin"]], "knotpy.classes.knotoid": [[66, "module-knotpy.classes.knotoid"]], "knotoid (class in knotpy.classes.knotoid)": [[67, "knotpy.classes.knotoid.Knotoid"]], "__init__() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.__init__"]], "add_bivalent_vertex() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.add_bivalent_vertex"]], "add_bivalent_vertices() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.add_bivalent_vertices"]], "add_crossing() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.add_crossing"]], "add_crossings_from() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.add_crossings_from"]], "add_node() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.add_node"]], "add_nodes_from() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.add_nodes_from"]], "add_terminal() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.add_terminal"]], "add_terminals_from() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.add_terminals_from"]], "arcs (knotoid property)": [[67, "knotpy.classes.knotoid.Knotoid.arcs"]], "bivalent_vertices (knotoid property)": [[67, "knotpy.classes.knotoid.Knotoid.bivalent_vertices"]], "clear() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.clear"]], "copy() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.copy"]], "crossings (knotoid property)": [[67, "knotpy.classes.knotoid.Knotoid.crossings"]], "endpoints (knotoid property)": [[67, "knotpy.classes.knotoid.Knotoid.endpoints"]], "faces (knotoid property)": [[67, "knotpy.classes.knotoid.Knotoid.faces"]], "framing (knotoid property)": [[67, "knotpy.classes.knotoid.Knotoid.framing"]], "get_endpoint() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.get_endpoint"]], "get_endpoint_from_pair() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.get_endpoint_from_pair"]], "jump_over_node() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.jump_over_node"]], "name (knotoid property)": [[67, "knotpy.classes.knotoid.Knotoid.name"]], "nodes (knotoid property)": [[67, "knotpy.classes.knotoid.Knotoid.nodes"]], "permute_node() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.permute_node"]], "py3_cmp() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.py3_cmp"]], "relabel_nodes() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.relabel_nodes"]], "remove_node() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.remove_node"]], "rotate_node_ccw() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.rotate_node_ccw"]], "set_arc() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.set_arc"]], "set_arcs_from() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.set_arcs_from"]], "set_endpoint() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.set_endpoint"]], "terminals (knotoid property)": [[67, "knotpy.classes.knotoid.Knotoid.terminals"]], "twin() (knotoid method)": [[67, "knotpy.classes.knotoid.Knotoid.twin"]], "knotpy.classes.node": [[68, "module-knotpy.classes.node"]], "node (class in knotpy.classes.node)": [[69, "knotpy.classes.node.Node"]], "__init__() (node method)": [[69, "knotpy.classes.node.Node.__init__"]], "py3_cmp() (node method)": [[69, "knotpy.classes.node.Node.py3_cmp"]], "knotpy.classes.orientedknot": [[70, "module-knotpy.classes.orientedknot"]], "knotpy.classes.planardiagram": [[71, "module-knotpy.classes.planardiagram"]], "planardiagram (class in knotpy.classes.planardiagram)": [[72, "knotpy.classes.planardiagram.PlanarDiagram"]], "__init__() (planardiagram method)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.__init__"]], "add_node() (planardiagram method)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.add_node"]], "add_nodes_from() (planardiagram method)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.add_nodes_from"]], "arcs (planardiagram property)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.arcs"]], "clear() (planardiagram method)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.clear"]], "copy() (planardiagram method)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.copy"]], "endpoints (planardiagram property)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.endpoints"]], "faces (planardiagram property)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.faces"]], "framing (planardiagram property)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.framing"]], "get_endpoint() (planardiagram method)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.get_endpoint"]], "get_endpoint_from_pair() (planardiagram method)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.get_endpoint_from_pair"]], "jump_over_node() (planardiagram method)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.jump_over_node"]], "name (planardiagram property)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.name"]], "nodes (planardiagram property)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.nodes"]], "permute_node() (planardiagram method)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.permute_node"]], "py3_cmp() (planardiagram method)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.py3_cmp"]], "relabel_nodes() (planardiagram method)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.relabel_nodes"]], "remove_node() (planardiagram method)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.remove_node"]], "rotate_node_ccw() (planardiagram method)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.rotate_node_ccw"]], "set_arc() (planardiagram method)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.set_arc"]], "set_arcs_from() (planardiagram method)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.set_arcs_from"]], "set_endpoint() (planardiagram method)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.set_endpoint"]], "twin() (planardiagram method)": [[72, "knotpy.classes.planardiagram.PlanarDiagram.twin"]], "knotpy.classes.planargraph": [[73, "module-knotpy.classes.planargraph"]], "orientedplanargraph (class in knotpy.classes.planargraph)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph"]], "__init__() (orientedplanargraph method)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.__init__"]], "add_node() (orientedplanargraph method)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.add_node"]], "add_nodes_from() (orientedplanargraph method)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.add_nodes_from"]], "arcs (orientedplanargraph property)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.arcs"]], "clear() (orientedplanargraph method)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.clear"]], "copy() (orientedplanargraph method)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.copy"]], "endpoints (orientedplanargraph property)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.endpoints"]], "faces (orientedplanargraph property)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.faces"]], "framing (orientedplanargraph property)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.framing"]], "get_endpoint() (orientedplanargraph method)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.get_endpoint"]], "get_endpoint_from_pair() (orientedplanargraph method)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.get_endpoint_from_pair"]], "jump_over_node() (orientedplanargraph method)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.jump_over_node"]], "name (orientedplanargraph property)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.name"]], "nodes (orientedplanargraph property)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.nodes"]], "permute_node() (orientedplanargraph method)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.permute_node"]], "py3_cmp() (orientedplanargraph method)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.py3_cmp"]], "relabel_nodes() (orientedplanargraph method)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.relabel_nodes"]], "remove_node() (orientedplanargraph method)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.remove_node"]], "rotate_node_ccw() (orientedplanargraph method)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.rotate_node_ccw"]], "set_arc() (orientedplanargraph method)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.set_arc"]], "set_arcs_from() (orientedplanargraph method)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.set_arcs_from"]], "set_endpoint() (orientedplanargraph method)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.set_endpoint"]], "twin() (orientedplanargraph method)": [[74, "knotpy.classes.planargraph.OrientedPlanarGraph.twin"]], "planargraph (class in knotpy.classes.planargraph)": [[75, "knotpy.classes.planargraph.PlanarGraph"]], "__init__() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.__init__"]], "add_node() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.add_node"]], "add_nodes_from() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.add_nodes_from"]], "add_vertex() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.add_vertex"]], "add_vertices_from() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.add_vertices_from"]], "arcs (planargraph property)": [[75, "knotpy.classes.planargraph.PlanarGraph.arcs"]], "clear() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.clear"]], "copy() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.copy"]], "endpoints (planargraph property)": [[75, "knotpy.classes.planargraph.PlanarGraph.endpoints"]], "faces (planargraph property)": [[75, "knotpy.classes.planargraph.PlanarGraph.faces"]], "framing (planargraph property)": [[75, "knotpy.classes.planargraph.PlanarGraph.framing"]], "get_endpoint() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.get_endpoint"]], "get_endpoint_from_pair() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.get_endpoint_from_pair"]], "jump_over_node() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.jump_over_node"]], "name (planargraph property)": [[75, "knotpy.classes.planargraph.PlanarGraph.name"]], "nodes (planargraph property)": [[75, "knotpy.classes.planargraph.PlanarGraph.nodes"]], "permute_node() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.permute_node"]], "py3_cmp() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.py3_cmp"]], "relabel_nodes() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.relabel_nodes"]], "remove_node() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.remove_node"]], "rotate_node_ccw() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.rotate_node_ccw"]], "set_arc() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.set_arc"]], "set_arcs_from() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.set_arcs_from"]], "set_endpoint() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.set_endpoint"]], "twin() (planargraph method)": [[75, "knotpy.classes.planargraph.PlanarGraph.twin"]], "vertices (planargraph property)": [[75, "knotpy.classes.planargraph.PlanarGraph.vertices"]], "knotpy.classes.spatialgraph": [[76, "module-knotpy.classes.spatialgraph"]], "orientedspatialgraph (class in knotpy.classes.spatialgraph)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph"]], "__init__() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.__init__"]], "add_bivalent_vertex() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.add_bivalent_vertex"]], "add_bivalent_vertices() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.add_bivalent_vertices"]], "add_crossing() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.add_crossing"]], "add_crossings_from() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.add_crossings_from"]], "add_node() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.add_node"]], "add_nodes_from() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.add_nodes_from"]], "add_vertex() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.add_vertex"]], "add_vertices_from() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.add_vertices_from"]], "arcs (orientedspatialgraph property)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.arcs"]], "bivalent_vertices (orientedspatialgraph property)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.bivalent_vertices"]], "clear() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.clear"]], "copy() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.copy"]], "crossings (orientedspatialgraph property)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.crossings"]], "endpoints (orientedspatialgraph property)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.endpoints"]], "faces (orientedspatialgraph property)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.faces"]], "framing (orientedspatialgraph property)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.framing"]], "get_endpoint() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.get_endpoint"]], "get_endpoint_from_pair() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.get_endpoint_from_pair"]], "jump_over_node() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.jump_over_node"]], "name (orientedspatialgraph property)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.name"]], "nodes (orientedspatialgraph property)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.nodes"]], "permute_node() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.permute_node"]], "py3_cmp() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.py3_cmp"]], "relabel_nodes() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.relabel_nodes"]], "remove_node() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.remove_node"]], "rotate_node_ccw() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.rotate_node_ccw"]], "set_arc() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.set_arc"]], "set_arcs_from() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.set_arcs_from"]], "set_endpoint() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.set_endpoint"]], "twin() (orientedspatialgraph method)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.twin"]], "vertices (orientedspatialgraph property)": [[77, "knotpy.classes.spatialgraph.OrientedSpatialGraph.vertices"]], "spatialgraph (class in knotpy.classes.spatialgraph)": [[78, "knotpy.classes.spatialgraph.SpatialGraph"]], "__init__() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.__init__"]], "add_bivalent_vertex() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.add_bivalent_vertex"]], "add_bivalent_vertices() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.add_bivalent_vertices"]], "add_crossing() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.add_crossing"]], "add_crossings_from() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.add_crossings_from"]], "add_node() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.add_node"]], "add_nodes_from() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.add_nodes_from"]], "add_vertex() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.add_vertex"]], "add_vertices_from() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.add_vertices_from"]], "arcs (spatialgraph property)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.arcs"]], "bivalent_vertices (spatialgraph property)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.bivalent_vertices"]], "clear() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.clear"]], "copy() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.copy"]], "crossings (spatialgraph property)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.crossings"]], "endpoints (spatialgraph property)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.endpoints"]], "faces (spatialgraph property)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.faces"]], "framing (spatialgraph property)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.framing"]], "get_endpoint() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.get_endpoint"]], "get_endpoint_from_pair() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.get_endpoint_from_pair"]], "jump_over_node() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.jump_over_node"]], "name (spatialgraph property)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.name"]], "nodes (spatialgraph property)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.nodes"]], "permute_node() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.permute_node"]], "py3_cmp() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.py3_cmp"]], "relabel_nodes() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.relabel_nodes"]], "remove_node() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.remove_node"]], "rotate_node_ccw() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.rotate_node_ccw"]], "set_arc() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.set_arc"]], "set_arcs_from() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.set_arcs_from"]], "set_endpoint() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.set_endpoint"]], "twin() (spatialgraph method)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.twin"]], "vertices (spatialgraph property)": [[78, "knotpy.classes.spatialgraph.SpatialGraph.vertices"]], "knotpy.classes.tangle": [[79, "module-knotpy.classes.tangle"]], "tangle (class in knotpy.classes.tangle)": [[80, "knotpy.classes.tangle.Tangle"]], "__init__() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.__init__"]], "add_bivalent_vertex() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.add_bivalent_vertex"]], "add_bivalent_vertices() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.add_bivalent_vertices"]], "add_crossing() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.add_crossing"]], "add_crossings_from() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.add_crossings_from"]], "add_node() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.add_node"]], "add_nodes_from() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.add_nodes_from"]], "add_terminal() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.add_terminal"]], "add_terminals_from() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.add_terminals_from"]], "arcs (tangle property)": [[80, "knotpy.classes.tangle.Tangle.arcs"]], "bivalent_vertices (tangle property)": [[80, "knotpy.classes.tangle.Tangle.bivalent_vertices"]], "clear() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.clear"]], "copy() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.copy"]], "crossings (tangle property)": [[80, "knotpy.classes.tangle.Tangle.crossings"]], "endpoints (tangle property)": [[80, "knotpy.classes.tangle.Tangle.endpoints"]], "faces (tangle property)": [[80, "knotpy.classes.tangle.Tangle.faces"]], "framing (tangle property)": [[80, "knotpy.classes.tangle.Tangle.framing"]], "get_endpoint() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.get_endpoint"]], "get_endpoint_from_pair() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.get_endpoint_from_pair"]], "jump_over_node() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.jump_over_node"]], "name (tangle property)": [[80, "knotpy.classes.tangle.Tangle.name"]], "nodes (tangle property)": [[80, "knotpy.classes.tangle.Tangle.nodes"]], "permute_node() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.permute_node"]], "py3_cmp() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.py3_cmp"]], "relabel_nodes() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.relabel_nodes"]], "remove_node() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.remove_node"]], "rotate_node_ccw() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.rotate_node_ccw"]], "set_arc() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.set_arc"]], "set_arcs_from() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.set_arcs_from"]], "set_endpoint() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.set_endpoint"]], "terminals (tangle property)": [[80, "knotpy.classes.tangle.Tangle.terminals"]], "twin() (tangle method)": [[80, "knotpy.classes.tangle.Tangle.twin"]], "knotpy.classes.tests": [[81, "module-knotpy.classes.tests"]], "knotpy.classes.tests.endpoint_tests": [[82, "module-knotpy.classes.tests.endpoint_tests"]], "knotpy.classes.views": [[83, "module-knotpy.classes.views"]], "arcview (class in knotpy.classes.views)": [[84, "knotpy.classes.views.ArcView"]], "__init__() (arcview method)": [[84, "knotpy.classes.views.ArcView.__init__"]], "get() (arcview method)": [[84, "knotpy.classes.views.ArcView.get"]], "isdisjoint() (arcview method)": [[84, "knotpy.classes.views.ArcView.isdisjoint"]], "items() (arcview method)": [[84, "knotpy.classes.views.ArcView.items"]], "keys() (arcview method)": [[84, "knotpy.classes.views.ArcView.keys"]], "values() (arcview method)": [[84, "knotpy.classes.views.ArcView.values"]], "endpointview (class in knotpy.classes.views)": [[85, "knotpy.classes.views.EndpointView"]], "__init__() (endpointview method)": [[85, "knotpy.classes.views.EndpointView.__init__"]], "get() (endpointview method)": [[85, "knotpy.classes.views.EndpointView.get"]], "isdisjoint() (endpointview method)": [[85, "knotpy.classes.views.EndpointView.isdisjoint"]], "items() (endpointview method)": [[85, "knotpy.classes.views.EndpointView.items"]], "keys() (endpointview method)": [[85, "knotpy.classes.views.EndpointView.keys"]], "values() (endpointview method)": [[85, "knotpy.classes.views.EndpointView.values"]], "faceview (class in knotpy.classes.views)": [[86, "knotpy.classes.views.FaceView"]], "__init__() (faceview method)": [[86, "knotpy.classes.views.FaceView.__init__"]], "get() (faceview method)": [[86, "knotpy.classes.views.FaceView.get"]], "isdisjoint() (faceview method)": [[86, "knotpy.classes.views.FaceView.isdisjoint"]], "items() (faceview method)": [[86, "knotpy.classes.views.FaceView.items"]], "keys() (faceview method)": [[86, "knotpy.classes.views.FaceView.keys"]], "values() (faceview method)": [[86, "knotpy.classes.views.FaceView.values"]], "filterednodeview (class in knotpy.classes.views)": [[87, "knotpy.classes.views.FilteredNodeView"]], "__init__() (filterednodeview method)": [[87, "knotpy.classes.views.FilteredNodeView.__init__"]], "get() (filterednodeview method)": [[87, "knotpy.classes.views.FilteredNodeView.get"]], "isdisjoint() (filterednodeview method)": [[87, "knotpy.classes.views.FilteredNodeView.isdisjoint"]], "items() (filterednodeview method)": [[87, "knotpy.classes.views.FilteredNodeView.items"]], "keys() (filterednodeview method)": [[87, "knotpy.classes.views.FilteredNodeView.keys"]], "values() (filterednodeview method)": [[87, "knotpy.classes.views.FilteredNodeView.values"]], "nodeview (class in knotpy.classes.views)": [[88, "knotpy.classes.views.NodeView"]], "__init__() (nodeview method)": [[88, "knotpy.classes.views.NodeView.__init__"]], "get() (nodeview method)": [[88, "knotpy.classes.views.NodeView.get"]], "isdisjoint() (nodeview method)": [[88, "knotpy.classes.views.NodeView.isdisjoint"]], "items() (nodeview method)": [[88, "knotpy.classes.views.NodeView.items"]], "keys() (nodeview method)": [[88, "knotpy.classes.views.NodeView.keys"]], "values() (nodeview method)": [[88, "knotpy.classes.views.NodeView.values"]], "knotpy.drawing": [[89, "module-knotpy.drawing"]], "knotpy.drawing.circlepack": [[90, "module-knotpy.drawing.circlepack"]], "circlepack() (in module knotpy.drawing.circlepack)": [[91, "knotpy.drawing.circlepack.CirclePack"]], "invertaround() (in module knotpy.drawing.circlepack)": [[92, "knotpy.drawing.circlepack.InvertAround"]], "invertpacking() (in module knotpy.drawing.circlepack)": [[93, "knotpy.drawing.circlepack.InvertPacking"]], "normalizepacking() (in module knotpy.drawing.circlepack)": [[94, "knotpy.drawing.circlepack.NormalizePacking"]], "acxyz() (in module knotpy.drawing.circlepack)": [[95, "knotpy.drawing.circlepack.acxyz"]], "flower() (in module knotpy.drawing.circlepack)": [[96, "knotpy.drawing.circlepack.flower"]], "place() (in module knotpy.drawing.circlepack)": [[97, "knotpy.drawing.circlepack.place"]], "testgrid() (in module knotpy.drawing.circlepack)": [[98, "knotpy.drawing.circlepack.testgrid"]], "knotpy.drawing.draw_matplotlib": [[99, "module-knotpy.drawing.draw_matplotlib"]], "arrow (class in knotpy.drawing.draw_matplotlib)": [[100, "knotpy.drawing.draw_matplotlib.Arrow"]], "__init__() (arrow method)": [[100, "knotpy.drawing.draw_matplotlib.Arrow.__init__"]], "average_color() (in module knotpy.drawing.draw_matplotlib)": [[101, "knotpy.drawing.draw_matplotlib.average_color"]], "draw() (in module knotpy.drawing.draw_matplotlib)": [[102, "knotpy.drawing.draw_matplotlib.draw"]], "draw_from_layout() (in module knotpy.drawing.draw_matplotlib)": [[103, "knotpy.drawing.draw_matplotlib.draw_from_layout"]], "export_pdf() (in module knotpy.drawing.draw_matplotlib)": [[104, "knotpy.drawing.draw_matplotlib.export_pdf"]], "to_color() (in module knotpy.drawing.draw_matplotlib)": [[105, "knotpy.drawing.draw_matplotlib.to_color"]], "knotpy.drawing.layout": [[106, "module-knotpy.drawing.layout"]], "bezier() (in module knotpy.drawing.layout)": [[107, "knotpy.drawing.layout.bezier"]], "circlepack_layout() (in module knotpy.drawing.layout)": [[108, "knotpy.drawing.layout.circlepack_layout"]], "preprocess_diagram() (in module knotpy.drawing.layout)": [[109, "knotpy.drawing.layout.preprocess_diagram"]], "knotpy.drawing.test": [[110, "module-knotpy.drawing.test"]], "plot_circles() (in module knotpy.drawing.test)": [[111, "knotpy.drawing.test.plot_circles"]], "knotpy.drawing.test2": [[112, "module-knotpy.drawing.test2"]], "knotpy.generate": [[113, "module-knotpy.generate"]], "knotpy.generate.conversions": [[114, "module-knotpy.generate.conversions"]], "orientations() (in module knotpy.generate.conversions)": [[115, "knotpy.generate.conversions.orientations"]], "knotpy.generate.example": [[116, "module-knotpy.generate.example"]], "example_spatial_graph() (in module knotpy.generate.example)": [[117, "knotpy.generate.example.example_spatial_graph"]], "handcuff_theta() (in module knotpy.generate.example)": [[118, "knotpy.generate.example.handcuff_theta"]], "oriented_trefoil() (in module knotpy.generate.example)": [[119, "knotpy.generate.example.oriented_trefoil"]], "trefoil_knot() (in module knotpy.generate.example)": [[120, "knotpy.generate.example.trefoil_knot"]], "trefoil_theta() (in module knotpy.generate.example)": [[121, "knotpy.generate.example.trefoil_theta"]], "knotpy.generate.generate_planar_graphs": [[122, "module-knotpy.generate.generate_planar_graphs"]], "generate_planar_graphs() (in module knotpy.generate.generate_planar_graphs)": [[123, "knotpy.generate.generate_planar_graphs.generate_planar_graphs"]], "sort_graphs() (in module knotpy.generate.generate_planar_graphs)": [[124, "knotpy.generate.generate_planar_graphs.sort_graphs"]], "knotpy.generate.simple": [[125, "module-knotpy.generate.simple"]], "empty_knot() (in module knotpy.generate.simple)": [[126, "knotpy.generate.simple.empty_knot"]], "parallel_edge() (in module knotpy.generate.simple)": [[127, "knotpy.generate.simple.parallel_edge"]], "knotpy.generate.simple_tangles": [[128, "module-knotpy.generate.simple_tangles"]], "horizontal_tangle() (in module knotpy.generate.simple_tangles)": [[129, "knotpy.generate.simple_tangles.horizontal_tangle"]], "integer_tangle() (in module knotpy.generate.simple_tangles)": [[130, "knotpy.generate.simple_tangles.integer_tangle"]], "vertical_tangle() (in module knotpy.generate.simple_tangles)": [[131, "knotpy.generate.simple_tangles.vertical_tangle"]], "knotpy.invariants": [[132, "module-knotpy.invariants"]], "knotpy.invariants.bracket": [[133, "module-knotpy.invariants.bracket"]], "bracket_polynomial() (in module knotpy.invariants.bracket)": [[134, "knotpy.invariants.bracket.bracket_polynomial"]], "knotpy.invariants.module": [[135, "module-knotpy.invariants.module"]], "module (class in knotpy.invariants.module)": [[136, "knotpy.invariants.module.Module"]], "__init__() (module method)": [[136, "knotpy.invariants.module.Module.__init__"]], "knotpy.invariants.yamada": [[137, "module-knotpy.invariants.yamada"]], "yamada() (in module knotpy.invariants.yamada)": [[138, "knotpy.invariants.yamada.yamada"]], "knotpy.manipulation": [[139, "module-knotpy.manipulation"]], "knotpy.manipulation.elementary": [[140, "module-knotpy.manipulation.elementary"]], "copy_and_move_arc() (in module knotpy.manipulation.elementary)": [[141, "knotpy.manipulation.elementary.copy_and_move_arc"]], "knotpy.manipulation.phantom": [[142, "module-knotpy.manipulation.phantom"]], "insert_phantom_node() (in module knotpy.manipulation.phantom)": [[143, "knotpy.manipulation.phantom.insert_phantom_node"]], "insert_phantom_nodes_on_internal_arcs() (in module knotpy.manipulation.phantom)": [[144, "knotpy.manipulation.phantom.insert_phantom_nodes_on_internal_arcs"]], "is_node_phantom() (in module knotpy.manipulation.phantom)": [[145, "knotpy.manipulation.phantom.is_node_phantom"]], "knotpy.manipulation.reidemeister": [[146, "module-knotpy.manipulation.reidemeister"]], "add_kink() (in module knotpy.manipulation.reidemeister)": [[147, "knotpy.manipulation.reidemeister.add_kink"]], "reidemeister_3() (in module knotpy.manipulation.reidemeister)": [[148, "knotpy.manipulation.reidemeister.reidemeister_3"]], "remove_kink() (in module knotpy.manipulation.reidemeister)": [[149, "knotpy.manipulation.reidemeister.remove_kink"]], "remove_poke() (in module knotpy.manipulation.reidemeister)": [[150, "knotpy.manipulation.reidemeister.remove_poke"]], "knotpy.manipulation.simplification": [[151, "module-knotpy.manipulation.simplification"]], "simplify() (in module knotpy.manipulation.simplification)": [[152, "knotpy.manipulation.simplification.simplify"]], "knotpy.notation": [[153, "module-knotpy.notation"]], "knotpy.notation.dispatcher": [[154, "module-knotpy.notation.dispatcher"]], "from_notation_dispatcher() (in module knotpy.notation.dispatcher)": [[155, "knotpy.notation.dispatcher.from_notation_dispatcher"]], "to_notation_dispatcher() (in module knotpy.notation.dispatcher)": [[156, "knotpy.notation.dispatcher.to_notation_dispatcher"]], "knotpy.notation.em": [[157, "module-knotpy.notation.em"]], "from_condensed_em_notation() (in module knotpy.notation.em)": [[158, "knotpy.notation.em.from_condensed_em_notation"]], "from_em_notation() (in module knotpy.notation.em)": [[159, "knotpy.notation.em.from_em_notation"]], "to_condensed_em_notation() (in module knotpy.notation.em)": [[160, "knotpy.notation.em.to_condensed_em_notation"]], "to_em_notation() (in module knotpy.notation.em)": [[161, "knotpy.notation.em.to_em_notation"]], "knotpy.notation.native": [[162, "module-knotpy.notation.native"]], "from_knotpy_notation() (in module knotpy.notation.native)": [[163, "knotpy.notation.native.from_knotpy_notation"]], "to_knotpy_notation() (in module knotpy.notation.native)": [[164, "knotpy.notation.native.to_knotpy_notation"]], "knotpy.notation.pd": [[165, "module-knotpy.notation.pd"]], "from_pd_notation() (in module knotpy.notation.pd)": [[166, "knotpy.notation.pd.from_pd_notation"]], "to_pd_notation() (in module knotpy.notation.pd)": [[167, "knotpy.notation.pd.to_pd_notation"]], "knotpy.notation.plantri": [[168, "module-knotpy.notation.plantri"]], "from_plantri_notation() (in module knotpy.notation.plantri)": [[169, "knotpy.notation.plantri.from_plantri_notation"]], "to_plantri_notation() (in module knotpy.notation.plantri)": [[170, "knotpy.notation.plantri.to_plantri_notation"]], "knotpy.notation.tests": [[171, "module-knotpy.notation.tests"]], "knotpy.notation.tests.test_notation": [[172, "module-knotpy.notation.tests.test_notation"]], "knotpy.readwrite": [[173, "module-knotpy.readwrite"]], "knotpy.readwrite.cleanopen": [[174, "module-knotpy.readwrite.cleanopen"]], "prepend_to_extension() (in module knotpy.readwrite.cleanopen)": [[175, "knotpy.readwrite.cleanopen.prepend_to_extension"]], "knotpy.readwrite.text": [[176, "module-knotpy.readwrite.text"]], "loadtxt_iterator() (in module knotpy.readwrite.text)": [[177, "knotpy.readwrite.text.loadtxt_iterator"]], "loadtxt_multiple() (in module knotpy.readwrite.text)": [[178, "knotpy.readwrite.text.loadtxt_multiple"]], "save_txt() (in module knotpy.readwrite.text)": [[179, "knotpy.readwrite.text.save_txt"]], "knotpy.utils": [[180, "module-knotpy.utils"]], "knotpy.utils.combinatorics": [[181, "module-knotpy.utils.combinatorics"]], "combinations_with_limited_repetitions() (in module knotpy.utils.combinatorics)": [[182, "knotpy.utils.combinatorics.combinations_with_limited_repetitions"]], "iterable_depth() (in module knotpy.utils.combinatorics)": [[183, "knotpy.utils.combinatorics.iterable_depth"]], "lexicographical_minimal_cyclic_rotation_shift() (in module knotpy.utils.combinatorics)": [[184, "knotpy.utils.combinatorics.lexicographical_minimal_cyclic_rotation_shift"]], "parted_permutations() (in module knotpy.utils.combinatorics)": [[185, "knotpy.utils.combinatorics.parted_permutations"]], "union() (in module knotpy.utils.combinatorics)": [[186, "knotpy.utils.combinatorics.union"]], "knotpy.utils.decorators": [[187, "module-knotpy.utils.decorators"]], "multi_variable_invariant() (in module knotpy.utils.decorators)": [[188, "knotpy.utils.decorators.multi_variable_invariant"]], "total_ordering_py3() (in module knotpy.utils.decorators)": [[189, "knotpy.utils.decorators.total_ordering_py3"]], "knotpy.utils.dict_utils": [[190, "module-knotpy.utils.dict_utils"]], "compare_dicts() (in module knotpy.utils.dict_utils)": [[191, "knotpy.utils.dict_utils.compare_dicts"]], "__init__() (identitydict method)": [[192, "knotpy.utils.dict_utils.identitydict.__init__"]], "clear() (identitydict method)": [[192, "knotpy.utils.dict_utils.identitydict.clear"]], "copy() (identitydict method)": [[192, "knotpy.utils.dict_utils.identitydict.copy"]], "default_factory (identitydict attribute)": [[192, "knotpy.utils.dict_utils.identitydict.default_factory"]], "fromkeys() (identitydict method)": [[192, "knotpy.utils.dict_utils.identitydict.fromkeys"]], "get() (identitydict method)": [[192, "knotpy.utils.dict_utils.identitydict.get"]], "identitydict (class in knotpy.utils.dict_utils)": [[192, "knotpy.utils.dict_utils.identitydict"]], "items() (identitydict method)": [[192, "knotpy.utils.dict_utils.identitydict.items"]], "keys() (identitydict method)": [[192, "knotpy.utils.dict_utils.identitydict.keys"]], "pop() (identitydict method)": [[192, "knotpy.utils.dict_utils.identitydict.pop"]], "popitem() (identitydict method)": [[192, "knotpy.utils.dict_utils.identitydict.popitem"]], "setdefault() (identitydict method)": [[192, "knotpy.utils.dict_utils.identitydict.setdefault"]], "update() (identitydict method)": [[192, "knotpy.utils.dict_utils.identitydict.update"]], "values() (identitydict method)": [[192, "knotpy.utils.dict_utils.identitydict.values"]], "inverse_dict() (in module knotpy.utils.dict_utils)": [[193, "knotpy.utils.dict_utils.inverse_dict"]], "inverse_multi_dict() (in module knotpy.utils.dict_utils)": [[194, "knotpy.utils.dict_utils.inverse_multi_dict"]], "knotpy.utils.equivalence": [[195, "module-knotpy.utils.equivalence"]], "equivalencerelation (class in knotpy.utils.equivalence)": [[196, "knotpy.utils.equivalence.EquivalenceRelation"]], "__init__() (equivalencerelation method)": [[196, "knotpy.utils.equivalence.EquivalenceRelation.__init__"]], "clear() (equivalencerelation method)": [[196, "knotpy.utils.equivalence.EquivalenceRelation.clear"]], "copy() (equivalencerelation method)": [[196, "knotpy.utils.equivalence.EquivalenceRelation.copy"]], "fromkeys() (equivalencerelation method)": [[196, "knotpy.utils.equivalence.EquivalenceRelation.fromkeys"]], "get() (equivalencerelation method)": [[196, "knotpy.utils.equivalence.EquivalenceRelation.get"]], "items() (equivalencerelation method)": [[196, "knotpy.utils.equivalence.EquivalenceRelation.items"]], "keys() (equivalencerelation method)": [[196, "knotpy.utils.equivalence.EquivalenceRelation.keys"]], "pop() (equivalencerelation method)": [[196, "knotpy.utils.equivalence.EquivalenceRelation.pop"]], "popitem() (equivalencerelation method)": [[196, "knotpy.utils.equivalence.EquivalenceRelation.popitem"]], "setdefault() (equivalencerelation method)": [[196, "knotpy.utils.equivalence.EquivalenceRelation.setdefault"]], "update() (equivalencerelation method)": [[196, "knotpy.utils.equivalence.EquivalenceRelation.update"]], "values() (equivalencerelation method)": [[196, "knotpy.utils.equivalence.EquivalenceRelation.values"]], "knotpy.utils.exception": [[197, "module-knotpy.utils.exception"]], "knotpyexception": [[198, "knotpy.utils.exception.KnotPyException"]], "knotpy.utils.geometry": [[199, "module-knotpy.utils.geometry"]], "boundingbox (class in knotpy.utils.geometry)": [[200, "knotpy.utils.geometry.BoundingBox"]], "__init__() (boundingbox method)": [[200, "knotpy.utils.geometry.BoundingBox.__init__"]], "circle (class in knotpy.utils.geometry)": [[201, "knotpy.utils.geometry.Circle"]], "__init__() (circle method)": [[201, "knotpy.utils.geometry.Circle.__init__"]], "circulararc (class in knotpy.utils.geometry)": [[202, "knotpy.utils.geometry.CircularArc"]], "__init__() (circulararc method)": [[202, "knotpy.utils.geometry.CircularArc.__init__"]], "line (class in knotpy.utils.geometry)": [[203, "knotpy.utils.geometry.Line"]], "__init__() (line method)": [[203, "knotpy.utils.geometry.Line.__init__"]], "parameter_from_point() (line method)": [[203, "knotpy.utils.geometry.Line.parameter_from_point"]], "segment (class in knotpy.utils.geometry)": [[204, "knotpy.utils.geometry.Segment"]], "__init__() (segment method)": [[204, "knotpy.utils.geometry.Segment.__init__"]], "parameter_from_point() (segment method)": [[204, "knotpy.utils.geometry.Segment.parameter_from_point"]], "antipode() (in module knotpy.utils.geometry)": [[205, "knotpy.utils.geometry.antipode"]], "bisect() (in module knotpy.utils.geometry)": [[206, "knotpy.utils.geometry.bisect"]], "bisector() (in module knotpy.utils.geometry)": [[207, "knotpy.utils.geometry.bisector"]], "bounding_box() (in module knotpy.utils.geometry)": [[208, "knotpy.utils.geometry.bounding_box"]], "circle_through_points() (in module knotpy.utils.geometry)": [[209, "knotpy.utils.geometry.circle_through_points"]], "inverse_point_through_circle() (in module knotpy.utils.geometry)": [[210, "knotpy.utils.geometry.inverse_point_through_circle"]], "is_angle_between() (in module knotpy.utils.geometry)": [[211, "knotpy.utils.geometry.is_angle_between"]], "middle() (in module knotpy.utils.geometry)": [[212, "knotpy.utils.geometry.middle"]], "perpendicular_arc() (in module knotpy.utils.geometry)": [[213, "knotpy.utils.geometry.perpendicular_arc"]], "perpendicular_arc_through_point() (in module knotpy.utils.geometry)": [[214, "knotpy.utils.geometry.perpendicular_arc_through_point"]], "perpendicular_line() (in module knotpy.utils.geometry)": [[215, "knotpy.utils.geometry.perpendicular_line"]], "split() (in module knotpy.utils.geometry)": [[216, "knotpy.utils.geometry.split"]], "tangent_line() (in module knotpy.utils.geometry)": [[217, "knotpy.utils.geometry.tangent_line"]], "knotpy.utils.string_utils": [[218, "module-knotpy.utils.string_utils"]], "multi_replace() (in module knotpy.utils.string_utils)": [[219, "knotpy.utils.string_utils.multi_replace"]], "nested_split() (in module knotpy.utils.string_utils)": [[220, "knotpy.utils.string_utils.nested_split"]], "string_to_nested_tuple_with_prefixes() (in module knotpy.utils.string_utils)": [[221, "knotpy.utils.string_utils.string_to_nested_tuple_with_prefixes"]], "knotpy": [[222, "module-knotpy"]]}})